**********
* Program.: TRANFADD.PRG
* Author..: Grace Keller
* Date....: 06/13/95
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: FREIGHT/COMMISSION/TOTALS
*
* ---OPEN FILES
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     
DO 8910_TOT
MTOT_QTY = 0
DO HEAD_TOT
MMORE_FRT = .T.  
STORE SPACE(32) TO MFRT_NAME1, MFRT_NAME2, MFRT_NAME3, MSAL_NAME2, MCOM_NAME, MCOM_NAME2, MCOM_NAME3
STORE SPACE(4) TO MFRT_CODE1, MFRT_CODE2, MFRT_CODE3           
STORE 0 TO MFRT_AMT1, MFRT1_ADJ1, MFRT1_ADJ2, MFRT_AMT2, MFRT_AMT3              
STORE 0  TO MFRT_PALL
STORE SPACE(15) TO MFRT1_RS1, MFRT1_RS2                          
STORE SPACE(9) TO MREF_PO1, MREF_PO2, MREF_PO3, MREF_PO4, MREF_PO5, MREF_PO6
STORE SPACE(25) TO MSAL_NAME2, MCOM_NAME, MCOM_NAME2, MSAL_NAME3
STORE SPACE(2) TO MCOM_CODE, MSAL_CODE2, MCOM_CODE2, MCOM_CODE3, MSAL_CODE3
STORE SPACE(10) TO MMISCREAS1, MMISCREAS2, MMISCREAS3
STORE SPACE(1) TO MMISCSPLT1, MMISCSPLT2, MMISCSPLT3, MFRT2_FLG, MFRT3_FLG
STORE 0 TO MMISCAMT1, MMISCAMT2, MMISCAMT3, MSALE2_NET, MSALE3_NET

MSTORAGE = 0
IF MCOMPANY = 'DIVISION 15' .AND. MSALESMAN = '17'
   IF MPO_SUFFIX <> '8'.AND. MPO_SUFFIX <> '9'                              
      *** SEE IF THERE SHOULD BE STORAGE CALCULATED
      DO CASE
         *** COMING OUT OF INVENTORY - .0085+ .0085 + .0085 + .0085 = .034 /LB
      CASE MRSUPCODE = 'INVN'
         MSTORAGE = ROUND(.034 * MTOT_LBS,2)
         STORE 'INVN STOR ' TO MMISCREAS3
         STORE MSTORAGE TO MMISCAMT3
         STORE 'X' TO MMISCSPLT3
      CASE MRSUPCODE <> 'INVN' .AND. MBBUYCODE <> 'INVN'
         IF MBROKERAGE = 'Y' 
            *** DIRECT SALE-BUT SHORT TERM STORAGE HOLD = .0085+.0085 = .017/LB
            MSTORAGE = ROUND(.017 * MTOT_LBS,2)
            STORE 'HOLD STOR ' TO MMISCREAS3
            STORE MSTORAGE TO MMISCAMT3
            STORE 'X' TO MMISCSPLT3
         ENDIF
      ENDCASE
   ENDIF
ENDIF

SELECT F
IF MTRAN_SALE = '  '
   DO FOX_USE WITH "TRAN_PO", .F.
ELSE
   MFILE = 'TRAN_P' + MTRAN_SALE
   DO FOX_USE WITH "&MFILE", .F.
ENDIF

IF SALESMAN = MSALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX
   IF FRT_NAME = SPACE(32)
      STORE 'NONE' + SPACE(28) TO MFRT_NAME1
   ELSE
      STORE FRT_NAME TO MFRT_NAME1
   ENDIF
   STORE FRT_AMT1 TO MFRT_AMT1
   STORE FRT_PALL TO MFRT_PALL
   STORE FRT1_ADJ1 TO MFRT1_ADJ1
   STORE FRT1_ADJ2 TO MFRT1_ADJ2
   STORE FRT1_RS1 TO MFRT1_RS1
   STORE FRT1_RS2 TO MFRT1_RS2
   STORE REF_PO1  TO MREF_PO1
   STORE REF_PO2  TO MREF_PO2
   STORE REF_PO3  TO MREF_PO3
   STORE REF_PO4  TO MREF_PO4
   STORE REF_PO5  TO MREF_PO5
   STORE REF_PO6  TO MREF_PO6
   STORE MISC_AMT1 TO MMISCAMT1
   IF MSALESMAN = '44' .AND. MMISCAMT1 <> 0
      STORE 'GRAD CERT ' TO MMISCREAS1
      STORE 'X' TO MMISCSPLT1
   ENDIF
   STORE MISC_AMT2 TO MMISCAMT2
   IF MPROG_CODE = 2
      STORE MISC_AMT3 TO MMISCAMT3
   ENDIF
   **IF MPROG_CODE = 2 .OR. MSALESMAN = '44'
   IF FRT_NAME2 = SPACE(32)
      STORE 'NONE' + SPACE(28) TO MFRT_NAME2
   ELSE
      STORE FRT_NAME2 TO MFRT_NAME2
   ENDIF
   STORE FRT_AMT2 TO MFRT_AMT2
   **ENDIF
   STORE SUBSTR(COMM_NAME,1,25) TO MCOM_NAME
   STORE COMM_CENT TO MCOMM_CENT
   *IF MSALESMAN = '44'
   STORE COMM_AMT TO MCOMM_ENT
   *ENDIF
ENDIF
USE

DO FOX_USE WITH "NOTES INDEX NOTES", .F.
SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX 
IF .NOT. EOF()
   MYES_NOTES = .T.
ELSE
   MYES_NOTES = .F.
ENDIF
USE

STORE SPACE(25) TO MCOM_NAME2, MCOM_NAME3
STORE 0 TO MCOMM_CEN2, MCOMM_ENT2, MCOMM_CEN3, MCOMM_ENT3

SELECT A
DO FOX_USE WITH "&MDBFLOC.FREIGHT INDEX &MDBFLOC.FRT_NAME, &MDBFLOC.FRT_CODE", .F.
SET PROC TO FRT_PROC
DO FRT_SEL2 
IF MFRT_CODE2 <> '    ' .AND. MFRT_CODE2 <> 'NONE' .AND. MFRT_CODE2 <> 'CUST'                  
   MFRT2_FLG = 'Y'
   SELECT A
   DO FOX_USE WITH "FRT_2ND INDEX FRT2_PO, FRT2_FRT", .F.
   SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
   IF EOF()
      DO FILELOCK
      APPEND BLANK
      REPLACE SALESMAN  WITH MSALESMAN
      REPLACE PO_NBR    WITH MPO_NBR
      REPLACE PO_SUFFIX WITH MPO_SUFFIX
      REPLACE FRT_CODE2 WITH MFRT_CODE2
      UNLOCK
   ENDIF
   DO RECLOCK
   REPLACE FRT_AMT2 WITH MFRT_AMT2
   UNLOCK
ENDIF
IF MFRT_CODE3 <> '    ' .AND. MFRT_CODE3 <> 'NONE' .AND. MFRT_CODE3 <> 'CUST'                  
   MFRT3_FLG = 'Y'
   SELECT A
   DO FOX_USE WITH "FRT_3RD INDEX FRT3_PO, FRT3_FRT", .F.
   SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
   IF EOF()
      DO FILELOCK
      APPEND BLANK
      REPLACE SALESMAN  WITH MSALESMAN
      REPLACE PO_NBR    WITH MPO_NBR
      REPLACE PO_SUFFIX WITH MPO_SUFFIX
      REPLACE FRT_CODE3 WITH MFRT_CODE3
      UNLOCK
   ENDIF
   DO RECLOCK
   REPLACE FRT_AMT3 WITH MFRT_AMT3
   UNLOCK
ENDIF



MTITLE = ' - ADD PURCHASE ORDER - COMMISSION/TOTALS'    
SET PROC TO NEW_PROC 
DO SAYTOT1  
MACTION = 2
DO WHILE MACTION = 2   
   MSALE2_NET = 0
   MSALE3_NET = 0
   DO GETFRT9
   @ 24,0 SAY 'Action: 1'
   @ 24,12 SAY '1.Finish/Next PO    2.Edit    3.Finish/Return'
   READ    
   
   IF MCOM_NAME <> SPACE(25)
      SELECT A
      DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_NAME", .F.
      MCOM_FD = .F.
      STORE TRIM(MCOM_NAME) TO SRCH_ARG
      DO COM_SEL2
      IF .NOT. MCOM_FD
         MACTION = 2
         LOOP
      ENDIF
      STORE SUBSTR(NAME,1,25) TO MCOM_NAME
      STORE COM_CODE TO MCOM_CODE
      @  3,12 SAY MCOM_NAME
   ENDIF
   
   IF MCOM_NAME2 <> SPACE(25)
      SELECT A
      DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_NAME", .F.
      MCOM_FD = .F.
      STORE TRIM(MCOM_NAME2) TO SRCH_ARG
      DO COM_SEL2
      IF .NOT. MCOM_FD
         MACTION = 2
         LOOP
      ENDIF
      STORE SUBSTR(NAME,1,25) TO MCOM_NAME2
      STORE COM_CODE TO MCOM_CODE2
      @  5,12 SAY MCOM_NAME2
   ENDIF
   
   IF MSAL_NAME2 <> SPACE(25)
      SELECT A
      DO FOX_USE WITH "&MMASTDBF.SALESMAN INDEX &MMASTDBF.SAL_NAME", .F.
      SEEK TRIM(MSAL_NAME2)
      
      IF .NOT. EOF()
         STORE SUBSTR(NAME,1,25) TO MSAL_NAME2
         STORE SALE_CODE TO MSAL_CODE2
         STORE SALE_PERC TO MSALE2_PER 
         IF DTOC(EFF_DT2) <> '  /  /  '
            IF MSHIP_DATE >= EFF_DT2
               MSALE2_PER = SALE_PER2
            ENDIF
         ENDIF
         IF DTOC(EFF_DT3) <> '  /  /  '
            IF MSHIP_DATE >= EFF_DT3
               MSALE2_PER = SALE_PER3
            ENDIF
         ENDIF
         @ 3,51 SAY MSAL_NAME2
      ELSE
         **** GIVE AN ERROR HERE
         @ 24,0 CLEAR
         STORE 'INTRACOMPANY SALESPERSON NAME NOT FOUND - PRESS RETURN TO REENTER' TO MERROR
         @ 24,5 GET MERROR
         CLEAR GETS
         STORE ' ' TO MSPACE
         @ 24,63 GET MSPACE
         READ
         LOOP
      ENDIF
   ENDIF
   
   IF MSAL_NAME3 <> SPACE(25)
      SELECT A
      DO FOX_USE WITH "&MMASTDBF.SALESMAN INDEX &MMASTDBF.SAL_NAME", .F.
      SEEK TRIM(MSAL_NAME3)
      
      IF .NOT. EOF()
         STORE SUBSTR(NAME,1,25) TO MSAL_NAME3
         STORE SALE_CODE TO MSAL_CODE3
         STORE SALE_PERC TO MSALE3_PER 
         IF DTOC(EFF_DT2) <> '  /  /  '
            IF MSHIP_DATE >= EFF_DT2
               MSALE3_PER = SALE_PER2
            ENDIF
         ENDIF
         IF DTOC(EFF_DT3) <> '  /  /  '
            IF MSHIP_DATE >= EFF_DT3
               MSALE3_PER = SALE_PER3
            ENDIF
         ENDIF
         @ 6,51 SAY MSAL_NAME3
      ELSE
         **** GIVE AN ERROR HERE
         @ 24,0 CLEAR
         STORE 'INTRACOMPANY SALESPERSON NAME NOT FOUND - PRESS RETURN TO REENTER' TO MERROR
         @ 24,5 GET MERROR
         CLEAR GETS
         STORE ' ' TO MSPACE
         @ 24,63 GET MSPACE
         READ
         LOOP
      ENDIF
   ENDIF
   
   MGROSS =  (MTOT_SELL+MCUS_PALL) - (MTOT_PURCH+MSUP_PALL)
   
   MNET = MGROSS - (MFRT_AMT1  + MFRT1_ADJ1 + MFRT1_ADJ2+ MFRT_PALL) - MFRT_AMT2 - MFRT_AMT3
   
   MCOMM_AMT = 0
   IF MCOM_CODE <> SPACE(2)
      IF MCOMM_ENT <> 0
         MCOMM_AMT = MCOMM_ENT
      ELSE
         IF MCOMM_CENT <> 0
            MCOMM_AMT = ROUND(MTOT_LBS * MCOMM_CENT,2)
         ENDIF
      ENDIF
      MNET = MNET - MCOMM_AMT
   ENDIF
   
   MCOMM_AMT2 = 0
   IF MCOM_CODE2 <> SPACE(2)
      IF MCOMM_ENT2 <> 0
         MCOMM_AMT2 = MCOMM_ENT2
      ELSE
         IF MCOMM_CEN2 <> 0
            MCOMM_AMT2 = ROUND(MTOT_LBS * MCOMM_CEN2,2)
         ENDIF
      ENDIF
      MNET = MNET - MCOMM_AMT2
   ENDIF
   
   MCOMM_AMT3 = 0
   IF MCOM_CODE3 <> SPACE(2)
      IF MCOMM_ENT3 <> 0
         MCOMM_AMT3 = MCOMM_ENT3
      ELSE
         IF MCOMM_CEN3 <> 0
            MCOMM_AMT3 = ROUND(MTOT_LBS * MCOMM_CEN3,2)
         ENDIF
      ENDIF
      MNET = MNET - MCOMM_AMT3
   ENDIF
   
   
   
   DO CASE
   CASE MZERO_COMM = 'H'
      STORE 0 TO MSALE2_AMT, MSALE3_AMT, MSALE2_NET, MSALE3_NET
      STORE .F. TO MCALC2, MCALC3
      IF MSAL_CODE2 = SPACE(2)
         *** NO NEED TO CALCULATE
         MCALC2 = .T.
      ENDIF
      IF MSAL_CODE3 = SPACE(2)
         *** NO NEED TO CALCULATE
         MCALC3 = .T.
      ENDIF
      
      IF MSAL_CODE2 <> SPACE(2)
         DO CASE
         CASE MSALE2_CEN <> 0
            MAMOUNT = ROUND(MSALE2_CEN * MTOT_LBS,2)
            IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
               MSALE2_AMT = MAMOUNT
            ELSE
               MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
               MSALE2_NET = MAMOUNT - MSALE2_AMT      
            ENDIF
            MNET = MNET - MAMOUNT
            @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
            @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
            MCALC2 = .T.
         CASE MSALE2_ENT <> 0
            MSALE2_AMT = MSALE2_ENT
            MNET = MNET - (MSALE2_AMT + MSALE2_NET)
            MCALC2 = .T.
         ENDCASE
      ENDIF
      
      IF MSAL_CODE3 <> SPACE(2)
         DO CASE
         CASE MSALE3_CEN <> 0
            MAMOUNT = ROUND(MSALE3_CEN * MTOT_LBS,2)
            IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
               MSALE3_AMT = MAMOUNT
            ELSE
               MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
               MSALE3_NET = MAMOUNT - MSALE3_AMT      
            ENDIF
            MNET = MNET - MAMOUNT
            @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
            @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
            MCALC3 = .T.
         CASE MSALE3_ENT <> 0
            MSALE3_AMT = MSALE3_ENT
            MNET = MNET - (MSALE3_AMT + MSALE3_NET)
            MCALC3 = .T.
         ENDCASE
      ENDIF
      
      DO CASE
      CASE MCALC2 .AND. MCALC3
         *** NO ACTION REQUIRED
         *** CALCULATED OR NO SALESPERSON ENTERED
      CASE MCALC2 .AND. .NOT. MCALC3
         *** CALCULATED 2 - BUT NOT 3
         *** SPLIT TWO - CALC SALESPERSON 3
         MAMOUNT = ROUND(MNET/2,2)
         MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
         MSALE3_NET = MAMOUNT - MSALE3_AMT      
         MNET = MNET - MAMOUNT
         @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
         @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
      CASE MCALC3 .AND. .NOT. MCALC2
         *** CALCULATED 3 BUT NOT 2
         *** SPLIT TWO - CALC SALESPERSON 2
         MAMOUNT = ROUND(MNET/2,2)
         MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
         MSALE2_NET = MAMOUNT - MSALE2_AMT      
         MNET = MNET - MAMOUNT
         @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
         @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
         
      OTHERWISE
         *** CALCULATED NO ONE BUT NEED TO CALCULATED 2 & 3
         *** SPLIT THREE WAYS - CALC SALESPERSON 2 & 3
         MAMOUNT = ROUND(MNET/2,3)
         
         MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
         MSALE2_NET = MAMOUNT - MSALE2_AMT      
         MNET = MNET - MAMOUNT
         @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
         @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
         
         MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
         MSALE3_NET = MAMOUNT - MSALE3_AMT      
         MNET = MNET - MAMOUNT
         @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
         @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
         
      ENDCASE
      
      
      MSALE_COMM = 0
      IF MZERO_COMM <> 'X'
         IF MSALE_ENT <> 0
            MSALE_COMM = MSALE_ENT
         ELSE
            IF MSALE_CENT <> 0
               MSALE_COMM = ROUND(MTOT_LBS * MSALE_CENT,2)
            ELSE
               MSALE_COMM = ROUND((MSALE_PERC * .01) * MNET,2)
            ENDIF
         ENDIF
      ENDIF
      
   OTHERWISE
      
      MSALE2_AMT = 0
      MSALE3_AMT = 0
      MSALE2_NET = 0
      MSALE3_NET = 0
      
      IF MSAL_CODE2 <> SPACE(2)
         IF MSALE2_CEN <> 0
            MSALE2_NET = 0
            MAMOUNT = ROUND(MSALE2_CEN * MTOT_LBS,2)
            **IF MSAL_CODE2 = '11'
            IF MCOMPANY = 'AMERICHICKEN, INC.' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
               MSALE2_AMT = MAMOUNT
            ELSE
               MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
               MSALE2_NET = MAMOUNT - MSALE2_AMT      
            ENDIF
            MNET = MNET - MAMOUNT
            @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
            @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
         ELSE
            MSALE2_AMT = MSALE2_ENT
            MNET = MNET - (MSALE2_AMT + MSALE2_NET)
         ENDIF
      ENDIF
      
      IF MSAL_CODE3 <> SPACE(2)
         IF MSALE3_CEN <> 0
            MSALE3_NET = 0
            MAMOUNT = ROUND(MSALE3_CEN * MTOT_LBS,2)
            IF MCOMPANY = 'AMERICHICKEN, INC.' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
               MSALE3_AMT = MAMOUNT
            ELSE
               MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
               MSALE3_NET = MAMOUNT - MSALE3_AMT      
            ENDIF
            MNET = MNET - MAMOUNT
            @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
            @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
         ELSE
            MSALE3_AMT = MSALE3_ENT
            MNET = MNET - (MSALE3_AMT + MSALE3_NET)
         ENDIF
      ENDIF
      
      MSALE_COMM = 0
      IF MZERO_COMM <> 'X'
         IF MSALE_ENT <> 0
            MSALE_COMM = MSALE_ENT
         ELSE
            IF MSALE_CENT <> 0
               MSALE_COMM = ROUND(MTOT_LBS * MSALE_CENT,2)
            ELSE
               MSALE_COMM = ROUND((MSALE_PERC * .01) * MNET,2)
            ENDIF
         ENDIF
      ENDIF
   ENDCASE
   
   IF MMISCAMT1 <> 0
      IF MMISCSPLT1 = 'X'
         MCOMSPLT1 = ROUND((MSALE_PERC * .01) * MMISCAMT1,2) 
         MNETSPLT1 = MMISCAMT1 - MCOMSPLT1
      ELSE 
         STORE 0 TO MCOMSPLT1
         STORE MMISCAMT1 TO MNETSPLT1
      ENDIF
      @ 12,57 SAY MCOMSPLT1 PICTURE '99999.99'
      @ 12,68 SAY MNETSPLT1 PICTURE '99999.99'
   ELSE
      STORE 0 TO MCOMSPLT1, MNETSPLT1
      @ 12,57 SAY MCOMSPLT1 PICTURE '99999.99'
      @ 12,68 SAY MNETSPLT1 PICTURE '99999.99'
   ENDIF
   
   IF MMISCAMT2 <> 0
      IF MMISCSPLT2 = 'X'
         MCOMSPLT2 = ROUND((MSALE_PERC * .01) * MMISCAMT2,2) 
         MNETSPLT2 = MMISCAMT2 - MCOMSPLT2
      ELSE 
         STORE 0 TO MCOMSPLT2
         STORE MMISCAMT2 TO MNETSPLT2
      ENDIF
      @ 13,57 SAY MCOMSPLT2 PICTURE '99999.99'
      @ 13,68 SAY MNETSPLT2 PICTURE '99999.99'
   ELSE
      STORE 0 TO MCOMSPLT2, MNETSPLT2
      @ 13,57 SAY MCOMSPLT2 PICTURE '99999.99'
      @ 13,68 SAY MNETSPLT2 PICTURE '99999.99'
   ENDIF
   
   IF MMISCAMT3 <> 0
      IF MMISCSPLT3 = 'X'
         MCOMSPLT3 = ROUND((MSALE_PERC * .01) * MMISCAMT3,2) 
         MNETSPLT3 = MMISCAMT3 - MCOMSPLT3
      ELSE 
         STORE 0 TO MCOMSPLT3
         STORE MMISCAMT3 TO MNETSPLT3
      ENDIF
      *@ 13,57 SAY MCOMSPLT3 PICTURE '99999.99'
      *@ 13,68 SAY MNETSPLT3 PICTURE '99999.99'
   ELSE
      STORE 0 TO MCOMSPLT3, MNETSPLT3
      *@ 13,57 SAY MCOMSPLT3 PICTURE '99999.99'
      *@ 13,68 SAY MNETSPLT3 PICTURE '99999.99'
   ENDIF
   MSALE_COMM = MSALE_COMM - MCOMSPLT1 - MCOMSPLT2 - MCOMSPLT3
   MNET = MNET - MSALE_COMM
   *   MNET = MNET - MNETSPLT1 - MNETSPLT2 - MNETSPLT3
   MNET = MNET - MMISCAMT1 - MMISCAMT2 - MMISCAMT3
   DO SAYTOT9 
   
   IF MYES_NOTES
      STORE 4 TO MACTION
   ELSE
      STORE 1 TO MACTION
   ENDIF
   @ 24,0 SAY 'Action: ' + STR(MACTION,1)
   @ 24,12 SAY '1.Finish/Next PO    2.Edit    3.Finish/Return   4.Update Notes'
   @ 24,8 GET MACTION PICTURE '#' RANGE 1,4
   READ
   IF MACTION = 4
      SAVE SCREEN TO MGRACE
      DO UPDNOTES
      RESTORE SCREEN FROM MGRACE
      STORE 1 TO MACTION
      @ 24,0 CLEAR
      @ 24,0 SAY 'Action: '
      @ 24,12 SAY '1.Finish/Next PO    2.Edit    3.Finish/Return'
      @ 24,8 GET MACTION PICTURE '#' RANGE 1,3
      READ
   ENDIF
ENDDO

**** CHECK TO SEE IF THE CUSTOMER IS OVER THE CREDIT LIMIT 
SELECT E
DO FOX_USE WITH "&MDBFLOC.BIL_BUY INDEX &MDBFLOC.BBUYCODE", .F.
SEEK B->BBUYCODE
DO RECLOCK  
REPLACE CUS_BAL WITH CUS_BAL + MTOT_SELL + MCUS_PALL
UNLOCK
*IF CUS_BAL > CRED_LIM
*   @ 24,0 CLEAR
*   MWAIT = '  '
*   DO WHILE MWAIT <> 'OK'
*      @ 24,1 SAY 'WARNING:Customer OVER Credit Limit -Please Notify- Enter "OK" to Continue ' GET MWAIT PICTURE '@!'
*      READ
*   ENDDO
*   SELECT E
*   DO FOX_USE WITH "OVER_LIM", .F.
*   DO FILELOCK
*   APPEND BLANK
*   REPLACE SALESMAN  WITH MSALESMAN
*   REPLACE PO_NBR    WITH MPO_NBR
*   REPLACE PO_SUFFIX WITH MPO_SUFFIX
*   REPLACE BBUYCODE  WITH MBBUYCODE
*   UNLOCK
*   USE
*ENDIF
SELECT E
USE

SELECT B
SET PROC TO PO_PROC
DO REPLFRT
IF MMISCAMT1 <> 0 .OR. MMISCAMT2 <> 0 .OR. MMISCAMT3 <> 0
   SELECT E
   DO FOX_USE WITH "MISC_CHG INDEX MISC_CHG", .F.
   
   IF B->MISC_FLG = ' '
      DO FILELOCK
      APPEND BLANK
      REPLACE SALESMAN WITH MSALESMAN
      REPLACE PO_NBR WITH MPO_NBR
      REPLACE PO_SUFFIX WITH MPO_SUFFIX
      UNLOCK
   ELSE
      SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
   ENDIF
   IF .NOT. EOF()
      DO RECLOCK
      REPLACE MISCREAS1 WITH MMISCREAS1
      REPLACE MISCREAS2 WITH MMISCREAS2
      REPLACE MISCREAS3 WITH MMISCREAS3
      REPLACE MISCAMT1 WITH MMISCAMT1
      REPLACE MISCAMT2 WITH MMISCAMT2
      REPLACE MISCAMT3 WITH MMISCAMT3
      REPLACE MISCSPLT1 WITH MMISCSPLT1
      REPLACE MISCSPLT2 WITH MMISCSPLT2
      REPLACE MISCSPLT3 WITH MMISCSPLT3
      FLUSH
      UNLOCK
      SELECT B
      DO RECLOCK
      REPLACE MISC_FLG WITH 'Y'
      UNLOCK
   ENDIF
ENDIF
MMORE_TOT = .F.
*IF MBBUYCODE <> 'NONE' .AND. MBBUYCODE <> 'INVN' .AND. MPO_WARN <> SPACE(20)
IF MBBUYCODE <> 'NONE' .AND. MBBUYCODE <> 'I' .AND. MPO_WARN <> SPACE(20)
   @ 24,0 CLEAR
   STORE 'CUSTOMER REMINDER: ' + MPO_WARN + ' - PRESS RETURN TO CONTINUE ' TO MMSG
   @ 24,0 GET MMSG
   READ
   @ 24,0 CLEAR
ENDIF
IF B->BBUYCODE = 'NONE' .AND. (MTOT_SELL+MCUS_PALL) <> 0
   @ 24,0 CLEAR
   STORE 'CORRECT ENTRY ERROR!! NO CUSTOMER BUT TOTAL SELLING NOT EQUAL 0- PRESS RETURN' TO MMSG
   @ 24,0 GET MMSG
   READ
   @ 24,0 CLEAR
ENDIF
IF B->RSUPCODE = 'NONE' .AND. (MTOT_PURCH+MSUP_PALL) <> 0
   @ 24,0 CLEAR
   STORE 'CORRECT ENTRY ERROR!! NO SUPPLIER BUT TOTAL PURCHASE NOT EQUAL 0- PRESS RETURN' TO MMSG
   @ 24,0 GET MMSG
   READ
   @ 24,0 CLEAR
ENDIF

SET PROC TO PO_PROC
RETURN
* EOF: TRANFADD.PRG



*Formatted by: ToolBox Ver. 1.2  on 10/26/5 at 10:11 AM.
