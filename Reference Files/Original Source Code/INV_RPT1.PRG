************
* Program.: INV_RPT1.PRG
* Author..: GRACE KELLER
* Date....: 10/01/2013
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: PROGRAM FOR AMERICHICKEN INVENTORY        
*
* ---SET environment.
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     
SET CENTURY ON
SET DELETED ON
SET TALK OFF
SET ECHO OFF
SET BELL OFF
SET MENU OFF
SET SAFETY OFF
SET ESCAPE ON
SET SCOREBOARD ON
SET STATUS OFF
SET EXCLUSIVE OFF
SET PATH TO \AMERIFOX   
SET DECIMALS TO 5
SET DEVICE TO SCREEN

CLIPPER = .F.
FOXBASE = .T.
MMONO   = .F.

* ---SET COLOR TO values.   (If changed, change other one farther down too)
IF .NOT. MMONO .AND. ISCOLOR()
   SET COLOR TO W+/B,W+/R
ELSE
   SET COLOR TO W/N,N/W
ENDIF

CLOSE ALL
SET DEVICE TO SCREEN

**** FINISHES THE READ WHEN DOING A PAGE DOWN

SELECT A
DO FOX_USE WITH "C:\COMPINFO\SCREEN", .F.
MSCRNSIZE = SCRNSIZE
USE

DO CASE
   *** TEST
CASE MSCRNSIZE = 'T'
   DEFINE WINDOW MWINDOW ;
      FROM 2,24 TO 40,252 ;
      FONT "LUCIDA CONSOLE", 18 ;
      COLOR W+/B, W+/R ;
      NONE
   *** Jeni
CASE MSCRNSIZE = 'J'
   **GOOD - FROM 2,10 TO 35,200  
   **BETTER-  FROM 2,5 TO 35,210
   DEFINE WINDOW MWINDOW ;
      FROM 2,5 TO 40,210 ;
      FONT "LUCIDA CONSOLE", 16 ;
      COLOR W+/B, W+/R ;
      NONE
   *** WIDESCREEN
CASE MSCRNSIZE = 'W'
   DEFINE WINDOW MWINDOW ;
      FROM 5,30 TO 57,272 ;
      FONT "LUCIDA CONSOLE", 20 ;
      COLOR W+/B, W+/R ;
      NONE
   *** LAPTOP
CASE MSCRNSIZE = 'L'
   DEFINE WINDOW MWINDOW ;
      FROM 2,23 TO 54,265 ;
      FONT "LUCIDA CONSOLE", 20 ;
      COLOR W+/B, W+/R ;
      NONE
   *** OTHER - SQUARE 
OTHERWISE
   DEFINE WINDOW MWINDOW ;
      FROM 5,4 TO 57,200 ;
      FONT "LUCIDA CONSOLE", 19 ;
      COLOR W+/B, W+/R ;
      NONE
ENDCASE

ACTIVATE WINDOW "MWINDOW"

* ---MAIN PROCESSING LOOP
CLEAR
SET COLOR TO W/W,W/W
SET COLOR TO W+/B+,W+/R+
CLEAR


**********************************************************************
**** THIS WORKS - BUT GIVES AN EXTRA EJECT AT THE END OF JOB**********
**** ORIGINALLY HAD THIS WAY FOR STODDARD COUNTY
**MPRINTIT = "PRINT.EXE /D:" + MPRINTER + " C:\COMPINFO\PRT_FILE.TXT"
**********************************************************************

****TESTING************
****MPRINTIT = "PRINT.EXE /D:\\GRACE64-HP\HP4250 \COMPINFO\PRTFILE.TXT"
****MPRINTIT = "PRINT.EXE /D:\\GINGER-PC\HP940C \REPORTS\PRTFILE.TXT"
*** END OF TESTING*****
************************************************************************

* ---Initialize global variables.
SELECT A
DO FOX_USE WITH "COMPANY", .F.
MCOMPANY = TRIM(COMPANY)
MMASTDBF = TRIM(MASTDBF)
MDBFLOC = TRIM(DBFLOC)
USE

SELECT A
DO FOX_USE WITH "&MMASTDBF.CONTROL", .F.
MPROGRAM = TRIM(PROGRAM)
MPROG_CODE = PROG_CODE
USE

IF FILE("C:\COMPINFO\PRINTERS.DBF")
   SELECT A
   DO FOX_USE WITH "C:\COMPINFO\PRINTERS", .F.
   MPRINTER  = TRIM(PRINTER1)
   MPRINTER2 = TRIM(PRINTER2)
   MPRINTER3 = TRIM(PRINTER3)
   USE
ELSE
   MPRINTER  = 'DONOTPRINT'
   MPRINTER2 = 'DONOTPRINT'
   MPRINTER3 = 'DONOTPRINT'
ENDIF  

MPRINTIT  = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER
MPRINTIT2 = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER2
MPRINTIT3 = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER3


**********************************************************************
**** THIS WORKS - BUT GIVES AN EXTRA EJECT AT THE END OF JOB**********
**** ORIGINALLY HAD THIS WAY FOR STODDARD COUNTY
**MPRINTIT = "PRINT.EXE /D:" + MPRINTER + " C:\COMPINFO\PRT_FILE.TXT"
**********************************************************************

****TESTING************
****MPRINTIT = "PRINT.EXE /D:\\GRACE64-HP\HP4250 \COMPINFO\PRTFILE.TXT"
****MPRINTIT = "PRINT.EXE /D:\\GINGER-PC\HP940C \REPORTS\PRTFILE.TXT"
*** END OF TESTING*****
************************************************************************

STORE 'BROKER SYSTEM' TO MPROGRAM

STORE .T. TO MONO

MPASSWORD = 'ADM99'
MUSER = 'SUPERVISOR'
MSECURITY = .T.

ON KEY LABEL PGUP CLEAR READ
ON KEY LABEL PGDN CLEAR READ

CLEAR
@ 00,00 SAY MCOMPANY
@ 01,68 SAY DATE()
@ 01,00 SAY MPROGRAM + ' - PRINT INVENTORY PRODUCT SUMMARY/DETAIL'
@ 2,0 to 24,79
MFILE = 'INVNTMP'
MCUTOFF = CTOD('')  
MPEND = 'N'
MTOT_ONLY = 'D'
MYES_NO = 'Y'
MACTION = 2
STORE CTOD('') TO MBEGIN, MENDING
STORE SPACE(6) TO MSEL_PROD
MCHOICE4 = ' '
MPRT_OUT = 'FILE '
MONLY_CUR = 'Y'
MHP_OPT   = 'N'
DO WHILE MACTION = 2
   **@ 10,3 SAY 'Print this Report -or- Create Excel File (PRINT/FILE): ' GET MPRT_OUT PICTURE '@!'
   @ 10,3 SAY 'Optional Product: ' GET MSEL_PROD
   @ 12,3 SAY 'Optionally select specific Freezer (Y/N)' GET MCHOICE4 PICTURE '@!' VALID(MCHOICE4 = ' ' .OR. MCHOICE4 = 'Y' .OR. MCHOICE4 = 'X' .OR. MCHOICE = ' ')
   @ 14,3 say 'Select Only current freezer/items activity (Y/N):' GET MONLY_CUR PICTURE '@!' VALID(MONLY_CUR = 'Y' .OR. MONLY_CUR = 'N')
   @ 16,3 SAY 'Select Not-Holiday (Not-50)  Product (N) -or- Holiday Product (H): '
   @ 17,3 SAY '                                         -or- BOTH (Reg & 50) (B): ' GET MHP_OPT PICTURE '@!' VALID(MHP_OPT = 'N' .OR. MHP_OPT = 'H' .OR. MHP_OPT = 'B')
   STORE 1 TO MACTION
   @ 24,0 SAY 'Action: ' + STR(MACTION,1)
   @ 24,13 SAY '1. Continue    2. Edit    3. Cancel Report'          
   READ
   @ 24,8 GET MACTION PICTURE '#' RANGE 1,3
   READ
ENDDO
IF MACTION = 3                         
   CLOSE DATA
   QUIT
ENDIF

STORE SPACE(4) TO MBBUYCODE, MRSUPCODE, MBUY_CODE, MSUP_CODE
IF MCHOICE4 = 'Y'
   STORE 'X' TO MCHOICE4
ENDIF
IF MCHOICE4 = 'X'
   CLEAR
   MWAIT = ' '
   @ 5,1 SAY 'PRESS ENTER TO SELECT SHIP TO FREEZER' GET MWAIT
   READ
   MNAME_FD = .F.
   SET PROC TO BUY_PROC
   DO BUY_SEL1
   IF MNAME_FD
      STORE BUY_CODE TO MBUY_CODE
      STORE NAME TO MBUY_NAME
      STORE CITY TO MBUY_CITY
      STORE STATE TO MBUY_STATE
   ELSE
      MCHOICE4 = ' '
   ENDIF
   SET PROC TO 
   USE
ELSE
   STORE SPACE(4) TO MBUY_CODE
   STORE SPACE(32) TO MBUY_NAME
ENDIF

@ 3,1 CLEAR TO 22,78
MPRT_DISP = 'P'
MPRT_ACT = 'C'

IF MPRT_OUT <> 'FILE'
   DO PRT_SET
   IF MPRT_ACT <> 'C'
      CLOSE DATA
      QUIT
   ENDIF
ENDIF
*** DO SOME CLEANUP HERE
SELECT B
DO FOX_USE WITH "HINV_DTL INDEX HDTL_LOT", .F.

SELECT A
DO FOX_USE WITH "HINVEN", .F.
SET FILTER TO LOT_NBR <> 'U'
GOTO TOP
DO WHILE .NOT. EOF()
   IF LBS = 0 .AND. CALC_LBS = 0 .AND. CASE_CNT = 0 .AND. CASE_LEFT = 0
      *** NEED TO DELETE THESE RECORDS - LEFTOVER NO ACTIVITY
      SELECT B
      SEEK A->FREEZ_LOC + A->LOT_NBR
      DO WHILE .NOT. EOF() .AND. FREEZ_LOC = A->FREEZ_LOC .AND. LOT_NBR = A->LOT_NBR
         DELETE
         SKIP
      ENDDO
      SELECT A
      DELETE
   ENDIF
   SKIP
ENDDO

*** DO MORE CLEANUP ON LEFTOVER UNDETERMINED LOTS
SELECT A
**DO FOX_USE WITH "HINVEN", .F.
SET FILTER TO LOT_NBR = 'U'
GOTO TOP
DO WHILE .NOT. EOF()
   
   IF LBS = 0 .AND. CALC_LBS = 0 .AND. CASE_CNT = 0 .AND. CASE_LEFT = 0
      *** NEED TO DELETE THESE RECORDS - LEFTOVER NO ACTIVITY
      SELECT B
      SEEK A->FREEZ_LOC + A->LOT_NBR
      IF EOF()
         SELECT A
         DELETE
      ELSE
         IF QTY = 0 .AND. LBS = 0
            DELETE
            SELECT A
            DELETE
         ENDIF
      ENDIF
      
   ENDIF
   
   SELECT A
   SKIP
ENDDO


SELECT A
USE
SELECT B
USE

MPAGE_LEN = 56

MPAGE_NO = 0
MLINE = 99
IF MTOT_ONLY = 'S'
   MTOT_ONLY = 'Y'
ELSE
   MTOT_ONLY = 'N'
ENDIF
@ 21,16 SAY SPACE(34)
IF MPRT_OUT = 'FILE'
   @ 21,16 SAY 'PROCESSING......'
ELSE
   @ 21,16 SAY 'PROCESSING/PRINTING......'
ENDIF

SELECT B
DO FOX_USE WITH "HINV_DTL INDEX HDTL_LOT", .F.
SET FILTER TO ACT_CODE = 'S'

GOTO TOP

SELECT A
DO FOX_USE WITH "INVEN INDEX INVNLOC", .F.

SELECT C
DO FOX_USE WITH "HINVEN INDEX HINVNLOC", .F.

SELECT B
DO WHILE .NOT. EOF()
   SELECT C
   SEEK B->FREEZ_LOC + B->LOT_NBR
   IF EOF()
      SELECT A
      SEEK B->FREEZ_LOC + B->LOT_NBR
      IF .NOT. EOF()
         SELECT B
         REPLACE NOTE WITH SUBSTR(A->NOTE,1,7)
         REPLACE PROD_DESC WITH A->PROD_DESC
      ENDIF
   ELSE
      SELECT B
      REPLACE NOTE WITH SUBSTR(C->NOTE,1,7)
      REPLACE PROD_DESC WITH C->PROD_DESC
   ENDIF
   SELECT B
   SKIP
ENDDO

SELECT A
USE

SELECT C
USE

SELECT A
USE INVNTMP3 EXCLUSIVE
DELETE ALL
PACK 
APPEND FROM INVEN FOR SOLD_FLG = ' ' .AND. UPPER(NOTE) <> 'HOLD QA'
REPLACE ALL DIV_CODE WITH 'XX'

APPEND FROM HINVEN FOR NOTE <> 'HOLD QA'
REPLACE ALL BEG_CASE WITH CASE_LEFT FOR LOT_NBR <> 'P' .AND. LOT_NBR <> 'U'

*** LET QM FLOW THRU LIKE NORMAL
REPLACE ALL NOTE WITH SPACE(72) FOR NOTE = 'HOLD QM'

SELECT A
USE INVNTMP3 EXCLUSIVE
INDEX ON FREEZ_LOC + LOT_NBR  TO INVNTMP3
USE INVNTMP3 INDEX INVNTMP3 EXCLUSIVE

REPLACE ALL BEG_CASE WITH 0 FOR NOTE = 'HOLD Q'
REPLACE ALL BEG_LBS  WITH 0 FOR NOTE = 'HOLD Q'

SELECT B
DO FOX_USE WITH "HINV_DTL", .F.
SET FILTER TO ACT_CODE = 'S' .AND. NOTE <> 'HOLD QA'
GOTO TOP

DO WHILE .NOT. EOF()
   SELECT A
   SEEK B->FREEZ_LOC + B->LOT_NBR
   IF .NOT. EOF()
      REPLACE CASE_OUT WITH CASE_OUT + B->QTY
      REPLACE LBS_OUT WITH LBS_OUT   + B->LBS
      IF A->NOTE = 'HOLD QP'
         REPLACE BEG_CASE WITH BEG_CASE + (-1*B->QTY)
         REPLACE BEG_LBS   WITH BEG_LBS + (-1*B->LBS)
      ENDIF
   ENDIF
   SELECT B
   SKIP
ENDDO

SELECT A

REPLACE ALL CASE_LEFT WITH BEG_CASE + CASE_OUT + CASE_IN FOR LOT_NBR <> 'P' .AND. LOT_NBR <> 'U'
REPLACE ALL LBS_LEFT  WITH BEG_LBS  + LBS_OUT  + LBS_IN  FOR LOT_NBR <> 'P' .AND. LOT_NBR <> 'U'
REPLACE ALL CASE_CNT WITH 0 FOR NOTE = 'HOLD QP'
REPLACE ALL LBS      WITH 0 FOR NOTE = 'HOLD QP'
**DELETE FOR BEG_CASE = 0 .AND. CASE_IN = 0 .AND. CASE_OUT = 0 .AND. NOTE = 'HOLD QP'

GOTO TOP

*** FIGURE OUT THE DATES NOW
STORE DATE() TO MCUR_DATE

STORE MCUR_DATE -1 TO MEND_6WK
STORE MEND_6WK  -41 TO MBEG_6WK

*** THESE ARE LAST YR
STORE MCUR_DATE + 1 - 365 TO MBEG_4WK
STORE MBEG_4WK + 27 TO MEND_4WK

STORE MEND_4WK + 1  TO MBEG_8WK
STORE MBEG_8WK + 27 TO MEND_8WK

STORE MEND_8WK + 1 TO MBEG_12WK
STORE MBEG_12WK+27 TO MEND_12WK

STORE SUBSTR(DTOC(MBEG_6WK),1,2) + '/' + SUBSTR(DTOC(MBEG_6WK),4,2) + '/' + SUBSTR(DTOC(MBEG_6WK),9,2) TO PBEG_6WK
STORE SUBSTR(DTOC(MEND_6WK),1,2) + '/' + SUBSTR(DTOC(MEND_6WK),4,2) + '/' + SUBSTR(DTOC(MEND_6WK),9,2) TO PEND_6WK
STORE SUBSTR(DTOC(MBEG_4WK),1,2) + '/' + SUBSTR(DTOC(MBEG_4WK),4,2) + '/' + SUBSTR(DTOC(MBEG_4WK),9,2) TO PBEG_4WK
STORE SUBSTR(DTOC(MEND_4WK),1,2) + '/' + SUBSTR(DTOC(MEND_4WK),4,2) + '/' + SUBSTR(DTOC(MEND_4WK),9,2) TO PEND_4WK
STORE SUBSTR(DTOC(MBEG_8WK),1,2) + '/' + SUBSTR(DTOC(MBEG_8WK),4,2) + '/' + SUBSTR(DTOC(MBEG_8WK),9,2) TO PBEG_8WK
STORE SUBSTR(DTOC(MEND_8WK),1,2) + '/' + SUBSTR(DTOC(MEND_8WK),4,2) + '/' + SUBSTR(DTOC(MEND_8WK),9,2) TO PEND_8WK
STORE SUBSTR(DTOC(MBEG_12WK),1,2) + '/' + SUBSTR(DTOC(MBEG_12WK),4,2) + '/' + SUBSTR(DTOC(MBEG_12WK),9,2) TO PBEG_12WK
STORE SUBSTR(DTOC(MEND_12WK),1,2) + '/' + SUBSTR(DTOC(MEND_12WK),4,2) + '/' + SUBSTR(DTOC(MEND_12WK),9,2) TO PEND_12WK

SELECT D
DO FOX_USE WITH "PO_HEAD INDEX PO_HEAD", .F.

SELECT C
DO FOX_USE WITH "INVEN INDEX INVNLOC", .F.
SET FILTER TO UPPER(NOTE) <> 'HOLD QA'
GOTO TOP

SELECT A
INDEX ON PROD_DESC + FREEZ_LOC TO INVNTMP3
USE INVNTMP3 INDEX INVNTMP3 EXCLUSIVE

SELECT B
DO FOX_USE WITH "INVN_DTL", .F.
SET FILTER TO ACT_DATE >= MBEG_4WK .AND. ACT_DATE <= MEND_12WK .AND. SUBSTR(LOT_NBR,1,1) <> 'P' .AND. SUBSTR(LOT_NBR,1,1) <> 'U' 
GOTO TOP

DO WHILE .NOT. EOF()
   
   STORE ACT_DATE TO MACT_DATE
   
   SELECT C
   SEEK B->FREEZ_LOC + B->LOT_NBR
   
   STORE PROD_DESC TO MPROD_DESC
   
   SELECT A
   SEEK MPROD_DESC + B->FREEZ_LOC
   
   IF EOF()
      APPEND BLANK
      REPLACE FREEZ_LOC WITH B->FREEZ_LOC
      REPLACE PROD_DESC WITH MPROD_DESC
   ENDIF
   DO CASE
   CASE MACT_DATE >= MBEG_4WK .AND. MACT_DATE <= MEND_4WK
      IF B->ACT_CODE = 'S'
         SELECT D
         SEEK B->SALESMAN + B->PO_NBR + B->PO_SUFFIX
         IF .NOT. EOF() .AND. BBUYCODE <> 'INVN' .AND. BBUYCODE <> 'SAMP'
            SELECT A
            REPLACE OUT_4WK WITH OUT_4WK + B->QTY
         ENDIF
         SELECT A
      ELSE
         REPLACE IN_4WK  WITH IN_4WK   + B->QTY
      ENDIF
   CASE MACT_DATE >= MBEG_8WK .AND. MACT_DATE <= MEND_8WK
      IF B->ACT_CODE = 'S'
         SELECT D
         SEEK B->SALESMAN + B->PO_NBR + B->PO_SUFFIX
         IF .NOT. EOF() .AND. BBUYCODE <> 'INVN' .AND. BBUYCODE <> 'SAMP'
            SELECT A
            REPLACE OUT_8WK WITH OUT_8WK + B->QTY
         ENDIF
         SELECT A
      ELSE
         REPLACE IN_8WK  WITH IN_8WK   + B->QTY
      ENDIF
   OTHERWISE
      IF B->ACT_CODE = 'S'
         SELECT D
         SEEK B->SALESMAN + B->PO_NBR + B->PO_SUFFIX
         IF .NOT. EOF() .AND. BBUYCODE <> 'INVN' .AND. BBUYCODE <> 'SAMP'
            SELECT A
            REPLACE OUT_12WK WITH OUT_12WK + B->QTY
         ENDIF
         SELECT A
      ELSE
         REPLACE IN_12WK  WITH IN_12WK   + B->QTY
      ENDIF
   ENDCASE
   SELECT B
   SKIP
ENDDO

SELECT B
SET FILTER TO ACT_DATE >= MBEG_6WK .AND. ACT_DATE <= MEND_6WK .AND. SUBSTR(LOT_NBR,1,1) <> 'P' .AND. SUBSTR(LOT_NBR,1,1) <> 'U'
GOTO TOP
DO WHILE .NOT. EOF()
   
   SELECT C
   SEEK B->FREEZ_LOC + B->LOT_NBR
   STORE PROD_DESC TO MPROD_DESC
   
   SELECT A
   SEEK MPROD_DESC + B->FREEZ_LOC
   IF EOF()
      APPEND BLANK
      REPLACE FREEZ_LOC WITH B->FREEZ_LOC
      REPLACE PROD_DESC WITH MPROD_DESC
   ENDIF
   IF B->ACT_CODE = 'S'
      SELECT D
      SEEK B->SALESMAN + B->PO_NBR + B->PO_SUFFIX
      IF .NOT. EOF() .AND. BBUYCODE <> 'INVN' .AND. BBUYCODE <> 'SAMP'
         SELECT A
         REPLACE OUT_6WK WITH OUT_6WK + B->QTY
      ENDIF
      SELECT A
   ELSE
      REPLACE IN_6WK  WITH IN_6WK   + B->QTY
   ENDIF
   SELECT B
   SKIP
ENDDO

SELECT B
USE
SELECT C
USE

SELECT B
USE \INVEN\PRTINVEN EXCLUSIVE
DELETE ALL
PACK
APPEND BLANK
REPLACE PRODUCT WITH 'DATE:'
REPLACE FREEZER WITH DTOC(DATE())
REPLACE PREV_6WKIN WITH PBEG_6WK
REPLACE PREV_6WKOT WITH PBEG_6WK
REPLACE LAST_YR4WK WITH PBEG_4WK
REPLACE LAST_YR8WK WITH PBEG_8WK
REPLACE LAST_YR12W WITH PBEG_12WK
APPEND BLANK
REPLACE PRODUCT WITH 'TIME:'
REPLACE FREEZER WITH TIME()
REPLACE PREV_6WKIN WITH PEND_6WK
REPLACE PREV_6WKOT WITH PEND_6WK
REPLACE LAST_YR4WK WITH PEND_4WK
REPLACE LAST_YR8WK WITH PEND_8WK
REPLACE LAST_YR12W WITH PEND_12WK
APPEND BLANK

MPAGE_NO = 0
MZERO    = 0

SET CONSOLE OFF
IF MPRT_OUT = 'FILE'
   SET PRINT TO MGRACE
ELSE
   IF FILE("C:\COMPINFO\PRINTERS.DBF")
      SET PRINT TO C:\COMPINFO\PRT_FILE.TXT
   ELSE
      SET PRINT TO LPT3
   ENDIF
ENDIF
SET DEVICE TO PRINT
SET PRINT ON

SELECT A
GOTO TOP

DELETE FOR PROD_DESC = SPACE(6)
GOTO TOP

DO CASE
CASE MHP_OPT = 'N'
   DELETE FOR SALESMAN = '50'
CASE MHP_OPT = 'H'
   DELETE FOR SALESMAN <> '50'
ENDCASE
GOTO TOP

DO WHILE .NOT. EOF()
   MZEROVAL = .T.
   IF CASE_LEFT <> 0
      MZEROVAL = .F.
   ENDIF
   IF CASE_OUT  <> 0
      MZEROVAL = .F.
   ENDIF
   IF CASE_IN   <> 0
      MZEROVAL = .F.
   ENDIF
   IF CASE_CNT  <> 0
      MZEROVAL = .F.
   ENDIF
   IF MONLY_CUR = 'N'
      IF IN_6WK    <> 0
         MZEROVAL = .F.
      ENDIF
      IF OUT_6WK   <> 0
         MZEROVAL = .F.
      ENDIF
      IF OUT_4WK   <> 0
         MZEROVAL = .F.
      ENDIF
      IF OUT_8WK   <> 0
         MZEROVAL = .F.
      ENDIF
      IF OUT_12WK  <> 0
         MZEROVAL = .F.
      ENDIF
   ENDIF
   IF MZEROVAL
      DELETE
   ENDIF
   SKIP
ENDDO

GOTO TOP
IF (MCHOICE4 = 'X' .OR. MCHOICE4 = 'Y') .AND. MBUY_NAME <> SPACE(32)
   DELETE FOR FREEZ_LOC <> MBUY_NAME
ENDIF   

GOTO TOP
IF MSEL_PROD <> SPACE(6)
   DELETE FOR PROD_DESC <> MSEL_PROD
ENDIF

GOTO TOP

DO WHILE .NOT. EOF()
   STORE 0 TO MPROD_BEG, MPROD_OUT, MPROD_IN
   STORE 0 TO MPROD_IN6, MPROD_OUT6, MPRODOUT4, MPRODOUT8, MPRODOUT12
   STORE PROD_DESC TO MPROD_DESC
   STORE PACKED TO MPACKED
   MPRT_PROD = .T.
   DO WHILE .NOT. EOF() .AND. PROD_DESC = MPROD_DESC
      STORE 0 TO MIN_6WK, MOUT_6WK, MOUT_4WK, MOUT_8WK, MOUT_12WK
      STORE FREEZ_LOC TO MFREEZ_LOC
      MPRT_FREEZ = .T.
      STORE 0 TO MFREEZ_BEG, MFREEZ_OUT, MFREEZ_IN
      DO WHILE .NOT. EOF() .AND. FREEZ_LOC = MFREEZ_LOC .AND. PROD_DESC = MPROD_DESC
         
         *** ALREADY THERE
         IF DIV_CODE = 'XX'
            **IF NOTE = 'HOLD Q'
            MFREEZ_BEG = MFREEZ_BEG + BEG_CASE
            **ELSE
            **   MFREEZ_BEG  = MFREEZ_BEG  + CASE_LEFT
            **ENDIF
            MFREEZ_OUT  = MFREEZ_OUT  + CASE_OUT
            MFREEZ_IN   = MFREEZ_IN   + CASE_IN
         ELSE
            MFREEZ_IN   = MFREEZ_IN   + CASE_CNT
            MFREEZ_OUT  = MFREEZ_OUT  + CASE_OUT
         ENDIF
         
         MIN_6WK = MIN_6WK + IN_6WK
         MOUT_6WK = MOUT_6WK + OUT_6WK
         MOUT_4WK = MOUT_4WK + OUT_4WK
         MOUT_8WK = MOUT_8WK + OUT_8WK
         MOUT_12WK = MOUT_12WK + OUT_12WK
         
         SKIP
      ENDDO
      
      
      MPROD_BEG = MPROD_BEG + MFREEZ_BEG
      MPROD_OUT = MPROD_OUT + MFREEZ_OUT
      MPROD_IN =  MPROD_IN  + MFREEZ_IN
      
      MPROD_IN6  = MPROD_IN6 + MIN_6WK
      MPROD_OUT6 = MPROD_OUT6 + MOUT_6WK
      MPRODOUT4  = MPRODOUT4 + MOUT_4WK
      MPRODOUT8  = MPRODOUT8 + MOUT_8WK
      MPRODOUT12 = MPRODOUT12 + MOUT_12WK
      
      
      SELECT B
      APPEND BLANK
      REPLACE PRODUCT WITH MPROD_DESC
      REPLACE FREEZER WITH MFREEZ_LOC
      
      IF MFREEZ_BEG = 0
         REPLACE CUR_QTY WITH TRANSFORM(MZERO, '999,999,999')
      ELSE
         REPLACE CUR_QTY WITH TRANSFORM(MFREEZ_BEG, '999,999,999')
      ENDIF
      
      IF MFREEZ_IN = 0
         REPLACE PEND_IN WITH TRANSFORM(MZERO, '999,999,999')
      ELSE
         REPLACE PEND_IN WITH TRANSFORM(MFREEZ_IN, '999,999,999')
      ENDIF
      
      IF MFREEZ_OUT = 0
         REPLACE PEND_OUT WITH TRANSFORM(MZERO, '999,999,999')
      ELSE
         REPLACE PEND_OUT WITH TRANSFORM(MFREEZ_OUT * -1, '999,999,999')
      ENDIF
      
      IF MFREEZ_BEG+MFREEZ_IN+MFREEZ_OUT = 0
         REPLACE CALC_QTY WITH TRANSFORM(MZERO, '999,999,999')
      ELSE
         REPLACE CALC_QTY WITH TRANSFORM(MFREEZ_BEG+MFREEZ_IN+MFREEZ_OUT, '999,999,999')
      ENDIF
      
      IF MIN_6WK = 0
         REPLACE PREV_6WKIN WITH TRANSFORM(MZERO, '999,999,999')
      ELSE
         REPLACE PREV_6WKIN WITH TRANSFORM(MIN_6WK, '999,999,999')
      ENDIF
      
      IF MOUT_6WK = 0
         REPLACE PREV_6WKOT WITH TRANSFORM(MZERO, '999,999,999')
         XOUT_6WK = 0
      ELSE
         XOUT_6WK = ROUND((MOUT_6WK * -1)/6,0)
         IF XOUT_6WK < 1
            XOUT_6WK = 0
         ENDIF
         REPLACE PREV_6WKOT WITH TRANSFORM(XOUT_6WK, '999,999,999')
      ENDIF
      
      IF MOUT_6WK = 0 .OR. XOUT_6WK = 0 .OR. (MFREEZ_BEG+MFREEZ_IN+MFREEZ_OUT = 0)
         REPLACE NBRWKS WITH TRANSFORM(MZERO, '9.9')
      ELSE
         MNBRWKS = ROUND((MFREEZ_BEG+MFREEZ_IN+MFREEZ_OUT) / XOUT_6WK,1)
         REPLACE NBRWKS WITH TRANSFORM(MNBRWKS, '99999.9')
      ENDIF
      
      IF MOUT_4WK = 0
         REPLACE LAST_YR4WK WITH TRANSFORM(MZERO, '999,999,999')
      ELSE
         REPLACE LAST_YR4WK WITH TRANSFORM(MOUT_4WK * -1, '999,999,999')
      ENDIF
      
      IF MOUT_8WK = 0
         REPLACE LAST_YR8WK WITH TRANSFORM(MZERO, '999,999,999')
      ELSE
         REPLACE LAST_YR8WK WITH TRANSFORM(MOUT_8WK * -1, '999,999,999')
      ENDIF
      
      IF MOUT_12WK = 0
         REPLACE LAST_YR12W WITH TRANSFORM(MZERO, '999,999,999')
      ELSE
         REPLACE LAST_YR12W WITH TRANSFORM(MOUT_12WK * -1, '999,999,999')
      ENDIF
      
      SELECT A
   ENDDO
   
   SELECT B
   APPEND BLANK
   REPLACE FREEZER WITH '**Product Total'
   IF MPROD_BEG = 0
      REPLACE CUR_QTY WITH TRANSFORM(MZERO, '999,999,999')
   ELSE
      REPLACE CUR_QTY WITH TRANSFORM(MPROD_BEG, '999,999,999')
   ENDIF
   
   IF MPROD_IN = 0
      REPLACE PEND_IN WITH TRANSFORM(MZERO, '999,999,999')
   ELSE
      REPLACE PEND_IN WITH TRANSFORM(MPROD_IN, '999,999,999')
   ENDIF
   
   IF MPROD_OUT = 0
      REPLACE PEND_OUT WITH TRANSFORM(MZERO, '999,999,999')
   ELSE
      REPLACE PEND_OUT WITH TRANSFORM(MPROD_OUT * -1, '999,999,999')
   ENDIF
   
   IF MPROD_BEG+MPROD_IN+MPROD_OUT = 0
      REPLACE CALC_QTY WITH TRANSFORM(MZERO, '999,999,999')
   ELSE
      REPLACE CALC_QTY WITH TRANSFORM(MPROD_BEG+MPROD_IN+MPROD_OUT, '999,999,999')
   ENDIF
   
   IF MPROD_IN6 = 0
      REPLACE PREV_6WKIN WITH TRANSFORM(MZERO, '999,999,999')
   ELSE
      REPLACE PREV_6WKIN WITH TRANSFORM(MPROD_IN6, '999,999,999')
   ENDIF
   
   
   IF MPROD_OUT6 = 0
      REPLACE PREV_6WKOT WITH TRANSFORM(MZERO, '999,999,999')
      XOUT_6WK = 0
   ELSE
      XOUT_6WK = ROUND((MPROD_OUT6 * -1)/6,0)
      IF XOUT_6WK < 0
         XOUT_6WK = 0
      ENDIF
      REPLACE PREV_6WKOT WITH TRANSFORM(XOUT_6WK, '999,999,999')
   ENDIF
   
   IF MPROD_OUT6 = 0 .OR. XOUT_6WK = 0 .OR. (MPROD_BEG+MPROD_IN+MPROD_OUT = 0)
      REPLACE NBRWKS WITH TRANSFORM(MZERO, '9.9')
   ELSE
      MNBRWKS = ROUND((MPROD_BEG+MPROD_IN+MPROD_OUT) / XOUT_6WK,1)
      REPLACE NBRWKS WITH TRANSFORM(MNBRWKS, '99999.9')
   ENDIF
   
   IF MPRODOUT4 = 0
      REPLACE LAST_YR4WK WITH TRANSFORM(MZERO, '999,999,999')
   ELSE
      REPLACE LAST_YR4WK WITH TRANSFORM(MPRODOUT4 * -1, '999,999,999')
   ENDIF
   
   IF MPRODOUT8 = 0
      REPLACE LAST_YR8WK WITH TRANSFORM(MZERO, '999,999,999')
   ELSE
      REPLACE LAST_YR8WK WITH TRANSFORM(MPRODOUT8 * -1, '999,999,999')
   ENDIF
   
   IF MPRODOUT12 = 0
      REPLACE LAST_YR12W WITH TRANSFORM(MZERO, '999,999,999')
   ELSE
      REPLACE LAST_YR12W WITH TRANSFORM(MPRODOUT12 * -1, '999,999,999')
   ENDIF
   
   APPEND BLANK
   SELECT A
   MLINE = 50
ENDDO

IF MLINE =  99
   @ 4,1 SAY 'NO INVENTORY DATA SELECTED FOR REPORT'                            
ENDIF


SELECT A

IF MLINE <> 99 .AND. MCHOICE4 = ' ' .AND. MSEL_PROD = SPACE(6)
   
   IF MPRT_OUT = 'FILE'
      SELECT B
      APPEND BLANK
      REPLACE FREEZER WITH "*************"
   ENDIF
   
   SELECT A
   INDEX ON FREEZ_LOC + PROD_DESC TO INVNTMP3
   USE INVNTMP3 INDEX INVNTMP3 EXCLUSIVE
   
   GOTO TOP
   
   DO WHILE .NOT. EOF()
      STORE FREEZ_LOC TO MFREEZ_LOC
      DO WHILE .NOT. EOF() .AND. FREEZ_LOC = MFREEZ_LOC
         
         
         STORE 0 TO MPROD_BEG, MPROD_OUT, MPROD_IN
         STORE 0 TO MPROD_IN6, MPROD_OUT6, MPRODOUT4, MPRODOUT8, MPRODOUT12
         STORE PROD_DESC TO MPROD_DESC
         STORE PACKED TO MPACKED
         MPRT_PROD = .T.
         DO WHILE .NOT. EOF() .AND. PROD_DESC = MPROD_DESC
            STORE 0 TO MIN_6WK, MOUT_6WK, MOUT_4WK, MOUT_8WK, MOUT_12WK
            STORE FREEZ_LOC TO MFREEZ_LOC
            MPRT_FREEZ = .T.
            STORE 0 TO MFREEZ_BEG, MFREEZ_OUT, MFREEZ_IN
            DO WHILE .NOT. EOF() .AND. FREEZ_LOC = MFREEZ_LOC .AND. PROD_DESC = MPROD_DESC
               
               *** ALREADY THERE
               IF DIV_CODE = 'XX'
                  **IF NOTE = 'HOLD Q'
                  MFREEZ_BEG = MFREEZ_BEG + BEG_CASE
                  **ELSE
                  **   MFREEZ_BEG  = MFREEZ_BEG  + CASE_LEFT
                  **ENDIF
                  MFREEZ_OUT  = MFREEZ_OUT  + CASE_OUT
                  MFREEZ_IN   = MFREEZ_IN   + CASE_IN
               ELSE
                  MFREEZ_IN   = MFREEZ_IN   + CASE_CNT
                  MFREEZ_OUT  = MFREEZ_OUT  + CASE_OUT
               ENDIF
               
               MIN_6WK = MIN_6WK + IN_6WK
               MOUT_6WK = MOUT_6WK + OUT_6WK
               MOUT_4WK = MOUT_4WK + OUT_4WK
               MOUT_8WK = MOUT_8WK + OUT_8WK
               MOUT_12WK = MOUT_12WK + OUT_12WK
               
               SKIP
            ENDDO
            
            MPROD_BEG = MPROD_BEG + MFREEZ_BEG
            MPROD_OUT = MPROD_OUT + MFREEZ_OUT
            MPROD_IN =  MPROD_IN  + MFREEZ_IN
            
            MPROD_IN6  = MPROD_IN6 + MIN_6WK
            MPROD_OUT6 = MPROD_OUT6 + MOUT_6WK
            MPRODOUT4  = MPRODOUT4 + MOUT_4WK
            MPRODOUT8  = MPRODOUT8 + MOUT_8WK
            MPRODOUT12 = MPRODOUT12 + MOUT_12WK
            
            SELECT B
            APPEND BLANK
            REPLACE PRODUCT WITH MPROD_DESC
            ****REPLACE PACKED  WITH MPACKED
            REPLACE FREEZER WITH MFREEZ_LOC
            
            IF MFREEZ_BEG = 0
               REPLACE CUR_QTY WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE CUR_QTY WITH TRANSFORM(MFREEZ_BEG, '999,999,999')
            ENDIF
            
            IF MFREEZ_IN = 0
               REPLACE PEND_IN WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE PEND_IN WITH TRANSFORM(MFREEZ_IN, '999,999,999')
            ENDIF
            
            IF MFREEZ_OUT = 0
               REPLACE PEND_OUT WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE PEND_OUT WITH TRANSFORM(MFREEZ_OUT * -1, '999,999,999')
            ENDIF
            
            IF MFREEZ_BEG+MFREEZ_IN+MFREEZ_OUT = 0
               REPLACE CALC_QTY WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE CALC_QTY WITH TRANSFORM(MFREEZ_BEG+MFREEZ_IN+MFREEZ_OUT, '999,999,999')
            ENDIF
            
            IF MIN_6WK = 0
               REPLACE PREV_6WKIN WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE PREV_6WKIN WITH TRANSFORM(MIN_6WK, '999,999,999')
            ENDIF
            
            IF MOUT_6WK = 0
               REPLACE PREV_6WKOT WITH TRANSFORM(MZERO, '999,999,999')
               XOUT_6WK = 0
            ELSE
               XOUT_6WK = ROUND((MOUT_6WK * -1)/6,0)
               IF XOUT_6WK < 0
                  XOUT_6WK = 0
               ENDIF
               REPLACE PREV_6WKOT WITH TRANSFORM(XOUT_6WK, '999,999,999')
            ENDIF
            
            IF MOUT_6WK = 0 .OR. XOUT_6WK = 0 .OR. (MFREEZ_BEG+MFREEZ_IN+MFREEZ_OUT = 0)
               REPLACE NBRWKS WITH TRANSFORM(MZERO, '9.9')
            ELSE
               MNBRWKS = ROUND((MFREEZ_BEG+MFREEZ_IN+MFREEZ_OUT) / XOUT_6WK,1)
               REPLACE NBRWKS WITH TRANSFORM(MNBRWKS, '99999.9')
            ENDIF
            
            IF MOUT_4WK = 0
               REPLACE LAST_YR4WK WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE LAST_YR4WK WITH TRANSFORM(MOUT_4WK * -1, '999,999,999')
            ENDIF
            
            IF MOUT_8WK = 0
               REPLACE LAST_YR8WK WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE LAST_YR8WK WITH TRANSFORM(MOUT_8WK * -1, '999,999,999')
            ENDIF
            
            IF MOUT_12WK = 0
               REPLACE LAST_YR12W WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE LAST_YR12W WITH TRANSFORM(MOUT_12WK * -1, '999,999,999')
            ENDIF
            
            SELECT A
         ENDDO
         SELECT B
         
         MDOIT = .F.
         IF MDOIT
            APPEND BLANK
            REPLACE FREEZER WITH '**Product Total'
            IF MPROD_BEG = 0
               REPLACE CUR_QTY WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE CUR_QTY WITH TRANSFORM(MPROD_BEG, '999,999,999')
            ENDIF
            
            IF MPROD_IN = 0
               REPLACE PEND_IN WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE PEND_IN WITH TRANSFORM(MPROD_IN, '999,999,999')
            ENDIF
            
            IF MPROD_OUT = 0
               REPLACE PEND_OUT WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE PEND_OUT WITH TRANSFORM(MPROD_OUT * -1, '999,999,999')
            ENDIF
            
            IF MPROD_BEG+MPROD_IN+MPROD_OUT = 0
               REPLACE CALC_QTY WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE CALC_QTY WITH TRANSFORM(MPROD_BEG+MPROD_IN+MPROD_OUT, '999,999,999')
            ENDIF
            
            IF MPROD_IN6 = 0
               REPLACE PREV_6WKIN WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE PREV_6WKIN WITH TRANSFORM(MPROD_IN6, '999,999,999')
            ENDIF
            
            IF MPROD_OUT6 = 0
               REPLACE PREV_6WKOT WITH TRANSFORM(MZERO, '999,999,999')
               XOUT_6WK = 0
            ELSE
               XOUT_6WK = ROUND((MPROD_OUT6 * -1)/6,0)
               IF XOUT_6WK < 0
                  XOUT_6WK = 0
               ENDIF
               REPLACE PREV_6WKOT WITH TRANSFORM(XOUT_6WK, '999,999,999')
            ENDIF
            
            IF MPROD_OUT6 = 0 .OR. XOUT_6WK = 0 .OR. (MPROD_BEG+MPROD_IN+MPROD_OUT = 0)
               REPLACE NBRWKS WITH TRANSFORM(MZERO, '9.9')
            ELSE
               MNBRWKS = ROUND((MPROD_BEG+MPROD_IN+MPROD_OUT) / XOUT_6WK,1)
               REPLACE NBRWKS WITH TRANSFORM(MNBRWKS, '99999.9')
            ENDIF
            
            IF MPRODOUT4 = 0
               REPLACE LAST_YR4WK WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE LAST_YR4WK WITH TRANSFORM(MPRODOUT4 * -1, '999,999,999')
            ENDIF
            
            IF MPRODOUT8 = 0
               REPLACE LAST_YR8WK WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE LAST_YR8WK WITH TRANSFORM(MPRODOUT8 * -1, '999,999,999')
            ENDIF
            
            IF MPRODOUT12 = 0
               REPLACE LAST_YR12W WITH TRANSFORM(MZERO, '999,999,999')
            ELSE
               REPLACE LAST_YR12W WITH TRANSFORM(MPRODOUT12 * -1, '999,999,999')
            ENDIF
         ENDIF
         
         APPEND BLANK
         SELECT A
         MLINE = MLINE + 2
      ENDDO
   ENDDO
ENDIF   

EJECT

SET DEVICE TO SCREEN
SET PRINT OFF
SET PRINT TO
SET CONSOLE ON
IF MPRT_OUT <> 'FILE'
   IF MPRINTER3 <> 'DONOTPRINT'
      RUN &MPRINTIT3
   ENDIF
ENDIF

CLOSE DATA
QUIT           

*Formatted by: ToolBox Ver. 1.2  on 6/17/19 at 11:07 AM.
