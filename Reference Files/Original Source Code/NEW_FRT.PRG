**********
* Program.: FREIGHT.PRG
* Author..: Grace Keller
* Date....: 10/15/87
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: FREIGHT/COMMISSION/TOTALS
*
* ---OPEN FILES
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     
**RON MONTGOMERY CHANGES
DO 8910_TOT
MTOT_QTY = 0
DO HEAD_TOT
MMORE_FRT = .T.  
STORE SPACE(32) TO MFRT_NAME1, MFRT_NAME2, MFRT_NAME3
STORE SPACE(4) TO MFRT_CODE1, MFRT_CODE2, MFRT_CODE3           
STORE 0 TO MFRT_AMT1, MFRT1_ADJ1, MFRT1_ADJ2, MFRT_AMT2, MFRT_AMT3              
STORE 0  TO MFRT_PALL, MCOMM_ENT2, MCOMM_ENT3
STORE SPACE(15) TO MFRT1_RS1, MFRT1_RS2                          
STORE SPACE(9) TO MREF_PO1, MREF_PO2, MREF_PO3, MREF_PO4, MREF_PO5, MREF_PO6
STORE SPACE(25) TO MSAL_NAME2, MSAL_NAME3
IF MCOMPANY <> 'AMERICHICKEN, INC' .AND. MCOMPANY <> 'MIDWEST FOOD -DIV 11'
   STORE SPACE(25) TO  MCOM_NAME, MCOM_NAME2, MCOM_NAME3
   STORE SPACE(2)  TO  MCOM_CODE, MCOM_CODE2, MCOM_CODE3
ENDIF
STORE SPACE(2) TO MSAL_CODE2, MSAL_CODE3
STORE SPACE(10) TO MMISCREAS1, MMISCREAS2, MMISCREAS3
STORE SPACE(1) TO MMISCSPLT1, MMISCSPLT2, MMISCSPLT3, MFRT2_FLG, MFRT3_FLG
STORE 0 TO MMISCAMT1, MMISCAMT2, MMISCAMT3, MSALE2_NET, MSALE3_NET
MSTORAGE = 0

IF B->CASE_8910 <> 0 .AND. B->SHIP_DATE < CTOD('10/01/2022') .AND. B->SHIP_DATE >= CTOD('01/01/2013') .AND. B->BBUYCODE <> 'INVN'
   MSAL_NAME2 = 'INNOVATIVE FOOD SOLUTIONS'
ELSE
   MSAL_NAME2 = SPACE(25)
ENDIF
IF MCOMPANY = 'DIVISION 15' .AND. MSALESMAN = '17'
   IF MPO_SUFFIX <> '8'.AND. MPO_SUFFIX <> '9'                              
      *** SEE IF THERE SHOULD BE STORAGE CALCULATED
      DO CASE
         *** COMING OUT OF INVENTORY - .0085+ .0085 + .0085 + .0085 = .034 /LB
      CASE MRSUPCODE = 'INVN'
         MSTORAGE = ROUND(.034 * MTOT_LBS,2)
         STORE 'INVN STOR ' TO MMISCREAS3
         STORE MSTORAGE TO MMISCAMT3
         STORE 'X' TO MMISCSPLT3
      CASE MRSUPCODE <> 'INVN' .AND. MBBUYCODE <> 'INVN'
         IF MBROKERAGE = 'Y' 
            *** DIRECT SALE-BUT SHORT TERM STORAGE HOLD = .0085+.0085 = .017/LB
            MSTORAGE = ROUND(.017 * MTOT_LBS,2)
            STORE 'HOLD STOR ' TO MMISCREAS3
            STORE MSTORAGE TO MMISCAMT3
            STORE 'X' TO MMISCSPLT3
         ENDIF
      ENDCASE
   ENDIF
ENDIF
SELECT F
USE

MDO_THIS = .T.
IF MDO_THIS
   *** FROM NOW ON - WHEN ADDING ORDER - SKIP FRT PAGE - PUT IN 'TBA '
   *** OR 'NONE' IF SHIP DATE IS SAME AS DELV DATE - CUSTOMER PICKUP
   IF B->PU_LOC = 'CPU'
      MFRT_CODE1 = 'NONE'
   ELSE
      MFRT_CODE1 = 'TBA '
   ENDIF
ELSE
   SELECT A
   DO FOX_USE WITH "&MDBFLOC.FREIGHT INDEX &MDBFLOC.FRT_NAME, &MDBFLOC.FRT_CODE", .F.
   SET PROC TO FRT_PROC
   DO FRT_SEL2 
   IF MFRT_CODE2 <> '    ' .AND. MFRT_CODE2 <> 'NONE' .AND. MFRT_CODE2 <> 'CUST'                  
      MFRT2_FLG = 'Y'
      SELECT A
      DO FOX_USE WITH "FRT_2ND INDEX FRT2_PO, FRT2_FRT", .F.
      SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
      IF EOF()
         DO FILELOCK
         APPEND BLANK
         REPLACE SALESMAN  WITH MSALESMAN
         REPLACE PO_NBR    WITH MPO_NBR
         REPLACE PO_SUFFIX WITH MPO_SUFFIX
         REPLACE FRT_CODE2 WITH MFRT_CODE2
         UNLOCK
      ENDIF
      DO RECLOCK
      REPLACE FRT_AMT2 WITH MFRT_AMT2
      UNLOCK
   ENDIF
   IF MFRT_CODE3 <> '    ' .AND. MFRT_CODE3 <> 'NONE' .AND. MFRT_CODE3 <> 'CUST'                  
      MFRT3_FLG = 'Y'
      SELECT A
      DO FOX_USE WITH "FRT_3RD INDEX FRT3_PO, FRT3_FRT", .F.
      SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
      IF EOF()
         DO FILELOCK
         APPEND BLANK
         REPLACE SALESMAN  WITH MSALESMAN
         REPLACE PO_NBR    WITH MPO_NBR
         REPLACE PO_SUFFIX WITH MPO_SUFFIX
         REPLACE FRT_CODE3 WITH MFRT_CODE3
         UNLOCK
      ENDIF
      DO RECLOCK
      REPLACE FRT_AMT3 WITH MFRT_AMT3
      UNLOCK
   ENDIF
ENDIF

MTITLE = ' - ADD PURCHASE ORDER - COMMISSION/TOTALS'    
SET PROC TO NEW_PROC 
DO SAYTOT1  
MACTION = 2
DO WHILE MACTION = 2   
   MSALE2_NET = 0
   MSALE3_NET = 0
   DO GETFRT9
   @ 24,0 SAY 'Action: 1'
   @ 24,12 SAY '1.Finish/Next PO    2.Edit    3.Finish/Return'
   READ    
   
   IF MCOMPANY <> 'AMERICHICKEN, INC' .AND. MCOMPANY <> 'MIDWEST FOOD -DIV 11'
      IF MCOM_NAME <> SPACE(25)
         SELECT A
         DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_NAME", .F.
         MCOM_FD = .F.
         STORE TRIM(MCOM_NAME) TO SRCH_ARG
         DO COM_SEL2
         IF .NOT. MCOM_FD
            MACTION = 2
            LOOP
         ENDIF
         STORE SUBSTR(NAME,1,25) TO MCOM_NAME
         STORE COM_CODE TO MCOM_CODE
         @  4,12 SAY MCOM_NAME
      ENDIF
      
      IF MCOM_NAME2 <> SPACE(25)
         SELECT A
         DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_NAME", .F.
         MCOM_FD = .F.
         STORE TRIM(MCOM_NAME2) TO SRCH_ARG
         DO COM_SEL2
         IF .NOT. MCOM_FD
            MACTION = 2
            LOOP
         ENDIF
         STORE SUBSTR(NAME,1,25) TO MCOM_NAME2
         STORE COM_CODE TO MCOM_CODE2
         @  6,12 SAY MCOM_NAME2
      ENDIF
      
      IF MCOM_NAME3 <> SPACE(25)
         SELECT A
         DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_NAME", .F.
         MCOM_FD = .F.
         STORE TRIM(MCOM_NAME3) TO SRCH_ARG
         DO COM_SEL2
         IF .NOT. MCOM_FD
            MACTION = 2
            LOOP
         ENDIF
         STORE SUBSTR(NAME,1,25) TO MCOM_NAME3
         STORE COM_CODE TO MCOM_CODE3
         @  8,12 SAY MCOM_NAME2
      ENDIF
   ENDIF
   
   IF MSAL_NAME2 <> SPACE(25)
      SELECT A
      **RON MONTGOMERY CHANGES
      **DO FOX_USE WITH "&MMASTDBF.SALESMAN INDEX &MMASTDBF.SAL_NAME", .F.
      DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_NAME", .F.
      
      SEEK TRIM(MSAL_NAME2)
      
      IF .NOT. EOF()
         STORE SUBSTR(NAME,1,25) TO MSAL_NAME2
         STORE COM_CODE TO MSAL_CODE2
         MSALE2_PER = 0
         *STORE SALE_PERC TO MSALE2_PER 
         *IF DTOC(EFF_DT2) <> '  /  /  '
         *   IF MSHIP_DATE >= EFF_DT2
         *      MSALE2_PER = SALE_PER2
         *   ENDIF
         *ENDIF
         *IF DTOC(EFF_DT3) <> '  /  /  '
         *   IF MSHIP_DATE >= EFF_DT3
         *      MSALE2_PER = SALE_PER3
         *   ENDIF
         *ENDIF
         @ 3,51 SAY MSAL_NAME2
      ELSE
         **** GIVE AN ERROR HERE
         @ 24,0 CLEAR
         STORE 'INTRACOMPANY SALESPERSON NAME NOT FOUND - PRESS RETURN TO REENTER' TO MERROR
         @ 24,5 GET MERROR
         CLEAR GETS
         STORE ' ' TO MSPACE
         @ 24,63 GET MSPACE
         READ
         LOOP
      ENDIF
   ENDIF
   
   IF MSAL_NAME3 <> SPACE(25)
      SELECT A
      DO FOX_USE WITH "&MMASTDBF.SALESMAN INDEX &MMASTDBF.SAL_NAME", .F.
      SEEK TRIM(MSAL_NAME3)
      
      IF .NOT. EOF()
         STORE SUBSTR(NAME,1,25) TO MSAL_NAME3
         STORE SALE_CODE TO MSAL_CODE3
         STORE SALE_PERC TO MSALE3_PER 
         IF DTOC(EFF_DT2) <> '  /  /  '
            IF MSHIP_DATE >= EFF_DT2
               MSALE3_PER = SALE_PER2
            ENDIF
         ENDIF
         IF DTOC(EFF_DT3) <> '  /  /  '
            IF MSHIP_DATE >= EFF_DT3
               MSALE3_PER = SALE_PER3
            ENDIF
         ENDIF
         @ 6,51 SAY MSAL_NAME3
      ELSE
         **** GIVE AN ERROR HERE
         @ 24,0 CLEAR
         STORE 'INTRACOMPANY SALESPERSON NAME NOT FOUND - PRESS RETURN TO REENTER' TO MERROR
         @ 24,5 GET MERROR
         CLEAR GETS
         STORE ' ' TO MSPACE
         @ 24,63 GET MSPACE
         READ
         LOOP
      ENDIF
   ENDIF
   
   
   MGROSS =  (MTOT_SELL+MCUS_PALL) - (MTOT_PURCH+MSUP_PALL)
   
   MNET = MGROSS - (MFRT_AMT1  + MFRT1_ADJ1 + MFRT1_ADJ2+ MFRT_PALL) - MFRT_AMT2 - MFRT_AMT3
   
   MCOMM_AMT = 0
   IF MCOM_CODE <> SPACE(2)
      IF MCOMM_ENT <> 0
         MCOMM_AMT = MCOMM_ENT
      ELSE
         IF MCOMM_CENT <> 0
            MCOMM_AMT = ROUND(MTOT_LBS * MCOMM_CENT,2)
         ELSE
            IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
               MCOMM_AMT = B->COMM_AMT
            ENDIF
         ENDIF
      ENDIF
      MNET = MNET - MCOMM_AMT
   ENDIF
   
   MCOMM_AMT2 = 0
   IF MCOM_CODE2 <> SPACE(2)
      IF MCOMM_ENT2 <> 0
         MCOMM_AMT2 = MCOMM_ENT2
      ELSE
         IF MCOMM_CEN2 <> 0
            MCOMM_AMT2 = ROUND(MTOT_LBS * MCOMM_CEN2,2)
         ELSE
            MCOMM_AMT2 = B->COMM_AMT2
         ENDIF
      ENDIF
      MNET = MNET - MCOMM_AMT2
   ENDIF
   
   MCOMM_AMT3 = 0
   IF MCOM_CODE3 <> SPACE(2)
      IF MCOMM_ENT3 <> 0
         MCOMM_AMT3 = MCOMM_ENT3
      ELSE
         IF MCOMM_CEN3 <> 0
            MCOMM_AMT3 = ROUND(MTOT_LBS * MCOMM_CEN3,2)
         ELSE
            MCOMM_AMT3 = B->COMM_AMT3
         ENDIF
      ENDIF
      MNET = MNET - MCOMM_AMT3
   ENDIF
   
   DO CASE
   CASE MZERO_COMM = 'H'
      STORE 0 TO MSALE2_AMT, MSALE3_AMT, MSALE2_NET, MSALE3_NET
      STORE .F. TO MCALC2, MCALC3
      
      IF MSAL_CODE2 = SPACE(2)
         *** NO NEED TO CALCULATE
         MCALC2 = .T.
      ENDIF
      
      **RON MONTGOMERY CHANGES
      ** MCALC2 = .T.
      
      IF MSAL_CODE3 = SPACE(2)
         *** NO NEED TO CALCULATE
         MCALC3 = .T.
      ENDIF
      
      **RON MONTGOMERY CHANGES
      IF MSAL_CODE2 <> SPACE(2)
         IF B->BBUYCODE = 'INVN'
            MSALE2_CEN = 0
         ELSE
            MSALE2_CEN = .10
         ENDIF
         STORE 0 TO MSALE2_PER
         MSALE2_AMT = ROUND(MSALE2_CEN * B->CASE_8910,2)
         MSALE2_PER = 0
         MSALE2_ENT = 0
         MNET = MNET - MSALE2_AMT
         MCALC2 = .T.
         
         *DO CASE
         *CASE MSALE2_CEN <> 0
         *   MAMOUNT = ROUND(MSALE2_CEN * MTOT_LBS,2)
         *   IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
         *      MSALE2_AMT = MAMOUNT
         *   ELSE
         *      MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
         *      MSALE2_NET = MAMOUNT - MSALE2_AMT      
         *   ENDIF
         *   MNET = MNET - MAMOUNT
         @ 4,51 SAY MSALE2_CEN PICTURE '9.9999'
         @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
         @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
         *   MCALC2 = .T.
         *CASE MSALE2_ENT <> 0
         *   MSALE2_AMT = MSALE2_ENT
         *   MNET = MNET - (MSALE2_AMT + MSALE2_NET)
         *   MCALC2 = .T.
         *ENDCASE
      ENDIF
      
      IF MSAL_CODE3 <> SPACE(2)
         DO CASE
         CASE MSALE3_CEN <> 0
            MAMOUNT = ROUND(MSALE3_CEN * MTOT_LBS,2)
            IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
               MSALE3_AMT = MAMOUNT
            ELSE
               MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
               MSALE3_NET = MAMOUNT - MSALE3_AMT      
            ENDIF
            MNET = MNET - MAMOUNT
            @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
            @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
            MCALC3 = .T.
         CASE MSALE3_ENT <> 0
            MSALE3_AMT = MSALE3_ENT
            MNET = MNET - (MSALE3_AMT + MSALE3_NET)
            MCALC3 = .T.
         ENDCASE
      ENDIF
      
      DO CASE
      CASE MCALC2 .AND. MCALC3
         *** NO ACTION REQUIRED
         *** CALCULATED OR NO SALESPERSON ENTERED
      CASE MCALC2 .AND. .NOT. MCALC3
         *** CALCULATED 2 - BUT NOT 3
         *** SPLIT TWO - CALC SALESPERSON 3
         MAMOUNT = ROUND(MNET/2,2)
         MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
         MSALE3_NET = MAMOUNT - MSALE3_AMT      
         MNET = MNET - MAMOUNT
         @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
         @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
      CASE MCALC3 .AND. .NOT. MCALC2
         *** CALCULATED 3 BUT NOT 2
         *** SPLIT TWO - CALC SALESPERSON 2
         MAMOUNT = ROUND(MNET/2,2)
         MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
         MSALE2_NET = MAMOUNT - MSALE2_AMT      
         MNET = MNET - MAMOUNT
         @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
         @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
         
      OTHERWISE
         **RON MONTGOMERY CHANGES ??? NEED THIS
         *** CALCULATED NO ONE BUT NEED TO CALCULATED 2 & 3
         *** SPLIT THREE WAYS - CALC SALESPERSON 2 & 3
         MAMOUNT = ROUND(MNET/2,3)
         
         MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
         MSALE2_NET = MAMOUNT - MSALE2_AMT      
         MNET = MNET - MAMOUNT
         @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
         @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
         
         MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
         MSALE3_NET = MAMOUNT - MSALE3_AMT      
         MNET = MNET - MAMOUNT
         @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
         @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
         
      ENDCASE
      
      
      MSALE_COMM = 0
      IF MZERO_COMM <> 'X'
         IF MSALE_ENT <> 0
            MSALE_COMM = MSALE_ENT
         ELSE
            IF MSALE_CENT <> 0
               MSALE_COMM = ROUND(MTOT_LBS * MSALE_CENT,2)
            ELSE
               MSALE_COMM = ROUND((MSALE_PERC * .01) * MNET,2)
            ENDIF
         ENDIF
      ENDIF
      
   OTHERWISE
      
      MSALE2_AMT = 0
      MSALE3_AMT = 0
      MSALE2_NET = 0
      MSALE3_NET = 0
      
      IF MSAL_CODE2 <> SPACE(2)
         MSALE2_CEN = .10
         STORE 0 TO MSALE2_PER
         MSALE2_AMT = ROUND(MSALE2_CEN * B->CASE_8910,2)
         MSALE2_PER = 0
         MSALE2_ENT = 0
         MNET = MNET - MSALE2_AMT
         MCALC2 = .T.
         
         *IF MSALE2_CEN <> 0
         *   MSALE2_NET = 0
         *   MAMOUNT = ROUND(MSALE2_CEN * MTOT_LBS,2)
         *   **IF MSAL_CODE2 = '11'
         *   IF MCOMPANY = 'AMERICHICKEN, INC.' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
         *      MSALE2_AMT = MAMOUNT
         *   ELSE
         *      MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
         *      MSALE2_NET = MAMOUNT - MSALE2_AMT      
         *   ENDIF
         **   MNET = MNET - MAMOUNT
         @ 4,51 SAY MSALE2_CEN PICTURE '9.9999'
         @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
         @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
         *ELSE
         *   MSALE2_AMT = MSALE2_ENT
         *   MNET = MNET - (MSALE2_AMT + MSALE2_NET)
         *ENDIF
      ENDIF
      
      IF MSAL_CODE3 <> SPACE(2)
         IF MSALE3_CEN <> 0
            MSALE3_NET = 0
            MAMOUNT = ROUND(MSALE3_CEN * MTOT_LBS,2)
            IF MCOMPANY = 'AMERICHICKEN, INC.' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
               MSALE3_AMT = MAMOUNT
            ELSE
               MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
               MSALE3_NET = MAMOUNT - MSALE3_AMT      
            ENDIF
            MNET = MNET - MAMOUNT
            @ 5,71 SAY MSALE3_AMT PICTURE '99999.99'
            @ 6,71 SAY MSALE3_NET PICTURE '99999.99'
         ELSE
            MSALE3_AMT = MSALE3_ENT
            MNET = MNET - (MSALE3_AMT + MSALE3_NET)
         ENDIF
      ENDIF
      
      MSALE_COMM = 0
      IF MZERO_COMM <> 'X'
         IF MSALE_ENT <> 0
            MSALE_COMM = MSALE_ENT
         ELSE
            IF MSALE_CENT <> 0
               MSALE_COMM = ROUND(MTOT_LBS * MSALE_CENT,2)
            ELSE
               MSALE_COMM = ROUND((MSALE_PERC * .01) * MNET,2)
            ENDIF
         ENDIF
      ENDIF
   ENDCASE
   
   
   
   IF MMISCAMT1 <> 0
      IF MMISCSPLT1 = 'X'
         MCOMSPLT1 = ROUND((MSALE_PERC * .01) * MMISCAMT1,2) 
         MNETSPLT1 = MMISCAMT1 - MCOMSPLT1
      ELSE 
         STORE 0 TO MCOMSPLT1
         STORE MMISCAMT1 TO MNETSPLT1
      ENDIF
      @ 12,57 SAY MCOMSPLT1 PICTURE '99999.99'
      @ 12,68 SAY MNETSPLT1 PICTURE '99999.99'
   ELSE
      STORE 0 TO MCOMSPLT1, MNETSPLT1
      @ 12,57 SAY MCOMSPLT1 PICTURE '99999.99'
      @ 12,68 SAY MNETSPLT1 PICTURE '99999.99'
   ENDIF
   
   IF MMISCAMT2 <> 0
      IF MMISCSPLT2 = 'X'
         MCOMSPLT2 = ROUND((MSALE_PERC * .01) * MMISCAMT2,2) 
         MNETSPLT2 = MMISCAMT2 - MCOMSPLT2
      ELSE 
         STORE 0 TO MCOMSPLT2
         STORE MMISCAMT2 TO MNETSPLT2
      ENDIF
      @ 13,57 SAY MCOMSPLT2 PICTURE '99999.99'
      @ 13,68 SAY MNETSPLT2 PICTURE '99999.99'
   ELSE
      STORE 0 TO MCOMSPLT2, MNETSPLT2
      @ 13,57 SAY MCOMSPLT2 PICTURE '99999.99'
      @ 13,68 SAY MNETSPLT2 PICTURE '99999.99'
   ENDIF
   
   IF MMISCAMT3 <> 0
      IF MMISCSPLT3 = 'X'
         MCOMSPLT3 = ROUND((MSALE_PERC * .01) * MMISCAMT3,2) 
         MNETSPLT3 = MMISCAMT3 - MCOMSPLT3
      ELSE 
         STORE 0 TO MCOMSPLT3
         STORE MMISCAMT3 TO MNETSPLT3
      ENDIF
      *@ 13,57 SAY MCOMSPLT3 PICTURE '99999.99'
      *@ 13,68 SAY MNETSPLT3 PICTURE '99999.99'
   ELSE
      STORE 0 TO MCOMSPLT3, MNETSPLT3
      *@ 13,57 SAY MCOMSPLT3 PICTURE '99999.99'
      *@ 13,68 SAY MNETSPLT3 PICTURE '99999.99'
   ENDIF
   MSALE_COMM = MSALE_COMM - MCOMSPLT1 - MCOMSPLT2 - MCOMSPLT3
   MNET = MNET - MSALE_COMM
   MNET = MNET - MMISCAMT1 - MMISCAMT2 - MMISCAMT3
   
   DO SAYTOT9 
   
   STORE 1 TO MACTION
   @ 24,0 SAY 'Action: ' + STR(MACTION,1)
   IF MPROG_CODE = 2
      @ 24,12 SAY '1.Fin/Prt/Next      2.Edit    3.Finish/Return   4.Update Notes'
   ELSE
      @ 24,12 SAY '1.Finish/Next PO    2.Edit    3.Finish/Return   4.Update Notes'
   ENDIF
   @ 24,8 GET MACTION PICTURE '#' RANGE 1,4
   READ
   IF MACTION = 4
      SAVE SCREEN TO MGRACE
      DO UPDNOTES
      RESTORE SCREEN FROM MGRACE
      STORE 1 TO MACTION
      @ 24,0 CLEAR
      @ 24,0 SAY 'Action: '
      @ 24,12 SAY '1.Finish/Next PO    2.Edit    3.Finish/Return'
      @ 24,8 GET MACTION PICTURE '#' RANGE 1,3
      READ
   ENDIF
ENDDO

**** CHECK TO SEE IF THE CUSTOMER IS OVER THE CREDIT LIMIT 
MUPD_BAL = .T.
IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
   MAM_FLG = .T.
ELSE
   MAM_FLG = .F.
ENDIF
IF MAM_FLG .AND. MBROKERAGE = 'H'
   MUPD_BAL = .F.
ENDIF

IF MUPD_BAL
   SELECT E
   DO FOX_USE WITH "&MDBFLOC.BIL_BUY INDEX &MDBFLOC.BBUYCODE", .F.
   SEEK B->BBUYCODE
   DO RECLOCK  
   REPLACE CUS_BAL WITH CUS_BAL + MTOT_SELL + MCUS_PALL
   UNLOCK
ENDIF

*IF CUS_BAL > CRED_LIM
*   @ 24,0 CLEAR
*   MWAIT = '  '
*   DO WHILE MWAIT <> 'OK'
*      @ 24,1 SAY 'WARNING:Customer OVER Credit Limit -Please Notify- Enter "OK" to Continue ' GET MWAIT PICTURE '@!'
*      READ
*   ENDDO
*   SELECT E
*   DO FOX_USE WITH "OVER_LIM", .F.
*   DO FILELOCK
*   APPEND BLANK
*   REPLACE SALESMAN  WITH MSALESMAN
*   REPLACE PO_NBR    WITH MPO_NBR
*   REPLACE PO_SUFFIX WITH MPO_SUFFIX
*   REPLACE BBUYCODE  WITH MBBUYCODE
*   UNLOCK
*   USE
*ENDIF
SELECT E
USE

SET PROC TO PO_PROC
IF B->INV_NBR <> SPACE(5)
   ***** CHECK OUT UPDATES FOR THE 3RD PARTY CONTRACTOR COMMISSION
   IF B->SALE2_AMT <> MSALE2_AMT 
      STORE B->SALE2_AMT TO MOLD_AMT2
      STORE B->SAL_CODE2 TO MOLD_CODE2
      SELECT D
      DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTDT, COMTPD", .F.
      *** LOOK FOR A NOT PAID INVOICE ENTRY
      SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + '4' + ' I'
      IF .NOT. EOF()
         DO RECLOCK
         REPLACE COM_CODE WITH MSAL_CODE2
         REPLACE AMOUNT WITH MSALE2_AMT
         UNLOCK
      ELSE
         *** LOOK FOR A NOT PAID CORRECTION ENTRY
         SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + '4' + ' C1'
         IF EOF()
            *** FIND THE LAST POSTED RECORD  TO MAKE A BACKOUT ENTRY
            SET ORDER TO 2
            SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + '4'
            DO WHILE .NOT. EOF() .AND. SALESMAN = MSALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX .AND. THD_SEQ = '2'
               STORE AMOUNT TO MOLD_AMT2
               STORE COM_CODE TO MOLD_CODE2
               SKIP
            ENDDO
            SET ORDER TO 1
            DO FILELOCK
            APPEND BLANK
            REPLACE SALESMAN WITH MSALESMAN
            REPLACE PO_NBR   WITH MPO_NBR
            REPLACE PO_SUFFIX WITH MPO_SUFFIX
            REPLACE THD_SEQ   WITH '4'
            REPLACE INV_NBR WITH B->INV_NBR
            REPLACE TRAN_DATE WITH DATE()
            REPLACE COR_FLG WITH 'C'
            REPLACE SEQ WITH '1'
            REPLACE COM_TYPE WITH 'T'
            REPLACE AMOUNT WITH (-1) * MOLD_AMT2
            REPLACE COM_CODE WITH MOLD_CODE2
         ENDIF
         SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + '4' + ' C2'
         IF EOF()
            DO FILELOCK
            APPEND BLANK
            REPLACE SALESMAN WITH MSALESMAN
            REPLACE PO_NBR   WITH MPO_NBR
            REPLACE PO_SUFFIX WITH MPO_SUFFIX
            REPLACE INV_NBR WITH B->INV_NBR
            REPLACE THD_SEQ WITH '4'
            REPLACE TRAN_DATE WITH DATE()
            REPLACE COR_FLG WITH 'C'
            REPLACE SEQ WITH '2'
            REPLACE COM_TYPE WITH 'T'
         ENDIF
         DO RECLOCK
         REPLACE COM_CODE WITH MSAL_CODE2
         REPLACE AMOUNT WITH MSALE2_AMT
         UNLOCK
      ENDIF
      SELECT D
      USE
   ENDIF
ENDIF
SELECT B
DO REPLFRT
IF MMISCAMT1 <> 0 .OR. MMISCAMT2 <> 0 .OR. MMISCAMT3 <> 0
   SELECT E
   DO FOX_USE WITH "MISC_CHG INDEX MISC_CHG", .F.
   
   IF B->MISC_FLG = ' '
      DO FILELOCK
      APPEND BLANK
      REPLACE SALESMAN WITH MSALESMAN
      REPLACE PO_NBR WITH MPO_NBR
      REPLACE PO_SUFFIX WITH MPO_SUFFIX
      UNLOCK
   ELSE
      SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
   ENDIF
   IF .NOT. EOF()
      DO RECLOCK
      REPLACE MISCREAS1 WITH MMISCREAS1
      REPLACE MISCREAS2 WITH MMISCREAS2
      REPLACE MISCREAS3 WITH MMISCREAS3
      REPLACE MISCAMT1 WITH MMISCAMT1
      REPLACE MISCAMT2 WITH MMISCAMT2
      REPLACE MISCAMT3 WITH MMISCAMT3
      REPLACE MISCSPLT1 WITH MMISCSPLT1
      REPLACE MISCSPLT2 WITH MMISCSPLT2
      REPLACE MISCSPLT3 WITH MMISCSPLT3
      FLUSH
      UNLOCK
      SELECT B
      DO RECLOCK
      REPLACE MISC_FLG WITH 'Y'
      UNLOCK
   ENDIF
ENDIF
RELEASE MSTORAGE, MUPD_BAL
RELEASE MMISCAMT1, MMISCAMT2, MMISCAMT3, MMISCREAS1, MMISCREAS2, MMISCREAS3
RELEASE MCOMSPLT1, MCOMSPLT2, MCOMSPLT3
RELEASE MNETSPLT1, MNETSPLT2, MNETSPLT3

**** NEW HERE - IF MFI  OR AMERICHICKEN - PRINT AN ACTUAL ORDER COPY
IF MPROG_CODE = 2 .OR. MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
   DO PRT_ONE
ELSE 
   IF MFRT_CODE1 <> SPACE(4) .AND. MFRT_CODE1 <> 'NONE'
      DO PRT_FRT
   ENDIF
ENDIF
MMORE_TOT = .F.
*IF MBBUYCODE <> 'NONE' .AND. MBBUYCODE <> 'INVN' .AND. MPO_WARN <> SPACE(20)
IF MBBUYCODE <> 'NONE' .AND. MBBUYCODE <> 'I' .AND. MPO_WARN <> SPACE(20)
   @ 24,0 CLEAR
   STORE 'CUSTOMER REMINDER: ' + MPO_WARN + ' - PRESS RETURN TO CONTINUE ' TO MMSG
   @ 24,0 GET MMSG
   READ
   @ 24,0 CLEAR
ENDIF

IF B->BBUYCODE = 'NONE' .AND. (MTOT_SELL+MCUS_PALL) <> 0
   @ 24,0 CLEAR
   STORE 'CORRECT ERROR!! CUSTOMER IS "NONE" -BUT SELLING TOTAL IS NOT 0- PRESS ENTER' TO MMSG
   @ 24,0 GET MMSG
   READ
   @ 24,0 CLEAR
ENDIF
IF B->RSUPCODE = 'NONE' .AND. (MTOT_PURCH+MSUP_PALL) <> 0
   @ 24,0 CLEAR
   STORE 'CORRECT ERROR!! SUPPLIER IS "NONE" -BUT TOTAL PURCHASE IS NOT 0- PRESS ENTER' TO MMSG
   @ 24,0 GET MMSG
   READ
   @ 24,0 CLEAR
ENDIF

SET PROC TO PO_PROC
RETURN
* EOF: NEW_FRT.PRG


*Formatted by: ToolBox Ver. 1.2  on 1/24/13 at 3:36 PM.
