**********
* Program.: MISC_ADD.PRG
* Author..: Grace Keller
* Date....: 10/14/87
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: MISCELLANEOUS ADJUSTMENTS              
*
* ---OPEN FILES
MTITLE =  ' - ADD MISCELLANEOUS ADJUSTMENTS'
MCALC_SELL = 0
SELECT C
SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
DO WHILE .NOT. EOF() .AND. SALESMAN = MSALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX
   MCALC_SELL  = MCALC_SELL + TOT_SELL
   SKIP
ENDDO

SELECT B
STORE SPACE(15) TO MSUP_REAS1, MSUP_REAS2, MCUS_REAS1, MCUS_REAS2
STORE 0 TO MSUP_AMT1, MSUP_AMT2, MCUS_AMT1, MCUS_AMT2, MWRITEOFF
STORE 0 TO MSUP_PALL, MCUS_PALL
STORE SPACE(60) TO MINV_COMMT, MSUP_COMMT

*IF SUBSTR(B->BUY_CODE,1,1) = 'P' .OR. B->PU_LOC = 'CPU'
** CHECK FOR ORDER CUSTOMER PICKUP ALLOWANCES
** THEN CHECK FOR ITEM CUSTOMER PICKUP ALLOWANCE

** BREADING
** REBATE
** SAMPLE
** DAMAGED

IF B->PO_SUFFIX <> 'B' .AND. B->PO_SUFFIX <> 'R' .AND. B->PO_SUFFIX <> 'S' .AND. B->PO_SUFFIX <> 'D'
   MDESC = SPACE(15)
   MAMT = 0
   MLB_AMT = 0

   SELECT F
   DO FOX_USE WITH "&MDBFLOC.PICKUP INDEX &MDBFLOC.PICKUP", .F.
   SEEK B->BUY_CODE
   IF .NOT. EOF()
      DO CASE
      CASE BEG_DT3 <> CTOD('') .AND. B->SHIP_DATE >= BEG_DT3
         MLB_AMT = ALLOW3
         MAMT    = AMT3
         MDESC =  DESC3
      CASE BEG_DT2 <> CTOD('') .AND. B->SHIP_DATE >= BEG_DT2
         MLB_AMT = ALLOW2
         MDESC  = DESC2
         MAMT    = AMT2
      CASE BEG_DT1 <> CTOD('') .AND. B->SHIP_DATE >= BEG_DT1
         MLB_AMT = ALLOW1
         MDESC  = DESC1
         MAMT    = AMT1
      ENDCASE
   ENDIF
   USE
   IF MLB_AMT <> 0
      MCUS_AMT1 = ROUND(MLB_AMT * B->TOT_LBS,2) * -1
      MCUS_REAS1 = MDESC
   ELSE
      IF MAMT <> 0
         MCUS_AMT1 = MAMT * -1
         MCUS_REAS1 = MDESC
      ENDIF
   ENDIF

   ** WHEN MDESC IS BLANK THERE IS NO OVERALL ORDER PICKUP ALLOWANCE
   ** SO, CHECK FOR ONE BY ITEM
   IF MDESC = SPACE(15) .AND. MLB_AMT = 0
      MITMPK_TOT = 0

      SELECT F
      DO FOX_USE WITH "&MDBFLOC.PKUPITEM INDEX &MDBFLOC.PKUPITEM", .F.

      SELECT C
      SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX

      DO WHILE .NOT. EOF() .AND. SALESMAN = MSALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX
         SELECT F
         SEEK B->BUY_CODE + C->PROD_DESC
         IF .NOT. EOF() .AND. B->SHIP_DATE >= BEG_DT .AND. B->SHIP_DATE <= END_DT
            MLB_AMT = ROUND(ITM_PKUP * C->LBS,2)
            MITMPK_TOT = MITMPK_TOT + MLB_AMT
            IF MDESC =  SPACE(15)
               MDESC = PBUYTYPE
            ENDIF
         ENDIF
         SELECT C
         SKIP
      ENDDO
      IF MDESC <> SPACE(15) .AND. MITMPK_TOT <> 0
         MCUS_AMT1 = MITMPK_TOT
         MCUS_REAS1 = MDESC
      ENDIF
      SELECT F
      USE
   ENDIF
ENDIF


*** CHECK FOR ANY CUSTOMER DEDUCTIONS/PROGRAMS/PROMOTIONS
SELECT F
DO FOX_USE WITH "&MDBFLOC.CUST_DED INDEX &MDBFLOC.CUST_DED", .F.
SEEK B->BBUYCODE

DO WHILE .NOT. EOF() .AND. BBUYCODE = B->BBUYCODE
   MAMT = 0
   MDESC = SPACE(15)
   MPERCENT = 0
   
   DO CASE
   CASE BEG_DT3 <> CTOD('') .AND. B->ORD_DATE >= BEG_DT3
      MAMT = ALLOW3
      MPERCENT = PERCENT3
      MDESC =  DESC3
   CASE BEG_DT2 <> CTOD('') .AND. B->ORD_DATE >= BEG_DT2
      MAMT = ALLOW2
      MPERCENT = PERCENT2
      MDESC  = DESC2
   CASE BEG_DT1 <> CTOD('') .AND. B->ORD_DATE >= BEG_DT1
      MAMT = ALLOW1
      MPERCENT = PERCENT1
      MDESC  = DESC1
   ENDCASE
   
   DO CASE
   CASE MAMT <> 0
      IF MCUS_AMT1 = 0
         MCUS_AMT1 = ROUND(MAMT * B->TOT_LBS,2)
         MCUS_REAS1 = MDESC
         IF B->TOT_LBS < 0
            MCUS_AMT1 = 0
            MCUS_REAS1 = SPACE(15)
         ENDIF
      ELSE
         MCUS_AMT2 = ROUND(MAMT * B->TOT_LBS,2)
         MCUS_REAS2 = MDESC
         IF B->TOT_LBS < 0
            MCUS_AMT2 = 0
            MCUS_REAS2 = SPACE(15)
         ENDIF
      ENDIF
   CASE MPERCENT <> 0
      IF MCUS_AMT1 = 0
         MCUS_AMT1 = ROUND(MPERCENT * MCALC_SELL,2)
         MCUS_REAS1 = MDESC
         IF MCALC_SELL < 0
            MCUS_AMT1 = 0
            MCUS_REAS1 = SPACE(15)
         ENDIF
      ELSE
         MCUS_AMT2 = ROUND(MPERCENT * MCALC_SELL,2)
         MCUS_REAS2 = MDESC
         IF MCALC_SELL < 0
            MCUS_AMT2 = 0
            MCUS_REAS2 = SPACE(15)
         ENDIF
      ENDIF
   ENDCASE
   SKIP
ENDDO

USE

*** ALSO CHECK FOR CUSTOMER OFF INVOICE PROMOTIONS
SELECT C
SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
MBUYOFF = 0
MBUYPAY = 0

DO WHILE .NOT. EOF() .AND. SALESMAN = MSALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX
   MBUYOFF = MBUYOFF + PBUYOFF
   MBUYPAY = MBUYPAY + PBUYPAY
   SKIP
ENDDO

IF MBUYOFF < 0
   IF MCUS_AMT1 = 0
      MCUS_AMT1 = MBUYOFF
      MCUS_REAS1 = 'PROGRAM/OFF INV'
   ELSE
      MCUS_AMT2 = MBUYOFF
      MCUS_REAS2 = 'PROGRAM/OFF INV'
   ENDIF
ENDIF

IF MBUYPAY < 0
   IF MCUS_AMT1 = 0
      MCUS_AMT1 = MBUYPAY
      MCUS_REAS1 = 'PROGRAM/BILLBAK'
   ELSE
      MCUS_AMT2 = MBUYPAY
      MCUS_REAS2 = 'PROGRAM/BILLBAK'
   ENDIF
ENDIF
SELECT B

DO TEXTMISC
MMORE_MISC = .T.     

DO WHILE MMORE_MISC
   DO GETMISC
   STORE 1 TO MACTION
   @ 24,0 SAY 'Action: ' + STR(MACTION,1)
   
   @ 24,13 SAY '1. Continue       2. Edit'
   READ
   IF MCOMPANY = 'DIVISION 70'
      IF MSUP_AMT1 < 0 .AND. MSUP_REAS1 <> 'LBS='
         @ 24,0 CLEAR 
         MCHOICE = ' '
         @ 24,1 SAY "WARNING: SUP CREDIT ENTERED & REASON NOT 'LBS=' FORMAT -CONT(C) OR EDIT(E)? " GET MCHOICE PICTURE '@!' VALID(MCHOICE = 'C' .OR. MCHOICE = 'E')
         READ
         @ 24,0 CLEAR
         IF MCHOICE = 'E'
            MACTION = 2
            LOOP
         ENDIF
      ENDIF
      
      IF MSUP_AMT2 < 0 .AND. MSUP_REAS2 <> 'LBS='
         @ 24,0 CLEAR 
         MCHOICE = ' '
         @ 24,1 SAY "WARNING: SUP CREDIT ENTERED & REASON NOT 'LBS=' FORMAT -CONT(C) OR EDIT(E)? " GET MCHOICE PICTURE '@!' VALID(MCHOICE = 'C' .OR. MCHOICE = 'E')
         READ
         @ 24,0 CLEAR
         IF MCHOICE = 'E'
            MACTION = 2
            LOOP
         ENDIF
      ENDIF
   ENDIF
   @ 24,8 GET MACTION PICTURE '#' RANGE 1,2
   READ
   
   IF MACTION = 2
      LOOP 
   ENDIF
   SELECT B
   DO RECLOCK
   REPLACE SUP_REAS1 WITH MSUP_REAS1
   REPLACE SUP_REAS2 WITH MSUP_REAS2
   REPLACE SUP_AMT1 WITH MSUP_AMT1
   REPLACE SUP_AMT2 WITH MSUP_AMT2
   REPLACE CUS_REAS1 WITH MCUS_REAS1
   REPLACE CUS_REAS2 WITH MCUS_REAS2
   REPLACE CUS_AMT1 WITH MCUS_AMT1
   REPLACE CUS_AMT2 WITH MCUS_AMT2
   *  REPLACE INV_COMMT WITH MINV_COMMT
   REPLACE WRITEOFF WITH MWRITEOFF
   REPLACE SUP_PALL WITH MSUP_PALL
   REPLACE CUS_PALL WITH MCUS_PALL
   UNLOCK
   IF MINV_COMMT <> SPACE(60) .OR. MSUP_COMMT <> SPACE(60)
      SELECT F
      DO FOX_USE WITH "PRT_NOTE INDEX PRT_NOTE", .F.
      DO FILELOCK
      APPEND BLANK
      REPLACE SALESMAN WITH MSALESMAN
      REPLACE PO_NBR WITH MPO_NBR
      REPLACE PO_SUFFIX WITH MPO_SUFFIX
      REPLACE INV_COMMT WITH MINV_COMMT
      REPLACE SUP_COMMT WITH MSUP_COMMT
      UNLOCK
      USE 
      SELECT B
   ENDIF
   MMORE_MISC = .F.
ENDDO
RETURN
* EOF: MISC_ADD.PRG
*Formatted by: ToolBox Ver. 1.2  on 1/4/8 at 1:20 PM.
