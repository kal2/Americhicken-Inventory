***********************
* Program.: TRANIADD.PRG
* Author..: Grace Keller
* Date....: 04/10/94
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: ORDER ITEM ADD - MULTIPLE PAGES
*         :                  NEW FOR AUTOMATIC INVENTORY UPDATING
*
* ---OPEN FILES
RELEASE MQTY
RELEASE MFR_FZ
RELEASE MGRADE
RELEASE MPAK  
RELEASE MCLASS
RELEASE MPROD
RELEASE MSIZE
RELEASE MPACKSPEC
RELEASE MLBS
RELEASE MPURC_PRI
RELEASE MSELL_PRI
RELEASE MPURC_TOT
RELEASE MSELL_TOT
RELEASE MSHRT_BOX
RELEASE MSHRT_LBS
RELEASE MBILL_PRI
RELEASE MPAK1  
RELEASE MPAK2  
RELEASE MBOX_SZ
RELEASE MOLD_LOT
RELEASE MOLD_LBS
RELEASE MOLD_QTY
RELEASE MOLD_PROD
RELEASE MIN_LOT
RELEASE MOUT_LOT
RELEASE MOLD_IN
RELEASE MOLD_OUT
RELEASE MSTOR_ITEM
RELEASE MPAK_YR
RELEASE MPAK_DAY

DIMENSION MQTY(7)
DIMENSION MFR_FZ(7)
DIMENSION MGRADE(7)
DIMENSION MPAK(7)  
DIMENSION MCLASS(7)
DIMENSION MPROD(7)
DIMENSION MSIZE(7)
DIMENSION MPACKSPEC(7)
DIMENSION MLBS(7)
DIMENSION MPURC_PRI(7)
DIMENSION MSELL_PRI(7)
DIMENSION MPURC_TOT(7)
DIMENSION MSELL_TOT(7)
DIMENSION MSHRT_BOX(7)
DIMENSION MSHRT_LBS(7)
DIMENSION MBILL_PRI(7)
DIMENSION MPAK1(7)  
DIMENSION MPAK2(7)  
DIMENSION MBOX_SZ(7)
DIMENSION MOLD_LOT(7)
DIMENSION MOLD_LBS(7)
DIMENSION MOLD_QTY(7)
DIMENSION MOLD_PROD(7)
DIMENSION MIN_LOT(7)
DIMENSION MOUT_LOT(7)
DIMENSION MOLD_IN(7)
DIMENSION MOLD_OUT(7)
DIMENSION MSTOR_ITEM(7)
DIMENSION MPAK_YR(7)
DIMENSION MPAK_DAY(7)

SET PROC TO I_PROC
MMORE_ITM = .T.  
MPAGE = 1
CLEAR
@  1, 0 SAY MCOMPANY
@  1,68 SAY DATE()
MTITLE = ' - ADD ORDER ITEMS'
@  2, 0 SAY MPROGRAM + MTITLE
@  2,45 SAY 'ORDER #:'
@ 2,55 SAY MSALESMAN
@ 2,57 SAY '-'
@ 2,58 SAY MPO_NBR
IF MPO_SUFFIX <> ' '
   @ 2,62 SAY '-'
   @ 2,63 SAY MPO_SUFFIX
ENDIF

@ 10,5 SAY 'PLEASE WAIT, ADDING ORDER ITEMS....'

MPAGE = 1 
SELECT F
IF MTRAN_SALE = '  '
   DO FOX_USE WITH "TRAN_DTL INDEX TRAN_DTL", .F.
ELSE
   MFILE = 'TRAN_D' + MTRAN_SALE
   DO FOX_USE WITH "&MFILE INDEX &MFILE", .F.
ENDIF
SEEK MSALESMAN+MPO_NBR+MPO_SUFFIX
I = 0
DO WHILE .NOT. EOF() .AND. SALESMAN = MSALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX
   MNBR_ITM = 1        
   I = VAL(ITEM_NBR)
   STORE 0 TO MQTY(MNBR_ITM), MLBS(MNBR_ITM), MBOX_SZ(MNBR_ITM)
   STORE 0 TO MOLD_QTY(MNBR_ITM), MOLD_LBS(MNBR_ITM)
   STORE 0 TO MPURC_PRI(MNBR_ITM), MSELL_PRI(MNBR_ITM), MSTOR_ITEM(MNBR_ITM)
   STORE SPACE(2) TO MFR_FZ(MNBR_ITM)
   STORE SPACE(1) TO MPAK1(MNBR_ITM), MPAK2(MNBR_ITM), MGRADE(MNBR_ITM)
   STORE SPACE(4) TO MPROD(MNBR_ITM), MOLD_PROD(MNBR_ITM)
   STORE SPACE(8) TO MPACKSPEC(MNBR_ITM)
   STORE SPACE(10) TO MIN_LOT(MNBR_ITM), MOLD_IN(MNBR_ITM)
   STORE SPACE(10) TO MOUT_LOT(MNBR_ITM), MOLD_OUT(MNBR_ITM)
   STORE SPACE(5) TO MSIZE(MNBR_ITM)
   STORE 0 TO MPAK_YR(MNBR_ITM), MPAK_DAY(MNBR_ITM)

   **** STORE THE ITEM, LIKE GETITM
   STORE QTY         TO MQTY(MNBR_ITM)                         
   STORE FRH_FRZ     TO MFR_FZ(MNBR_ITM)    
   STORE GRADE       TO MGRADE(MNBR_ITM)    
   STORE SUBSTR(PACKAGED,1,1) TO MPAK1(MNBR_ITM)      
   STORE SUBSTR(PACKAGED,2,1) TO MPAK2(MNBR_ITM)
   STORE PROD_DESC   TO MPROD(MNBR_ITM)                             
   STORE SIZE        TO MSIZE(MNBR_ITM)      
   STORE PACKED      TO MPACKSPEC(MNBR_ITM) 
   STORE LBS         TO MLBS(MNBR_ITM)                            
   STORE PUR_PRICE   TO MPURC_PRI(MNBR_ITM) 
   STORE SEL_PRICE   TO MSELL_PRI(MNBR_ITM)
   STORE TOT_PURCH   TO MPURC_TOT(MNBR_ITM)
   STORE TOT_SELL    TO MSELL_TOT(MNBR_ITM)
   STORE BOX_SZ      TO MBOX_SZ(MNBR_ITM)

   *STORE STOR_LB     TO MSTOR_ITEM(MNBR_ITM)
   *STORE LOT_NBR     TO MLOT(MNBR_ITM)                          
   
   STORE RECNO() TO MTRANREC
   X = 1
   SELECT C
   DO FILELOCK
   MAPPEND = .T.
   DO REPLITM 
   SELECT C
   FLUSH
   UNLOCK
   
   **********************************
   ***** DO SOME WARNING EDITS
   *** NOW DO SOME WARNING EDITS HERE
   **********************************
   
   *** 1.  PENDING LOT NUMBER
   *** TAKING OUT OF INVENTORY , LOT NUMBER SHOULD NOT BE PENDING          
   IF B->RSUPCODE = 'INVN' .AND. SUBSTR(MLOT(MNBR_ITM),1,1) = 'P'       
      @ 24,0       
      MCONT = ' '
      DO WHILE MCONT <> 'C'
         @ 24,1 SAY 'WARNING: ' + MLOT(MNBR_ITM) + '-TAKING OUT OF INVN-LOT # IS PENDING-ENTER "C" TO CONT ' GET MCONT PICTURE '@!' 
         READ
      ENDDO
      @ 24,0 
   ENDIF
   
   IF B->RSUPCODE = 'INVN'
      *** 2.  SELLING OUT OF INVENTORY & LOT NOT ON FILE
      *** 3.  OVERSOLD CASES ON LOT
      SELECT E
      DO FOX_USE WITH "&MDBFLOC.SUPPLIER INDEX &MDBFLOC.SUP_CODE", .F.
      SEEK B->SUP_CODE
      IF EOF()
         MFREEZ_LOC = 'UNKNOWN' + SPACE(25)
      ELSE
         MFREEZ_LOC = NAME
      ENDIF
      
      DO FOX_USE WITH "INVEN INDEX INVNLOC, INVNSOLD, INVNINBR, INVNLOT, INVNPO, INVNANIV, INVNCAT", .F.
      SEEK MFREEZ_LOC + MLOT(MNBR_ITM)
      IF EOF()
         @ 24,0       
         MCONT = ' '
         DO WHILE MCONT <> 'C'
            @ 24,1 SAY 'WARNING: ' + MLOT(MNBR_ITM) + '-LOT # NOT ON FILE-ENTER "C" TO CONT ' GET MCONT PICTURE '@!' 
            READ
         ENDDO
         @ 24,0 
      ELSE
         IF CASE_LEFT < 0
            @ 24,0       
            MCONT = ' '
            DO WHILE MCONT <> 'C'
               @ 24,1 SAY 'WARNING: ' + MLOT(MNBR_ITM) + '-NOT THAT MANY CASES LEFT-ENTER "C" TO CONT ' GET MCONT PICTURE '@!' 
               READ
            ENDDO
            @ 24,0 
         ENDIF
      ENDIF
      USE     
   ENDIF
   
   SELECT C
   
   *** 4.  EQUITY LOT COMING OUT OF INVENTORY
   *** CHECK FOR EQUITY LOT NUMBERS HERE IN THE CONTROL FILE
   IF B->RSUPCODE = 'INVN'                                              
      SELECT E
      DO FOX_USE WITH "&MMASTDBF.CONTROL", .F.
      IF MLOT(MNBR_ITM)  = EQUITY1 .OR. MLOT(MNBR_ITM) = EQUITY2
         @ 24,0       
         MCONT = ' '
         DO WHILE MCONT <> 'C'
            @ 24,1 SAY 'WARNING: ' + MLOT(MNBR_ITM) + '-TAKING OUT OF INVN-EQUITY LOT- ENTER "C" TO CONT ' GET MCONT PICTURE '@!' 
            READ
         ENDDO
         @ 24,0 
      ENDIF
      USE
   ENDIF
   
   *** 5.  EQUITY LOT GOING INTO INVENTORY BOUGHT FROM EQUITY GROUP,CHICAGO,IL
   IF B->BBUYCODE = 'INVN' .AND. B->RSUPCODE = ' 194'                   
      @ 24,0       
      MCONT = ' '
      DO WHILE MCONT <> 'C'
         @ 24,1 SAY 'WARNING: ' + MLOT(MNBR_ITM) + ' - Going into Invn-NEW Equity Lot-ENTER "C" TO CONT ' GET MCONT PICTURE '@!' 
         READ
      ENDDO
      @ 24,0 
   ENDIF
   
   SELECT F
   IF MTRAN_SALE = '  '
      DO FOX_USE WITH "TRAN_DTL INDEX TRAN_DTL", .F.
   ELSE
      MFILE = 'TRAN_D' + MTRAN_SALE
      DO FOX_USE WITH "&MFILE INDEX &MFILE", .F.
   ENDIF
   GOTO MTRANREC
   SKIP
ENDDO 

**** CALCULATE TOTALS FOR ITEMS      
STORE 0 TO MTOT_SELL, MTOT_PURCH, MTOT_LBS, MTLBS_CALC, MTOT_STOR
SELECT C
SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
DO WHILE MSALESMAN = SALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX  .AND. .NOT. EOF()
   MTOT_SELL = MTOT_SELL + TOT_SELL
   MTOT_PURCH = MTOT_PURCH + TOT_PURCH
   MTOT_LBS = MTOT_LBS + LBS
   *MTOT_STOR = MTOT_STOR + TOT_STOR
   IF MCOMPANY = 'DIVISION 15'
      IF LBS_CALC <> 0
         MTLBS_CALC = MTLBS_CALC + LBS_CALC
      ELSE
         MTLBS_CALC = MTLBS_CALC + LBS
      ENDIF
   ENDIF
   SKIP
ENDDO

SELECT B 
DO RECLOCK
REPLACE TOT_LBS WITH MTOT_LBS
*REPLACE TOT_STOR WITH MTOT_STOR
UNLOCK

*** GO INTO ITEM EDIT LOGIC IN CASE WE NEED TO CHANGE ANYTHING
DO ITEM_CHG

SET PROC TO PO_PROC 

**** FINISH UP
DO TRANMADD
DO TRANFADD   
RETURN
* EOF: TRANIADD.PRG

*Formatted by: ToolBox Ver. 1.2  on 2/6/96 at 5:46 PM.
