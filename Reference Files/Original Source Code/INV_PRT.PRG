*******************
* Program.: INV_PRT.PRG
* Author..: Grace Keller
* Date....: 10/26/87
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: PRINT INVOICES SHEDULED
*
* ---OPEN FILES
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     
MTITLE = ' - PRINT INVOICES'
SELECT A
USE 
SELECT B
USE
SELECT C
USE
SELECT E
DO FOX_USE WITH "&MMASTDBF.CONTROL",.F.
STORE TRAN_MO TO MTRAN_MO 
STORE TRAN_YR TO MTRAN_YR
DO FOX_USE WITH "COMPANY",.F.
STORE ANNOUNCE TO MANNOUNCE 
CLEAR
@ 01,00 SAY MCOMPANY
@ 01,68 SAY DATE()
@  2,0 SAY MPROGRAM + MTITLE
@ 3,0 TO 22,80
MFORMS = 'YES'
@ 10,1 SAY 'The following announcement will print on all invoices.'             
@ 11,1 SAY '(Note: Leave blank if no announcement should print)'
@ 13,1 GET MANNOUNCE
READ
DO RECLOCK
REPLACE ANNOUNCE WITH MANNOUNCE
UNLOCK
USE

STORE ' ' TO MPRT_ACT
DO PRT_SET 
IF MPRT_ACT <> 'C'
   RETURN
ENDIF 

MPRT_ONE = .F.

SET CONSOLE OFF
IF FILE("C:\COMPINFO\PRINTERS.DBF")
   SET PRINT TO C:\COMPINFO\PRT_FILE.TXT
ELSE
   SET PRINT TO LPT3
ENDIF
SET DEVICE TO PRINT
SET PRINT ON

** GOTHIC 12 BOLD
?? CHR(27) + '(s0p12h0s3b4102T'

*** LETTER SIZE PAPER
?? CHR(27) + '&l2A'

*** PORTRAIT MODE
?? CHR(27) + '&l0O'

*** SELECT TRAY 2
?? CHR(27) + '&l1H'

SELECT B
DO FOX_USE WITH "PO_DTL INDEX PO_DTL", .F.

SELECT A
DO FOX_USE WITH "PO_HEAD INDEX PRINT, PO_SUP, PO_FRT", .F.
SEEK ' '
IF EOF()
   STORE 0 TO MRECNO
ELSE
   STORE RECNO() TO MRECNO
ENDIF
MFIRST_TM = .T.
DO WHILE .NOT. EOF() .AND. INV_FLG = ' '
   IF INV_NBR <> SPACE(5)
      SKIP
      LOOP
   ENDIF
   IF BROKERAGE = 'H'
      SKIP
      LOOP
   ENDIF
   
   **** DO ALL THE NAME/ADDRESS SEARCHING HERE
   STORE SALESMAN TO MSALESMAN
   STORE PO_NBR TO MPO_NBR
   STORE PO_SUFFIX TO MPO_SUFFIX
   STORE BUY_CODE TO MBUY_CODE
   STORE BBUYCODE TO MBBUYCODE
   STORE RSUPCODE TO MRSUPCODE
   STORE SUP_CODE TO MSUP_CODE
   STORE SAL_CODE2 TO MSAL_CODE2
   STORE COM_CODE  TO MCOM_CODE
   STORE FRT_CODE1 TO MFRT_CODE1
   SELECT E
   DO FOX_USE WITH "&MDBFLOC.BUYER INDEX &MDBFLOC.BUY_CODE", .F.
   SEEK MBUY_CODE
   IF .NOT. EOF()
      STORE NAME TO MSHP_NAME       
      STORE STREET TO MSHP_STRT  
      STORE CITY TO MSHP_CITY       
      STORE STATE TO MSHP_STATE
      IF ZIP4 = SPACE(4)
         STORE ZIP + SPACE(5) TO MSHP_ZIP
      ELSE
         STORE ZIP + '-' + ZIP4 TO MSHP_ZIP 
      ENDIF
   ELSE
      STORE 'SHIP TO NOT ON FILE'+ SPACE(13) TO MSHP_NAME
      STORE SPACE(28) TO MSHP_STRT           
      STORE SPACE(20) TO MSHP_CITY            
      STORE SPACE(2) TO MSHP_STATE             
      STORE SPACE(10) TO MSHP_ZIP          
   ENDIF
   
   DO FOX_USE WITH "&MDBFLOC.SUPPLIER INDEX &MDBFLOC.SUP_CODE", .F.
   SEEK MSUP_CODE
   IF .NOT. EOF()
      STORE NAME TO MPRODUCER       
   ELSE
      STORE SPACE(32) TO MPRODUCER 
   ENDIF
   
   STORE ' ACCOUNTS PAYABLE ' TO MPO_ATTN
   MCOD = .F.
   MCUST_SW = .F.
   DO FOX_USE WITH "&MDBFLOC.BIL_BUY INDEX &MDBFLOC.BBUYCODE", .F.
   SEEK MBBUYCODE
   IF .NOT. EOF()
      STORE NAME TO MBIL_NAME       
      IF PO_ATTN <> SPACE(20)
         STORE PO_ATTN TO MPO_ATTN
      ENDIF
      IF SUBSTR(NOTE,1,3) = 'COD'
         MCOD = .T.
      ENDIF
      STORE REG_NAME TO MREG_NAME
      STORE TERM_DAYS TO MTERM_DAYS
      IF ILINE1 = SPACE(3)
         STORE STREET + SPACE(9) TO MBIL_ADR1
         IF ZIP4 = SPACE(4)
            STORE ZIP + SPACE(5) TO MBIL_ZIP
         ELSE
            STORE ZIP + '-' + ZIP4 TO MBIL_ZIP 
         ENDIF
         STORE TRIM(CITY) + ', ' + STATE  + '  ' + MBIL_ZIP TO MBIL_ADR2
         STORE LEN(MBIL_ADR2) TO MLEN
         MLEN = 37 - MLEN
         MBIL_ADR2 = MBIL_ADR2 + SPACE(MLEN)
         MBIL_ADR3 = SPACE(37)
      ELSE
         STORE ILINE1 + SPACE(2) TO MBIL_ADR1
         STORE ILINE2 + SPACE(2) TO MBIL_ADR2
         STORE ILINE3 + SPACE(2) TO MBIL_ADR3
      ENDIF
      
      IF CUST_SW = 'Y'
         MCUST_SW = .T.
      ENDIF
   ELSE
      **IF MBBUYCODE = 'NONE' .OR. MBBUYCODE = 'INVN'
      IF MBBUYCODE = 'NONE' .OR. MBBUYCODE = 'I'
         STORE MBBUYCODE TO MBIL_NAME
      ELSE
         STORE 'BILL TO NOT ON FILE' + SPACE(13) TO MBIL_NAME
      ENDIF
      *STORE SPACE(28) TO MBIL_STRT
      *STORE SPACE(20) TO MBIL_CITY
      *STORE SPACE(2) TO MBIL_STATE
      *STORE SPACE(10) TO MBIL_ZIP
      STORE SPACE(32) TO MREG_NAME
      STORE SPACE(37) TO MBIL_ADR1
      STORE SPACE(37) TO MBIL_ADR2
      STORE SPACE(37) TO MBIL_ADR3
      STORE 0 TO MTERM_DAYS
   ENDIF
   DO FOX_USE WITH "&MDBFLOC.REM_SUP INDEX &MDBFLOC.RSUPCODE", .F.
   SEEK MRSUPCODE
   IF .NOT. EOF()
      STORE NAME TO MREM_NAME       
   ELSE
      **IF MRSUPCODE = 'NONE' .OR. MRSUPCODE = 'INVN'
      IF MRSUPCODE = 'NONE' .OR. MRSUPCODE = 'I'
         STORE MRSUPCODE TO MREM_NAME
      ELSE
         STORE 'UNKNOWN' TO MREM_NAME
      ENDIF
   ENDIF
   
   IF MCOM_CODE <> SPACE(2)
      DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_CODE", .F.
      SEEK MCOM_CODE   
      IF .NOT. EOF()
         STORE NAME TO MCOM_NAME       
      ELSE
         STORE 'UNKNOWN' + SPACE(25) TO MCOM_NAME
      ENDIF
   ELSE
      STORE SPACE(32) TO MCOM_NAME
   ENDIF
   
   DO FOX_USE WITH "&MMASTDBF.SALESMAN INDEX &MMASTDBF.SAL_CODE", .F.
   IF A->BROK_NAME <> SPACE(5)
      IF A->BROK_NAME = 'ROBER'
         STORE "ROBERT RODRIGUEZ        " + SPACE(1) TO MSAL_NAME 
      ELSE
         STORE A->BROK_NAME + SPACE(20) TO MSAL_NAME
      ENDIF
   ELSE
      IF MSALESMAN <> SPACE(2)
         DO CASE
         CASE MCOMPANY = 'AMERICHICKEN, INC' .OR. MSALESMAN = '11'
            *STORE SUBSTR(MCOM_NAME,1,25) TO MSAL_NAME
            STORE 'AMERICHICKEN' + SPACE(13) TO MSAL_NAME
         OTHERWISE
            SEEK MSALESMAN
            IF .NOT. EOF()
               STORE NAME TO MSAL_NAME
            ELSE
               STORE 'BROKER NAME NOT FOUND'+ SPACE(3) TO MSAL_NAME
            ENDIF
         ENDCASE
      ENDIF
   ENDIF
   
   **RON MONTGOMERY CHANGES
   *IF MSAL_CODE2 <> SPACE(2)
   *   SEEK MSAL_CODE2
   *   IF .NOT. EOF()
   *      STORE NAME TO MSAL2_NAME
   *   ELSE
   *      STORE 'UNKNOWN' TO MSAL2_NAME
   *   ENDIF
   *ELSE
   STORE SPACE(10) TO MSAL2_NAME
   *ENDIF
   
   DO FOX_USE WITH "&MDBFLOC.FREIGHT INDEX &MDBFLOC.FRT_CODE", .F.
   IF MFRT_CODE1 = 'CUST'
      STORE 'CUSTOMER PICK UP' TO MFRT_NAME
   ELSE 
      IF MFRT_CODE1 = 'NONE'
         IF MCOMPANY = 'DIVISION 15'
            STORE 'WILL CALL' TO MFRT_NAME
         ELSE
            STORE 'DELIVERED' TO MFRT_NAME
         ENDIF
      ELSE
         SEEK MFRT_CODE1                
         IF .NOT. EOF()
            STORE NAME TO MFRT_NAME
         ELSE
            STORE SPACE(10) TO MFRT_NAME
         ENDIF
      ENDIF
   ENDIF
   
   **** END OF ALL NAME/ADDRESS GETS
   IF A->MISC_FLG <> ' '
      SELECT E
      DO FOX_USE WITH "MISC_CHG INDEX MISC_CHG", .F.
      SEEK A->SALESMAN + A->PO_NBR + A->PO_SUFFIX
      IF .NOT. EOF()
         STORE MISCAMT1 + MISCAMT2 + MISCAMT3 TO MMISC_AMT
      ELSE
         STORE 0 TO MMISC_AMT
      ENDIF
   ELSE    
      STORE 0 TO MMISC_AMT
   ENDIF
   
   IF A->FRT2_FLG <> ' '
      SELECT E    
      DO FOX_USE WITH "FRT_2ND INDEX FRT2_PO, FRT2_FRT", .F.
      SEEK A->SALESMAN + A->PO_NBR + A->PO_SUFFIX       
      MFRT_CODE2 = FRT_CODE2
      MFRT_AMT2 =  FRT_AMT2
   ENDIF
   
   IF A->FRT3_FLG <> ' '
      SELECT E    
      DO FOX_USE WITH "FRT_3RD INDEX FRT3_PO, FRT3_FRT", .F.
      SEEK A->SALESMAN + A->PO_NBR + A->PO_SUFFIX       
      MFRT_CODE3 = FRT_CODE3
      MFRT_AMT3 =  FRT_AMT3
   ENDIF
   
   SELECT A
   
   
   **IF (RSUPCODE = 'NONE' .OR. RSUPCODE = 'INVN') .OR. (TOT_PURCH + SUP_PALL = 0)
   IF (RSUPCODE = 'NONE' .OR. RSUPCODE = 'I') .OR. (TOT_PURCH + SUP_PALL = 0)
      DO RECLOCK
      REPLACE SUP_PD WITH 'Y'
      REPLACE SUP_REC WITH 'Y'
      UNLOCK
   ENDIF
   IF (FRT_CODE1 = 'NONE') .OR. (FRT_AMT1 + FRT1_ADJ1 + FRT1_ADJ2 = 0)
      DO RECLOCK
      REPLACE FRT_REC WITH 'Y'
      REPLACE FRT_PD WITH 'Y'
      UNLOCK
   ENDIF
   ** IF (BBUYCODE = 'NONE' .OR. BBUYCODE = 'INVN') .OR. (TOT_SELL + CUS_PALL) = 0
   IF (BBUYCODE = 'NONE' .OR. BBUYCODE = 'I') .OR. (TOT_SELL + CUS_PALL) = 0
      DO RECLOCK
      REPLACE SHORT_FLG WITH 'Y'
      REPLACE PAID_FLG WITH 'Y'
      UNLOCK
      SELECT E
      DO FOX_USE WITH "&MMASTDBF.CONTROL",.F.
      DO RECLOCK
      REPLACE INV_NBR WITH INV_NBR + 1
      STORE INV_NBR TO MINV_NBR
      UNLOCK
      *** AMERICHICKEN
      IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
         IF A->COMM_AMT <> 0 .OR. A->COM_CODE <> SPACE(2)
            SELECT E
            DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
            DO FILELOCK
            APPEND BLANK
            REPLACE SALESMAN WITH MSALESMAN
            REPLACE PO_NBR   WITH MPO_NBR
            REPLACE PO_SUFFIX WITH MPO_SUFFIX
            REPLACE THD_SEQ WITH '1'
            REPLACE COM_CODE WITH A->COM_CODE
            REPLACE COM_TYPE WITH 'T'
            REPLACE TRAN_DATE WITH DATE()
            REPLACE COR_FLG WITH 'I'
            REPLACE INV_NBR WITH STR(MINV_NBR,5)
            REPLACE AMOUNT WITH A->COMM_AMT
         ENDIF
         IF A->COMM_AMT2 <> 0 .OR. A->COM_CODE2 <> SPACE(2)
            SELECT E
            DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
            DO FILELOCK
            APPEND BLANK
            REPLACE SALESMAN WITH MSALESMAN
            REPLACE PO_NBR   WITH MPO_NBR
            REPLACE PO_SUFFIX WITH MPO_SUFFIX
            REPLACE THD_SEQ   WITH '2'
            REPLACE COM_CODE WITH A->COM_CODE2
            REPLACE COM_TYPE WITH 'T'
            REPLACE TRAN_DATE WITH DATE()
            REPLACE COR_FLG WITH 'I'
            REPLACE INV_NBR WITH STR(MINV_NBR,5)
            REPLACE AMOUNT WITH A->COMM_AMT2
         ENDIF
         IF A->COMM_AMT3 <> 0 .OR. A->COM_CODE3 <> SPACE(2)
            SELECT E
            DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
            DO FILELOCK
            APPEND BLANK
            REPLACE SALESMAN WITH MSALESMAN
            REPLACE PO_NBR   WITH MPO_NBR
            REPLACE PO_SUFFIX WITH MPO_SUFFIX
            REPLACE THD_SEQ   WITH '3'
            REPLACE COM_CODE WITH A->COM_CODE3
            REPLACE COM_TYPE WITH 'T'
            REPLACE TRAN_DATE WITH DATE()
            REPLACE COR_FLG WITH 'I'
            REPLACE INV_NBR WITH STR(MINV_NBR,5)
            REPLACE AMOUNT WITH A->COMM_AMT3
            *** FEDERATED FOODS COMPAYEE CODE = '30'
            IF COM_CODE = '30'
               SELECT D
               DO FOX_USE WITH "CONTROL", .F.
               DO RECLOCK
               STORE FED_KEY TO MFED_KEY
               REPLACE FED_KEY WITH FED_KEY + 1
               UNLOCK
               USE
               SELECT E
               DO RECLOCK
               REPLACE FED_KEY WITH MFED_KEY
               UNLOCK
               SELECT E
               DO FOX_USE WITH "FEDTHD INDEX FEDTHD", .F.
               DO FILELOCK
               APPEND BLANK
               REPLACE FED_KEY WITH MFED_KEY
               REPLACE SALESMAN WITH A->SALESMAN
               REPLACE PO_NBR WITH A->PO_NBR
               REPLACE PO_SUFFIX WITH A->PO_SUFFIX
               UNLOCK
               DO RECLOCK
               SELECT B
               SEEK A->SALESMAN + A->PO_NBR + A->PO_SUFFIX       
               I = 1
               DO WHILE .NOT. EOF() .AND. I <= 20 .AND. SALESMAN = A->SALESMAN .AND. PO_NBR = A->PO_NBR .AND. PO_SUFFIX = A->PO_SUFFIX
                  MI = SUBSTR(STR(I+100,3),2)
                  SELECT E
                  REPLACE PROD&MI WITH B->PROD_DESC
                  REPLACE LBS&MI  WITH B->LBS
                  REPLACE CENT&MI WITH B->COM3_CENT
                  I = I + 1
                  SELECT B
                  SKIP
               ENDDO
               SELECT E
               USE
            ENDIF
         ENDIF
         
         **RON MONTGOMERY CHANGES
         IF A->SALE2_AMT <> 0 .OR. A->SAL_CODE2 <> SPACE(2)
            SELECT E
            DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
            DO FILELOCK
            APPEND BLANK
            REPLACE SALESMAN WITH MSALESMAN
            REPLACE PO_NBR   WITH MPO_NBR
            REPLACE PO_SUFFIX WITH MPO_SUFFIX
            REPLACE THD_SEQ WITH '4'
            REPLACE COM_CODE WITH A->SAL_CODE2
            REPLACE COM_TYPE WITH 'T'
            REPLACE TRAN_DATE WITH DATE()
            REPLACE COR_FLG WITH 'I'
            REPLACE INV_NBR WITH STR(MINV_NBR,5)
            REPLACE AMOUNT WITH A->SALE2_AMT
         ENDIF
      ENDIF
      SELECT E
      DO FOX_USE WITH "DAILYJRN INDEX JRN_MO, JRN_TRAN, JRN_PO, POSTED", .F.
      DO FILELOCK
      APPEND BLANK
      REPLACE salesman   WITH A->salesman  
      REPLACE po_nbr     WITH A->po_nbr    
      REPLACE po_suffix  WITH A->po_suffix 
      REPLACE INV_NBR    WITH STR(MINV_NBR,5)
      REPLACE RSUPCODE   WITH A->RSUPCODE
      REPLACE SUP_CODE   WITH A->SUP_CODE
      REPLACE buy_code   WITH A->buy_code  
      REPLACE bbuycode   WITH A->bbuycode  
      REPLACE ship_date  WITH A->ship_date 
      REPLACE tot_lbs    WITH A->tot_lbs   
      REPLACE tot_sell   WITH A->tot_sell  
      REPLACE TOT_PURCH  WITH A->TOT_PURCH
      REPLACE TOT_NET    WITH A->TOT_NET
      REPLACE SALE2_NET  WITH A->SALE2_NET
      REPLACE GROSS      WITH A->GROSS
      REPLACE FRT_CODE1  WITH A->FRT_CODE1
      MFRT = A->FRT_AMT1 + A->FRT1_ADJ1 + A->FRT1_ADJ2
      REPLACE FRT_AMT1   WITH MFRT            
      IF A->FRT2_FLG <> ' '
         REPLACE FRT_AMT2  WITH MFRT_AMT2
         REPLACE FRT_CODE2 WITH MFRT_CODE2
      ENDIF
      IF A->FRT3_FLG <> ' '
         REPLACE FRT_AMT3  WITH MFRT_AMT3
         REPLACE FRT_CODE3 WITH MFRT_CODE3
      ENDIF
      REPLACE COM_CODE   WITH A->COM_CODE
      REPLACE COMM_AMT   WITH A->comm_amt  
      REPLACE COM_CODE2  WITH A->COM_CODE2
      REPLACE COMM_AMT2  WITH A->comm_amt2  
      REPLACE COM_CODE3  WITH A->COM_CODE3
      REPLACE COMM_AMT3  WITH A->comm_amt3  
      REPLACE SALE_COMM  WITH A->sale_comm 
      REPLACE SAL_CODE2  WITH A->SAL_CODE2 
      REPLACE SALE2_AMT  WITH A->sale2_amt 
      REPLACE MISC_AMT   WITH MMISC_AMT
      REPLACE TRAN_DATE  WITH DATE()       
      REPLACE brok_name  WITH A->brok_name 
      REPLACE BROKERAGE  WITH A->BROKERAGE 
      REPLACE FRT_PALL   WITH A->FRT_PALL
      REPLACE CUS_PALL   WITH A->CUS_PALL
      REPLACE SUP_PALL   WITH A->SUP_PALL
      REPLACE JRNL_DATE   WITH A->ship_date
      **** MAKE SURE HERE THAT I DON'T DO THIS IF THE MONTH IS ALREADY CLOSED
      STORE SUBSTR(DTOC(A->SHIP_DATE),7) TO MYR
      STORE SUBSTR(DTOC(A->SHIP_DATE),1,2) TO MMO
      STORE MYR+MMO TO MDATE
      STORE VAL(MDATE) TO MDATE  
      
      STORE MTRAN_YR+MTRAN_MO TO MTRAN_DATE
      STORE VAL(MTRAN_DATE) TO MTRAN_DATE
      
      IF MDATE > MTRAN_DATE 
         REPLACE TRAN_MO WITH SUBSTR(STR(MONTH(A->SHIP_DATE) + 100,3),2)
         REPLACE TRAN_YR WITH SUBSTR(DTOC(A->SHIP_DATE),7)
      ELSE
         REPLACE TRAN_MO WITH MTRAN_MO
         REPLACE TRAN_YR WITH MTRAN_YR
      ENDIF
      
      REPLACE INV_COR    WITH 'I'
      REPLACE SEQ WITH '1'
      UNLOCK
      USE
      SELECT C
      DO FOX_USE WITH "INV_HEAD INDEX INV_HEAD, INV_DATE", .F.
      DO FILELOCK
      APPEND BLANK
      REPLACE salesman   WITH A->salesman  
      REPLACE po_nbr     WITH A->po_nbr    
      REPLACE po_suffix  WITH A->po_suffix 
      REPLACE INV_NBR    WITH STR(MINV_NBR,5)
      REPLACE inv_date   WITH DATE()       
      REPLACE SHIP_DATE  WITH A->SHIP_DATE
      REPLACE TOT_SELL   WITH A->TOT_SELL + A->CUS_PALL
      UNLOCK
      DO FOX_USE WITH "SS INDEX SS, SS_YRMO", .F.
      DO FILELOCK
      APPEND BLANK
      REPLACE salesman   WITH A->salesman  
      REPLACE po_nbr     WITH A->po_nbr    
      REPLACE po_suffix  WITH A->po_suffix 
      REPLACE INV_NBR    WITH STR(MINV_NBR,5)
      REPLACE RSUPCODE   WITH A->RSUPCODE
      REPLACE bbuycode   WITH A->bbuycode  
      REPLACE ship_date  WITH A->ship_date 
      REPLACE FRT_CODE  WITH A->FRT_CODE1
      MFRT = A->FRT_AMT1 + A->FRT1_ADJ1 + A->FRT1_ADJ2
      REPLACE FRT_AMT   WITH MFRT            
      REPLACE COM_CODE   WITH A->COM_CODE
      REPLACE SAL_CODE2  WITH A->SAL_CODE2 
      REPLACE MISC_AMT   WITH MMISC_AMT
      REPLACE INV_DATE  WITH DATE()       
      REPLACE brok_name  WITH A->brok_name 
      **** MAKE SURE HERE THAT I DON'T DO THIS IF THE MONTH IS ALREADY CLOSED
      STORE SUBSTR(DTOC(A->SHIP_DATE),7) TO MYR
      STORE SUBSTR(DTOC(A->SHIP_DATE),1,2) TO MMO
      STORE MYR+MMO TO MDATE
      STORE VAL(MDATE) TO MDATE  
      
      STORE MTRAN_YR+MTRAN_MO TO MTRAN_DATE
      STORE VAL(MTRAN_DATE) TO MTRAN_DATE
      
      IF MDATE > MTRAN_DATE 
         REPLACE TRAN_MO WITH SUBSTR(STR(MONTH(A->SHIP_DATE) + 100,3),2)
         REPLACE TRAN_YR WITH SUBSTR(DTOC(A->SHIP_DATE),7)
      ELSE
         REPLACE TRAN_MO WITH MTRAN_MO
         REPLACE TRAN_YR WITH MTRAN_YR
      ENDIF
      
      REPLACE RSUPNAME WITH MREM_NAME
      REPLACE BBUYNAME WITH MBIL_NAME
      IF MFRT_CODE1 = 'NONE' 
         REPLACE FRT_NAME WITH 'NONE'
      ELSE
         REPLACE FRT_NAME WITH MFRT_NAME
      ENDIF
      REPLACE COM_NAME WITH MCOM_NAME
      REPLACE SAL_NAME WITH MSAL_NAME
      REPLACE SAL2_NAME WITH MSAL2_NAME
      
      UNLOCK
      USE
      SELECT A
      DO RECLOCK
      REPLACE INV_NBR    WITH STR(MINV_NBR,5)
      UNLOCK
      SKIP
      LOOP
   ENDIF
   *** OR AMERICHICKEN - 11   
   *** IF HAL OR DAVE - FOOD SERVICE - MARK NO SHORTWEIGHT NEEDED
   DO CASE
   CASE MCOMPANY = 'DIVISION 15' .OR. MPROG_CODE = 2    
      DO RECLOCK
      REPLACE SHORT_FLG WITH 'Y'
      UNLOCK
   CASE VAL(SALESMAN) >=25 .AND. VAL(SALESMAN) <= 29
      DO RECLOCK
      REPLACE SHORT_FLG WITH 'Y'
      UNLOCK
   CASE MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
      DO RECLOCK
      REPLACE SHORT_FLG WITH 'Y'
      UNLOCK
      
   ENDCASE
   
   IF TOT_SELL = 0
      DO RECLOCK
      REPLACE SHORT_FLG WITH 'Y'
      UNLOCK
      IF CUS_PALL <= 0 
         DO RECLOCK
         REPLACE PAID_FLG WITH 'Y'
         UNLOCK
         SELECT E
         DO FOX_USE WITH "&MMASTDBF.CONTROL",.F.
         DO RECLOCK
         REPLACE INV_NBR WITH INV_NBR + 1
         STORE INV_NBR TO MINV_NBR
         UNLOCK
         *** AMERICHICKEN
         IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
            IF A->COMM_AMT <> 0 .OR. A->COM_CODE <> SPACE(2)
               SELECT E
               DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
               DO FILELOCK
               APPEND BLANK
               REPLACE SALESMAN WITH MSALESMAN
               REPLACE PO_NBR   WITH MPO_NBR
               REPLACE PO_SUFFIX WITH MPO_SUFFIX
               REPLACE THD_SEQ   WITH '1'
               REPLACE COM_CODE WITH A->COM_CODE
               REPLACE COM_TYPE WITH 'T'
               REPLACE TRAN_DATE WITH DATE()
               REPLACE COR_FLG WITH 'I'
               REPLACE INV_NBR WITH STR(MINV_NBR,5)
               REPLACE AMOUNT WITH A->COMM_AMT
            ENDIF
            IF A->COMM_AMT2 <> 0 .OR. A->COM_CODE2 <> SPACE(2)
               SELECT E
               DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
               DO FILELOCK
               APPEND BLANK
               REPLACE SALESMAN WITH MSALESMAN
               REPLACE PO_NBR   WITH MPO_NBR
               REPLACE PO_SUFFIX WITH MPO_SUFFIX
               REPLACE THD_SEQ WITH '2'
               REPLACE COM_CODE WITH A->COM_CODE2
               REPLACE COM_TYPE WITH 'T'
               REPLACE TRAN_DATE WITH DATE()
               REPLACE COR_FLG WITH 'I'
               REPLACE INV_NBR WITH STR(MINV_NBR,5)
               REPLACE AMOUNT WITH A->COMM_AMT2
            ENDIF
            IF A->COMM_AMT3 <> 0 .OR. A->COM_CODE3 <> SPACE(2)
               SELECT E
               DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
               DO FILELOCK
               APPEND BLANK
               REPLACE SALESMAN WITH MSALESMAN
               REPLACE PO_NBR   WITH MPO_NBR
               REPLACE PO_SUFFIX WITH MPO_SUFFIX
               REPLACE THD_SEQ WITH '3'
               REPLACE COM_CODE WITH A->COM_CODE3
               REPLACE COM_TYPE WITH 'T'
               REPLACE TRAN_DATE WITH DATE()
               REPLACE COR_FLG WITH 'I'
               REPLACE INV_NBR WITH STR(MINV_NBR,5)
               REPLACE AMOUNT WITH A->COMM_AMT3
               UNLOCK
               *** FEDERATED FOODS
               IF COM_CODE = '30'
                  SELECT D
                  DO FOX_USE WITH "CONTROL", .F.
                  DO RECLOCK
                  STORE FED_KEY TO MFED_KEY
                  REPLACE FED_KEY WITH FED_KEY + 1
                  UNLOCK
                  USE
                  SELECT E
                  DO RECLOCK
                  REPLACE FED_KEY WITH MFED_KEY
                  UNLOCK
                  SELECT E
                  DO FOX_USE WITH "FEDTHD INDEX FEDTHD", .F.
                  DO FILELOCK
                  APPEND BLANK
                  REPLACE FED_KEY WITH MFED_KEY
                  REPLACE SALESMAN WITH A->SALESMAN
                  REPLACE PO_NBR WITH A->PO_NBR
                  REPLACE PO_SUFFIX WITH A->PO_SUFFIX
                  UNLOCK
                  DO RECLOCK
                  SELECT B
                  SEEK A->SALESMAN + A->PO_NBR + A->PO_SUFFIX       
                  I = 1
                  DO WHILE .NOT. EOF() .AND. I <= 20 .AND. SALESMAN = A->SALESMAN .AND. PO_NBR = A->PO_NBR .AND. PO_SUFFIX = A->PO_SUFFIX
                     MI = SUBSTR(STR(I+100,3),2)
                     SELECT E
                     REPLACE PROD&MI WITH B->PROD_DESC
                     REPLACE LBS&MI  WITH B->LBS
                     REPLACE CENT&MI WITH B->COM3_CENT
                     I = I + 1
                     SELECT B
                     SKIP
                  ENDDO
                  SELECT E
                  USE
               ENDIF
            ENDIF
            **RON MONTGOMERY CHANGES
            IF A->SALE2_AMT <> 0 .OR. A->SAL_CODE2 <> SPACE(2)
               SELECT E
               DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
               DO FILELOCK
               APPEND BLANK
               REPLACE SALESMAN WITH MSALESMAN
               REPLACE PO_NBR   WITH MPO_NBR
               REPLACE PO_SUFFIX WITH MPO_SUFFIX
               REPLACE THD_SEQ WITH '4'
               REPLACE COM_CODE WITH A->SAL_CODE2
               REPLACE COM_TYPE WITH 'T'
               REPLACE TRAN_DATE WITH DATE()
               REPLACE COR_FLG WITH 'I'
               REPLACE INV_NBR WITH STR(MINV_NBR,5)
               REPLACE AMOUNT WITH A->SALE2_AMT
            ENDIF
            
         ENDIF
         
         SELECT E
         DO FOX_USE WITH "DAILYJRN INDEX JRN_MO, JRN_TRAN, JRN_PO, POSTED", .F.
         DO FILELOCK
         APPEND BLANK
         REPLACE salesman   WITH A->salesman  
         REPLACE po_nbr     WITH A->po_nbr    
         REPLACE INV_NBR    WITH STR(MINV_NBR,5)
         REPLACE po_suffix  WITH A->po_suffix 
         REPLACE RSUPCODE   WITH A->RSUPCODE
         REPLACE SUP_CODE   WITH A->SUP_CODE
         REPLACE buy_code   WITH A->buy_code  
         REPLACE bbuycode   WITH A->bbuycode  
         REPLACE ship_date  WITH A->ship_date 
         REPLACE tot_lbs    WITH A->tot_lbs   
         REPLACE tot_sell   WITH A->tot_sell  
         REPLACE TOT_PURCH  WITH A->TOT_PURCH
         REPLACE TOT_NET    WITH A->TOT_NET
         REPLACE SALE2_NET  WITH A->SALE2_NET
         REPLACE GROSS      WITH A->GROSS
         REPLACE FRT_CODE1  WITH A->FRT_CODE1
         MFRT = A->FRT_AMT1 + A->FRT1_ADJ1 + A->FRT1_ADJ2
         REPLACE FRT_AMT1   WITH MFRT            
         IF A->FRT2_FLG <> ' '
            REPLACE FRT_AMT2  WITH MFRT_AMT2
            REPLACE FRT_CODE2 WITH MFRT_CODE2
         ENDIF
         IF A->FRT3_FLG <> ' '
            REPLACE FRT_AMT3  WITH MFRT_AMT3
            REPLACE FRT_CODE3 WITH MFRT_CODE3
         ENDIF
         REPLACE COM_CODE   WITH A->COM_CODE
         REPLACE COMM_AMT   WITH A->comm_amt  
         REPLACE COM_CODE2  WITH A->COM_CODE2
         REPLACE COMM_AMT2  WITH A->comm_amt2
         REPLACE COM_CODE3  WITH A->COM_CODE3
         REPLACE COMM_AMT3  WITH A->comm_amt3
         REPLACE SALE_COMM  WITH A->sale_comm 
         **REPLACE SALE_COMM2 WITH A->sale_comm2 
         REPLACE SAL_CODE2  WITH A->SAL_CODE2 
         REPLACE SALE2_AMT  WITH A->sale2_amt 
         REPLACE MISC_AMT   WITH MMISC_AMT
         REPLACE TRAN_DATE  WITH DATE()       
         REPLACE brok_name  WITH A->brok_name 
         REPLACE BROKERAGE  WITH A->BROKERAGE 
         REPLACE FRT_PALL   WITH A->FRT_PALL
         REPLACE CUS_PALL   WITH A->CUS_PALL
         REPLACE SUP_PALL   WITH A->SUP_PALL
         REPLACE JRNL_DATE   WITH A->ship_date
         **** MAKE SURE HERE THAT I DON'T DO THIS IF THE MONTH IS ALREADY CLOSED
         STORE SUBSTR(DTOC(A->SHIP_DATE),7) TO MYR
         STORE SUBSTR(DTOC(A->SHIP_DATE),1,2) TO MMO
         STORE MYR+MMO TO MDATE
         STORE VAL(MDATE) TO MDATE  
         
         STORE MTRAN_YR+MTRAN_MO TO MTRAN_DATE
         STORE VAL(MTRAN_DATE) TO MTRAN_DATE
         
         IF MDATE > MTRAN_DATE 
            REPLACE TRAN_MO WITH SUBSTR(STR(MONTH(A->SHIP_DATE) + 100,3),2)
            REPLACE TRAN_YR WITH SUBSTR(DTOC(A->SHIP_DATE),7)
         ELSE
            REPLACE TRAN_MO WITH MTRAN_MO
            REPLACE TRAN_YR WITH MTRAN_YR
         ENDIF
         
         REPLACE INV_COR    WITH 'I'
         REPLACE SEQ WITH '1'
         UNLOCK
         USE
         SELECT C
         DO FOX_USE WITH "INV_HEAD INDEX INV_HEAD, INV_DATE", .F.
         DO FILELOCK
         APPEND BLANK
         REPLACE salesman   WITH A->salesman  
         REPLACE po_nbr     WITH A->po_nbr    
         REPLACE po_suffix  WITH A->po_suffix 
         REPLACE INV_NBR    WITH STR(MINV_NBR,5)
         REPLACE SHIP_DATE  WITH A->SHIP_DATE
         REPLACE inv_date   WITH DATE()       
         REPLACE TOT_SELL   WITH A->TOT_SELL + A->CUS_PALL
         UNLOCK
         DO FOX_USE WITH "SS INDEX SS, SS_YRMO", .F.
         DO FILELOCK
         APPEND BLANK
         REPLACE salesman   WITH A->salesman  
         REPLACE po_nbr     WITH A->po_nbr    
         REPLACE po_suffix  WITH A->po_suffix 
         REPLACE INV_NBR    WITH STR(MINV_NBR,5)
         REPLACE RSUPCODE   WITH A->RSUPCODE
         REPLACE bbuycode   WITH A->bbuycode  
         REPLACE ship_date  WITH A->ship_date 
         REPLACE FRT_CODE  WITH A->FRT_CODE1
         MFRT = A->FRT_AMT1 + A->FRT1_ADJ1 + A->FRT1_ADJ2
         REPLACE FRT_AMT   WITH MFRT            
         REPLACE COM_CODE   WITH A->COM_CODE
         REPLACE SAL_CODE2  WITH A->SAL_CODE2 
         REPLACE MISC_AMT   WITH MMISC_AMT
         REPLACE INV_DATE  WITH DATE()       
         REPLACE brok_name  WITH A->brok_name 
         **** MAKE SURE HERE THAT I DON'T DO THIS IF THE MONTH IS ALREADY CLOSED
         STORE SUBSTR(DTOC(A->SHIP_DATE),7) TO MYR
         STORE SUBSTR(DTOC(A->SHIP_DATE),1,2) TO MMO
         STORE MYR+MMO TO MDATE
         STORE VAL(MDATE) TO MDATE  
         
         STORE MTRAN_YR+MTRAN_MO TO MTRAN_DATE
         STORE VAL(MTRAN_DATE) TO MTRAN_DATE
         
         IF MDATE > MTRAN_DATE 
            REPLACE TRAN_MO WITH SUBSTR(STR(MONTH(A->SHIP_DATE) + 100,3),2)
            REPLACE TRAN_YR WITH SUBSTR(DTOC(A->SHIP_DATE),7)
         ELSE
            REPLACE TRAN_MO WITH MTRAN_MO
            REPLACE TRAN_YR WITH MTRAN_YR
         ENDIF
         
         REPLACE RSUPNAME WITH MREM_NAME
         REPLACE BBUYNAME WITH MBIL_NAME
         IF MFRT_CODE1 = 'NONE' 
            REPLACE FRT_NAME WITH 'NONE'
         ELSE
            REPLACE FRT_NAME WITH MFRT_NAME
         ENDIF
         REPLACE COM_NAME WITH MCOM_NAME
         REPLACE SAL_NAME WITH MSAL_NAME
         REPLACE SAL2_NAME WITH MSAL2_NAME
         
         UNLOCK
         USE
         SELECT A
         DO RECLOCK
         REPLACE INV_NBR    WITH STR(MINV_NBR,5)
         UNLOCK
         SKIP
         LOOP
      ENDIF
   ENDIF
   ** MARK MFI 20'S RANGE OF SALESMAN - INTERNATIONAL AS HAVING SW'S ENTERED
   IF MPROG_CODE = 2
      IF VAL(SALESMAN) >= 20 .AND. VAL(SALESMAN) < 30
         DO RECLOCK
         REPLACE SHORT_FLG WITH 'Y'
         UNLOCK
      ENDIF
   ENDIF
   MFIRST_LN = .T.
   MHEAD_PRT = .T.
   MTOTAL  = 0
   MPROD = SPACE(5)
   SELECT E
   DO FOX_USE WITH "&MMASTDBF.CONTROL",.F.
   DO RECLOCK
   REPLACE INV_NBR WITH INV_NBR + 1
   STORE INV_NBR TO MINV_NBR
   UNLOCK
   SELECT E
   DO FOX_USE WITH "PRT_NOTE INDEX PRT_NOTE", .F.
   SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
   IF .NOT. EOF()
      STORE INV_COMMT TO MINV_COMMT
   ELSE
      STORE SPACE(60) TO MINV_COMMT     
   ENDIF
   
   MCK_BROK = .T.
   ******** WRITE INVOICE RECORD 
   SELECT C
   DO FOX_USE WITH "INV_HEAD INDEX INV_HEAD, INV_DATE", .F.
   DO FILELOCK
   APPEND BLANK
   REPLACE salesman   WITH A->salesman  
   REPLACE po_nbr     WITH A->po_nbr    
   REPLACE po_suffix  WITH A->po_suffix 
   REPLACE inv_nbr    WITH STR(minv_nbr,5)   
   REPLACE SHIP_DATE  WITH A->SHIP_DATE
   REPLACE inv_date   WITH DATE()       
   REPLACE TOT_SELL   WITH A->TOT_SELL + A->CUS_PALL
   UNLOCK
   DO FOX_USE WITH "SS INDEX SS, SS_YRMO", .F.
   DO FILELOCK
   APPEND BLANK
   REPLACE salesman   WITH A->salesman  
   REPLACE po_nbr     WITH A->po_nbr    
   REPLACE po_suffix  WITH A->po_suffix 
   REPLACE inv_nbr    WITH STR(minv_nbr,5)   
   REPLACE RSUPCODE   WITH A->RSUPCODE
   REPLACE bbuycode   WITH A->bbuycode  
   REPLACE ship_date  WITH A->ship_date 
   REPLACE FRT_CODE  WITH A->FRT_CODE1
   MFRT = A->FRT_AMT1 + A->FRT1_ADJ1 + A->FRT1_ADJ2
   REPLACE FRT_AMT   WITH MFRT            
   REPLACE COM_CODE   WITH A->COM_CODE
   REPLACE SAL_CODE2  WITH A->SAL_CODE2 
   REPLACE MISC_AMT   WITH MMISC_AMT
   REPLACE INV_DATE  WITH DATE()       
   REPLACE brok_name  WITH A->brok_name 
   **** MAKE SURE HERE THAT I DON'T DO THIS IF THE MONTH IS ALREADY CLOSED
   STORE SUBSTR(DTOC(A->SHIP_DATE),7) TO MYR
   STORE SUBSTR(DTOC(A->SHIP_DATE),1,2) TO MMO
   STORE MYR+MMO TO MDATE
   STORE VAL(MDATE) TO MDATE  
   
   STORE MTRAN_YR+MTRAN_MO TO MTRAN_DATE
   STORE VAL(MTRAN_DATE) TO MTRAN_DATE
   
   IF MDATE > MTRAN_DATE 
      REPLACE TRAN_MO WITH SUBSTR(STR(MONTH(A->SHIP_DATE) + 100,3),2)
      REPLACE TRAN_YR WITH SUBSTR(DTOC(A->SHIP_DATE),7)
   ELSE
      REPLACE TRAN_MO WITH MTRAN_MO
      REPLACE TRAN_YR WITH MTRAN_YR
   ENDIF
   
   REPLACE RSUPNAME WITH MREM_NAME
   REPLACE BBUYNAME WITH MBIL_NAME
   IF MFRT_CODE1 = 'NONE' 
      REPLACE FRT_NAME WITH 'NONE'
   ELSE
      REPLACE FRT_NAME WITH MFRT_NAME
   ENDIF
   REPLACE COM_NAME WITH MCOM_NAME
   REPLACE SAL_NAME WITH MSAL_NAME
   REPLACE SAL2_NAME WITH MSAL2_NAME
   
   UNLOCK
   
   SELECT E
   DO FOX_USE WITH "CUS_INV INDEX CUS_INV, CUS_DATE, CUSIVNBR, CUS_SHIP", .F.
   DO FILELOCK
   APPEND BLANK
   REPLACE salesman   WITH A->salesman  
   REPLACE po_nbr     WITH A->po_nbr    
   REPLACE po_suffix  WITH A->po_suffix 
   REPLACE buy_code   WITH A->buy_code  
   REPLACE bbuycode   WITH A->bbuycode  
   REPLACE ship_date  WITH A->ship_date 
   REPLACE tot_lbs    WITH A->tot_lbs   
   REPLACE tot_sell   WITH A->tot_sell
   REPLACE CUS_PALL   WITH A->CUS_PALL
   REPLACE inv_nbr    WITH STR(minv_nbr,5)   
   REPLACE inv_date   WITH DATE()       
   REPLACE BROKERage  WITH A->BROKERage 
   UNLOCK
   USE 
   
   *** NOW ACTUALLY PRINT THIS INVOICE
   *** LASER PRINT - DO IT TWICE
   MNO_ITM = .T.
   MPRT_ONE = .F.
   MCOPY_ONLY = .F.
   MTOTAL = 0
   MLINE = 1
   MPRT_MSG = 'NO '
   DO INV_DOC
   
   SELECT B
   USE
   SELECT C
   USE
   SELECT E
   USE
   
   MNO_ITM = .T.
   MPRT_ONE = .F.
   MCOPY_ONLY = .F.
   MTOTAL = 0
   MLINE = 1
   MPRT_MSG = 'NO '
   DO INV_DOC
   SELECT B
   USE
   SELECT C
   USE
   SELECT E
   **********
   
   SELECT B
   DO FOX_USE WITH "PO_DTL INDEX PO_DTL", .F.
   SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
   IF EOF()
      MNO_ITM = .T.
   ELSE
      MNO_ITM = .F.
   ENDIF
   
   DO WHILE .NOT. EOF() .AND. SALESMAN = MSALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX
      DO RECLOCK
      REPLACE INV_FLG WITH 'P'
      REPLACE INV_DATE WITH DATE()
      REPLACE INV_NBR WITH STR(MINV_NBR,5) 
      UNLOCK
      SKIP
   ENDDO
   ***
   ****** END OF ALL OF THE PRINT STUFF
   **** SAVE THIS INFORMATION BACK
   SELECT A
   DO RECLOCK
   REPLACE INV_DATE WITH DATE()
   REPLACE INV_NBR WITH STR(MINV_NBR,5) 
   IF MNO_ITM
      REPLACE SHORT_FLG WITH 'Y'
   ENDIF
   UNLOCK
   IF MISC_FLG <> ' '
      SELECT E
      DO FOX_USE WITH "MISC_CHG INDEX MISC_CHG", .F.
      SEEK A->SALESMAN + A->PO_NBR + A->PO_SUFFIX
      IF .NOT. EOF()
         STORE MISCAMT1 + MISCAMT2 + MISCAMT3 TO MMISC_AMT
      ELSE
         STORE 0 TO MMISC_AMT
      ENDIF
   ELSE    
      STORE 0 TO MMISC_AMT
   ENDIF
   
   *** AMERICHICKEN
   IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
      IF A->COMM_AMT <> 0 .OR. A->COM_CODE <> SPACE(2)
         SELECT E
         DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
         DO FILELOCK
         APPEND BLANK
         REPLACE SALESMAN WITH MSALESMAN
         REPLACE PO_NBR   WITH MPO_NBR
         REPLACE PO_SUFFIX WITH MPO_SUFFIX
         REPLACE THD_SEQ   WITH '1'
         REPLACE COM_CODE WITH A->COM_CODE
         REPLACE COM_TYPE WITH 'T'
         REPLACE TRAN_DATE WITH DATE()
         REPLACE COR_FLG WITH 'I'
         REPLACE INV_NBR WITH STR(MINV_NBR,5)
         REPLACE AMOUNT WITH A->COMM_AMT
      ENDIF
      IF A->COMM_AMT2 <> 0 .OR. A->COM_CODE2 <> SPACE(2)
         SELECT E
         DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
         DO FILELOCK
         APPEND BLANK
         REPLACE SALESMAN WITH MSALESMAN
         REPLACE PO_NBR   WITH MPO_NBR
         REPLACE PO_SUFFIX WITH MPO_SUFFIX
         REPLACE THD_SEQ   WITH '2'
         REPLACE COM_CODE WITH A->COM_CODE2
         REPLACE COM_TYPE WITH 'T'
         REPLACE TRAN_DATE WITH DATE()
         REPLACE COR_FLG WITH 'I'
         REPLACE INV_NBR WITH STR(MINV_NBR,5)
         REPLACE AMOUNT WITH A->COMM_AMT2
      ENDIF
      IF A->COMM_AMT3 <> 0 .OR. A->COM_CODE3 <> SPACE(2)
         SELECT E
         DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
         DO FILELOCK
         APPEND BLANK
         REPLACE SALESMAN WITH MSALESMAN
         REPLACE PO_NBR   WITH MPO_NBR
         REPLACE PO_SUFFIX WITH MPO_SUFFIX
         REPLACE THD_SEQ   WITH '3'
         REPLACE COM_CODE WITH A->COM_CODE3
         REPLACE COM_TYPE WITH 'T'
         REPLACE TRAN_DATE WITH DATE()
         REPLACE COR_FLG WITH 'I'
         REPLACE INV_NBR WITH STR(MINV_NBR,5)
         REPLACE AMOUNT WITH A->COMM_AMT3
         UNLOCK
         *** FEDERATED FOODS = COMPAYEE = '30'
         IF COM_CODE = '30'
            SELECT D
            DO FOX_USE WITH "CONTROL", .F.
            DO RECLOCK
            STORE FED_KEY TO MFED_KEY
            REPLACE FED_KEY WITH FED_KEY + 1
            UNLOCK
            USE
            SELECT E
            DO RECLOCK
            REPLACE FED_KEY WITH MFED_KEY
            UNLOCK
            SELECT E
            DO FOX_USE WITH "FEDTHD INDEX FEDTHD", .F.
            DO FILELOCK
            APPEND BLANK
            REPLACE FED_KEY WITH MFED_KEY
            REPLACE SALESMAN WITH A->SALESMAN
            REPLACE PO_NBR WITH A->PO_NBR
            REPLACE PO_SUFFIX WITH A->PO_SUFFIX
            UNLOCK
            DO RECLOCK
            SELECT B
            SEEK A->SALESMAN + A->PO_NBR + A->PO_SUFFIX       
            I = 1
            DO WHILE .NOT. EOF() .AND. I <= 20 .AND. SALESMAN = A->SALESMAN .AND. PO_NBR = A->PO_NBR .AND. PO_SUFFIX = A->PO_SUFFIX
               MI = SUBSTR(STR(I+100,3),2)
               SELECT E
               REPLACE PROD&MI WITH B->PROD_DESC
               REPLACE LBS&MI  WITH B->LBS
               REPLACE CENT&MI WITH B->COM3_CENT
               I = I + 1
               SELECT B
               SKIP
            ENDDO
            SELECT E
            USE
         ENDIF
      ENDIF
      
      **RON MONTGOMERY CHANGES
      IF A->SALE2_AMT <> 0 .OR. A->SAL_CODE2 <> SPACE(2)
         SELECT E
         DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTPD, COMTDT", .F.
         DO FILELOCK
         APPEND BLANK
         REPLACE SALESMAN WITH MSALESMAN
         REPLACE PO_NBR   WITH MPO_NBR
         REPLACE PO_SUFFIX WITH MPO_SUFFIX
         REPLACE THD_SEQ WITH '4'
         REPLACE COM_CODE WITH A->SAL_CODE2
         REPLACE COM_TYPE WITH 'T'
         REPLACE TRAN_DATE WITH DATE()
         REPLACE COR_FLG WITH 'I'
         REPLACE INV_NBR WITH STR(MINV_NBR,5)
         REPLACE AMOUNT WITH A->SALE2_AMT
      ENDIF
   ENDIF
   
   SELECT E
   DO FOX_USE WITH "DAILYJRN INDEX JRN_MO, JRN_TRAN, JRN_PO, POSTED", .F.
   DO FILELOCK
   APPEND BLANK
   REPLACE salesman   WITH A->salesman  
   REPLACE po_nbr     WITH A->po_nbr    
   REPLACE po_suffix  WITH A->po_suffix 
   REPLACE RSUPCODE   WITH A->RSUPCODE
   REPLACE SUP_CODE   WITH A->SUP_CODE
   REPLACE buy_code   WITH A->buy_code  
   REPLACE bbuycode   WITH A->bbuycode  
   REPLACE ship_date  WITH A->ship_date 
   REPLACE tot_lbs    WITH A->tot_lbs   
   REPLACE tot_sell   WITH A->tot_sell  
   REPLACE TOT_PURCH  WITH A->TOT_PURCH
   REPLACE TOT_NET    WITH A->TOT_NET
   REPLACE SALE2_NET  WITH A->SALE2_NET
   REPLACE GROSS      WITH A->GROSS
   REPLACE FRT_CODE1  WITH A->FRT_CODE1
   MFRT = A->FRT_AMT1 + A->FRT1_ADJ1 + A->FRT1_ADJ2
   REPLACE FRT_AMT1   WITH MFRT            
   IF A->FRT2_FLG <> ' '
      REPLACE FRT_AMT2  WITH MFRT_AMT2
      REPLACE FRT_CODE2 WITH MFRT_CODE2
   ENDIF
   IF A->FRT3_FLG <> ' '
      REPLACE FRT_AMT3  WITH MFRT_AMT3
      REPLACE FRT_CODE3 WITH MFRT_CODE3
   ENDIF
   
   REPLACE COM_CODE   WITH A->COM_CODE
   REPLACE COMM_AMT   WITH A->comm_amt  
   REPLACE COM_CODE2  WITH A->COM_CODE2
   REPLACE COMM_AMT2  WITH A->comm_amt2  
   REPLACE COM_CODE3  WITH A->COM_CODE3
   REPLACE COMM_AMT3  WITH A->comm_amt3  
   REPLACE SALE_COMM  WITH A->sale_comm 
   REPLACE SAL_CODE2  WITH A->SAL_CODE2 
   REPLACE SALE2_AMT  WITH A->sale2_amt 
   REPLACE INV_NBR    WITH STR(minv_nbr,5)   
   REPLACE MISC_AMT   WITH MMISC_AMT
   REPLACE TRAN_DATE  WITH DATE()       
   REPLACE brok_name  WITH A->brok_name 
   REPLACE BROKERAGE  WITH A->BROKERAGE 
   REPLACE PROD       WITH MPROD
   REPLACE FRT_PALL   WITH A->FRT_PALL
   REPLACE CUS_PALL   WITH A->CUS_PALL
   REPLACE SUP_PALL   WITH A->SUP_PALL
   REPLACE JRNL_DATE   WITH A->ship_date
   **** MAKE SURE HERE THAT I DON'T DO THIS IF THE MONTH IS ALREADY CLOSED
   STORE SUBSTR(DTOC(A->SHIP_DATE),7) TO MYR
   STORE SUBSTR(DTOC(A->SHIP_DATE),1,2) TO MMO
   STORE MYR+MMO TO MDATE
   STORE VAL(MDATE) TO MDATE  
   
   STORE MTRAN_YR+MTRAN_MO TO MTRAN_DATE
   STORE VAL(MTRAN_DATE) TO MTRAN_DATE
   
   IF MDATE > MTRAN_DATE 
      REPLACE TRAN_MO WITH SUBSTR(STR(MONTH(A->SHIP_DATE) + 100,3),2)
      REPLACE TRAN_YR WITH SUBSTR(DTOC(A->SHIP_DATE),7)
   ELSE
      REPLACE TRAN_MO WITH MTRAN_MO
      REPLACE TRAN_YR WITH MTRAN_YR
   ENDIF
   REPLACE INV_COR    WITH 'I'
   UNLOCK
   *  IF MCUST_SW
   *     DO FOX_USE WITH "INV_ADJ INDEX INV_ADJ", .F.
   *     SEEK SPACE(5) + A->SALESMAN + A->PO_NBR + A->PO_SUFFIX
   *     IF .NOT. EOF()
   *       DO FILELOCK
   *       REPLACE INV_NBR WITH STR(MINV_NBR,5) 
   *       UNLOCK
   *     ENDIF
   *  ENDIF
   USE
   SELECT A
   SKIP
ENDDO

IF MPRT_ONE
   EJECT
ENDIF
SET DEVICE TO SCREEN
SET PRINT OFF
SET PRINT TO
SET CONSOLE ON
IF MPRINTER1 <> 'DONOTPRINT'
   RUN &MPRINTIT1
ENDIF

*SELECT A
*DO FOX_USE WITH "PO_HEAD", .F.

*IF MRECNO <> 0
*   GOTO MRECNO
*   DO WHILE .NOT. EOF() .AND. INV_FLG = ' '
*      IF DTOC(INV_DATE) <> '  /  /  '
*         DO FILELOCK
*         REPLACE INV_FLG WITH 'P'
*         UNLOCK
*      ENDIF
*      SKIP
*   ENDDO
*ENDIF
*STORE SPACE(5) TO MREADY
*DO WHILE MREADY <> 'READY'
*   @ 10,5 SAY 'NOTE:  TEMPORARY SITUATION TILL GRACE HAS SOME TIME TO FIX THIS!!!!'
*   @ 11,5 SAY '       NEED TO REINDEX FOR ONE FILE - PLEASE MAKE SURE'
*   @ 12,5 SAY "       SURE ALL USER ARE AT THE MAIN MENU OR LOGOUT'D"
*   @ 13,5 SAY '       BEFORE PROCEEDING WITH THIS NEXT STEP !!!!!!!'
*   @ 14,5 SAY '       THIS WILL ONLY TAKE ABOUT A MINUTE SO IT SHOULD'
*   @ 15,5 SAY "       BE QUICK.... TO PROCEED, TYPE 'READY' WHEN YOU"
*   @ 16,5 SAY '       ARE READY TO CONTINUE: ' GET MREADY PICTURE '@!'
*   READ
*ENDDO
*IF MPRT_ONE
*  DO FOX_USE WITH "PO_HEAD", .F.
*   DO FILELOCK
*   REPLACE INV_FLG WITH 'P' FOR INV_FLG = ' '
*   INDEX ON INV_FLG TO PRINT
*   UNLOCK
*ENDIF

SELECT A

DO CASE
CASE MCOMPANY = 'MIDWEST FOOD & POULTRY'
   
   IF MSALESBB = 'X'
      SEEK '   '
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK '   '
      ENDDO
   ENDIF
   
   IF MSALES05 = 'X'
      SEEK ' 05'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 05'
      ENDDO
   ENDIF
   
   IF MSALES06 = 'X'
      SEEK ' 06' 
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 06'
      ENDDO
   ENDIF
   
   IF MSALES30 = 'X'
      SEEK ' 30'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 30'
      ENDDO
   ENDIF
   
   IF MSALES33 = 'X'
      SEEK ' 33'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 33'
      ENDDO
   ENDIF
   
   IF MSALES39 = 'X'
      SEEK ' 39'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 39'
      ENDDO
   ENDIF
   
   IF MSALES44 = 'X'
      SEEK ' 44'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 44'
      ENDDO
   ENDIF
   
   IF MSALES50 = 'X'
      SEEK ' 50'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 50'
      ENDDO
   ENDIF
   
   IF MSALES55 = 'X'
      SEEK ' 55'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 55'
      ENDDO
   ENDIF
   
   IF MSALES65 = 'X'
      SEEK ' 65' 
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 65'
      ENDDO
   ENDIF
   
   IF MSALES77 = 'X'
      SEEK ' 77'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 77'
      ENDDO
   ENDIF
   
   IF MSALES88 = 'X'
      SEEK ' 88'
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 88'
      ENDDO
   ENDIF
   
   IF MSALESMF = 'X'
      SEEK ' 25' 
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 25'
      ENDDO
      SEEK ' 26' 
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 26'
      ENDDO
      SEEK ' 27' 
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 27'
      ENDDO
      SEEK ' 28' 
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 28'
      ENDDO
      SEEK ' 29' 
      DO WHILE .NOT. EOF()                       
         DO FILELOCK
         REPLACE INV_FLG WITH 'P'
         UNLOCK
         SEEK ' 29'
      ENDDO
   ENDIF
   
OTHERWISE
   IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
      SET FILTER TO BROKERAGE <> 'H'
   ENDIF
   
   GOTO TOP
   
   DO WHILE INV_FLG = ' '
      DO FILELOCK
      REPLACE INV_FLG WITH 'P'
      UNLOCK
      GOTO TOP
   ENDDO
ENDCASE


CLOSE ALL

RETURN

* EOF: INV_PRT.PRG
*Formatted by: ToolBox Ver. 1.2  on 1/11/16 at 2:53 PM.
