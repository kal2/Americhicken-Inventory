************
* Program.: DAILYAM.PRG
* Author..: GRACE KELLER
* Date....: 10/12/87
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: MAIN PROGRAM FOR NIGHTLY JOBS - BROKER SYSTEM
*
* ---SET environment.
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     

SET CENTURY ON
SET DELETED ON
SET TALK OFF
SET ECHO OFF
SET BELL OFF
SET MENU OFF
SET SAFETY OFF
SET ESCAPE ON
SET SCOREBOARD ON
SET STATUS OFF
SET EXCLUSIVE OFF
SET PATH TO \AMERIFOX   
SET DECIMALS TO 5

CLIPPER = .F.
FOXBASE = .T.
MMONO   = .F.

CLOSE ALL

**** FINISHES THE READ WHEN DOING A PAGE DOWN

SELECT A
DO FOX_USE WITH "C:\COMPINFO\SCREEN", .F.
MSCRNSIZE = SCRNSIZE
USE

* ---Initialize global variables.
SELECT A
DO FOX_USE WITH "COMPANY", .F.
MCOMPANY = TRIM(COMPANY)
MMASTDBF = TRIM(MASTDBF)
MDBFLOC = TRIM(DBFLOC)
USE

SELECT A
DO FOX_USE WITH "&MMASTDBF.CONTROL", .F.
MPROGRAM = TRIM(PROGRAM)
MPROG_CODE = PROG_CODE
USE

IF FILE("C:\COMPINFO\PRINTERS.DBF")
   SELECT A
   DO FOX_USE WITH "C:\COMPINFO\PRINTERS", .F.
   MPRINTER  = TRIM(PRINTER1)
   MPRINTER2 = TRIM(PRINTER2)
   MPRINTER3 = TRIM(PRINTER3)
   USE
ELSE
   MPRINTER  = 'DONOTPRINT'
   MPRINTER2 = 'DONOTPRINT'
   MPRINTER3 = 'DONOTPRINT'
ENDIF  

MPRINTIT  = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER
MPRINTIT2 = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER2
MPRINTIT3 = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER3

**********************************************************************
**** THIS WORKS - BUT GIVES AN EXTRA EJECT AT THE END OF JOB**********
**** ORIGINALLY HAD THIS WAY FOR STODDARD COUNTY
**MPRINTIT = "PRINT.EXE /D:" + MPRINTER + " C:\COMPINFO\PRT_FILE.TXT"
**********************************************************************
****TESTING************
****MPRINTIT = "PRINT.EXE /D:\\GRACE64-HP\HP4250 \COMPINFO\PRTFILE.TXT"
****MPRINTIT = "PRINT.EXE /D:\\GINGER-PC\HP940C \REPORTS\PRTFILE.TXT"
*** END OF TESTING*****
************************************************************************

STORE 'BROKER SYSTEM' TO MPROGRAM

STORE .T. TO MONO

MPASSWORD = 'ADM99'
MUSER = 'SUPERVISOR'
MSECURITY = .T.

ON KEY LABEL PGUP CLEAR READ
ON KEY LABEL PGDN CLEAR READ


SELECT A
USE PO_HEAD EXCLUSIVE
INDEX ON SALESMAN + PO_NBR + PO_SUFFIX TO PO_HEAD
INDEX ON INV_FLG + SALESMAN TO PRINT
INDEX ON STR(YEAR(SHIP_DATE),4) + SUBSTR(DTOC(SHIP_DATE),1,2) + SUBSTR(DTOC(SHIP_DATE),4,2) TO PO_SHIP
INDEX ON RSUPCODE + SUP_REC + SUP_PD + STR(YEAR(SHIP_DATE),4) + SUBSTR(DTOC(SHIP_DATE),1,2) + SUBSTR(DTOC(SHIP_DATE),4,2) TO PO_SUP
**INDEX ON FRT_CODE1 + FRT_REC + FRT_PD +  PO_NBR TO PO_FRT
INDEX ON FRT_CODE1 + FRT_REC + FRT_PD + STR(YEAR(SHIP_DATE),4) + SUBSTR(DTOC(SHIP_DATE),1,2) + SUBSTR(DTOC(SHIP_DATE),4,2) TO PO_FRT

INDEX ON BBUYCODE + STR(CTOD('12/31/2099') - SHIP_DATE,10) TO TMP_BUY
INDEX ON RSUPCODE + STR(CTOD('12/31/2099') - SHIP_DATE,10) TO TMP_SUP
INDEX ON FRT_CODE1 + STR(CTOD('12/31/2099') - SHIP_DATE,10) TO TMP_FRT
INDEX ON SHORT_FLG + SALESMAN + SUBSTR(DTOC(SHIP_DATE),7) + SUBSTR(DTOC(SHIP_DATE),1,2) + SUBSTR(DTOC(SHIP_DATE),4,2) TO PO_TEMP

USE SUP_INV EXCLUSIVE 
PACK
INDEX ON RSUPCODE + STR(YEAR(DUE_DATE),4) + SUBSTR(DTOC(DUE_DATE),1,2) + SUBSTR(DTOC(DUE_DATE),4,2) TO SUP_INV
UNLOCK

USE FRT_INV EXCLUSIVE 
PACK
INDEX ON FRT_CODE + STR(YEAR(DUE_DATE),4) + SUBSTR(DTOC(DUE_DATE),1,2) + SUBSTR(DTOC(DUE_DATE),4,2) TO FRT_INV
UNLOCK

USE INVEN EXCLUSIVE
PACK

INDEX ON LOT_NBR TO INVNLOT
INDEX ON SALESMAN+PO_NBR+PO_SUFFIX TO INVNPO
INDEX ON FREEZ_LOC + LOT_NBR TO INVNLOC
INDEX ON SOLD_FLG+DIV_CODE+FREEZ_LOC+PROD_DESC+STR(YEAR(ANIV_DATE),4)+SUBSTR(DTOC(ANIV_DATE),1,2) + SUBSTR(DTOC(ANIV_DATE),4,2) + LOT_NBR TO INVNSOLD
INDEX ON STR(I_NBR,5) TO INVNINBR
INDEX ON STR(YEAR(ANIV_DATE),4)+SUBSTR(DTOC(ANIV_DATE),1,5) TO INVNANIV
INDEX ON IPRODDESC TO INVNCAT 
UNLOCK

USE HINVEN EXCLUSIVE
PACK
INDEX ON FREEZ_LOC + LOT_NBR TO HINVNLOC
INDEX ON SOLD_FLG+DIV_CODE+FREEZ_LOC+PROD_DESC+STR(YEAR(ANIV_DATE),4)+SUBSTR(DTOC(ANIV_DATE),1,2) + SUBSTR(DTOC(ANIV_DATE),4,2) TO HINVSOLD
UNLOCK

USE INVN_DTL EXCLUSIVE
PACK

INDEX ON STR(I_NBR,5)+STR(YEAR(ACT_DATE),4)+SUBSTR(DTOC(ACT_DATE),1,2) + SUBSTR(DTOC(ACT_DATE),4,2) TO IDTL_DTL
INDEX ON STR(I_NBR,5) + SALESMAN + PO_NBR+PO_SUFFIX TO INVN_PO
INDEX ON STR(I_NBR,5) + ACT_CODE + STR(CTOD('12/31/2099')-ACT_DATE,10) + ACT_CODE TO INVNDISP
INDEX ON STR(YEAR(ACT_DATE),4)+SUBSTR(DTOC(ACT_DATE),1,5) TO DTL_DATE
INDEX ON SALESMAN+PO_NBR+PO_SUFFIX+ITEM_NBR+ACT_CODE TO INVN_DTL
INDEX ON FREEZ_LOC + LOT_NBR + ACT_CODE TO DTL_LOT

UNLOCK

USE HINV_DTL EXCLUSIVE
PACK
INDEX ON SALESMAN+PO_NBR+PO_SUFFIX+ITEM_NBR+ACT_CODE TO HINV_DTL
INDEX ON FREEZ_LOC + LOT_NBR + ACT_CODE TO HDTL_LOT
UNLOCK

USE CUS_INV EXCLUSIVE
INDEX ON BBUYCODE + PAID_FLG + INV_NBR  TO CUS_INV
INDEX ON  PAID_FLG + BBUYCODE + STR(YEAR(INV_DATE),4) + SUBSTR(DTOC(INV_DATE),1,2) + SUBSTR(DTOC(INV_DATE),4,2) TO CUS_DATE
INDEX ON INV_NBR + DEB_CRD TO CUSIVNBR
INDEX ON STR(YEAR(SHIP_DATE),4) + SUBSTR(DTOC(SHIP_DATE),1,2) + SUBSTR(DTOC(SHIP_DATE),4,2)  TO CUS_SHIP
UNLOCK

USE MAN_CK EXCLUSIVE
PACK
INDEX ON NAME TO MAN_CK
UNLOCK

MDOIT = .T.
IF MDOIT
   *** CALCULATE AGING DAYS
   *** TWO TIME PERIODS OF PREVIOUS 6 MONTHS, PREVIOUS 25 DAYS
   
   STORE DATE() TO MCURRENT
   *** Matt only wants to see 120 days previous for americhicken
   MBEG_DT180 = MCURRENT - 120
   MBEG_DT25 = MCURRENT - 25
   
   STORE MONTH(MBEG_DT180) TO MMONTH
   MMONTH = MMONTH + 100
   STORE SUBSTR(STR(MMONTH,3),2) TO MMONTH
   
   STORE YEAR(MBEG_DT180) TO MYEAR
   
   STORE SUBSTR(STR(MYEAR,4),3) TO MYEAR
   SELECT A
   DO FOX_USE WITH "&MDBFLOC.BIL_BUY INDEX &MDBFLOC.BBUYCODE", .F.
   GOTO TOP
   
   DO WHILE .NOT. EOF()
      DO RECLOCK
      REPLACE SHIPS_180 WITH 0
      REPLACE SHIPS_25 WITH 0
      REPLACE DAYS_180 WITH 0
      REPLACE DAYS_25 WITH 0
      UNLOCK
      SKIP
   ENDDO
   
   SELECT D
   DO FOX_USE WITH "PO_HEAD INDEX PO_HEAD", .F.
   
   SELECT B
   DO FOX_USE WITH "CUS_INV INDEX CUS_SHIP", .F.
   
   SELECT C
   DO FOX_USE WITH "PAYMENTS INDEX PAY_PO", .F.
   
   SELECT B
   SEEK MYEAR + MMONTH
   IF EOF()
      GOTO TOP
   ENDIF
   DO WHILE .NOT. EOF() .AND. SHIP_DATE <= MCURRENT 
      STORE BBUYCODE TO MBBUYCODE
      IF SHIP_DATE < MBEG_DT180
         SKIP
         LOOP
      ENDIF
      IF PAID_FLG = ' ' .OR. SUBSTR(INV_NBR,1,1) = 'A' .OR. DEB_CRD = 'Y' 
         SKIP
         LOOP
      ENDIF
      SELECT D
      SEEK B->SALESMAN + B->PO_NBR + B->PO_SUFFIX
      
      IF .NOT. EOF() .AND. DEL_REQD <> CTOD('')
         STORE DEL_REQD TO MCALC_DATE
      ELSE
         STORE SHIP_DATE TO MCALC_DATE
      ENDIF
      
      SELECT C
      SEEK B->SALESMAN + B->PO_NBR + B->PO_SUFFIX
      IF .NOT. EOF()
         **MDAYS = (PAID_DATE - B->SHIP_DATE)
         MDAYS = PAID_DATE - MCALC_DATE
         IF B->PO_NBR = '6556' .AND. B->PO_SUFFIX = ' '
            MDAYS = MDAYS - 30
         ENDIF
         IF MDAYS < 0
            MDAYS = 0
         ENDIF
         SELECT A
         SEEK MBBUYCODE
         IF .NOT. EOF()
            DO RECLOCK
            REPLACE SHIPS_180 WITH SHIPS_180 + 1
            REPLACE DAYS_180 WITH DAYS_180 + MDAYS
            IF C->PAID_DATE >= MBEG_DT25
               REPLACE SHIPS_25 WITH SHIPS_25 + 1
               REPLACE DAYS_25 WITH DAYS_25 + MDAYS
            ENDIF
            UNLOCK
         ENDIF
      ENDIF
      SELECT B
      SKIP
   ENDDO
   
   
ENDIF

CLOSE DATA

*** CALCULATE LAST SHIPPED DATE ON CUSTOMER PRICING MASTER

SELECT D
DO FOX_USE WITH "PO_DTL INDEX PO_DTL", .F.

SELECT B
DO FOX_USE WITH "PO_HEAD", .F.
MCUTOFF = DATE() - 180
SET FILTER TO SHIP_DATE >= MCUTOFF
GOTO TOP

SELECT A
DO FOX_USE WITH "\AMERI\PRI_MAST", .T.
REPLACE ALL LAST_CUST WITH CTOD('')
INDEX ON BBUYCODE + PROD_DESC TO  \AMERI\TMP_PRI
DO FOX_USE WITH "\AMERI\PRI_MAST INDEX \AMERI\TMP_PRI", .T.

SELECT B

DO WHILE .NOT. EOF()
   
   SELECT D
   SEEK B->SALESMAN+B->PO_NBR+B->PO_SUFFIX
   
   DO WHILE .NOT. EOF() .AND. SALESMAN+PO_NBR+PO_SUFFIX = B->SALESMAN+B->PO_NBR+B->PO_SUFFIX
      IF LBS <= 0
         SKIP
         LOOP
      ENDIF
      
      SELECT A
      SEEK B->BBUYCODE + D->PROD_DESC
      
      IF .NOT. EOF()
         IF LAST_CUST = CTOD('')
            REPLACE LAST_CUST WITH B->SHIP_DATE
         ELSE
            IF B->SHIP_DATE > LAST_CUST
               REPLACE LAST_CUST WITH B->SHIP_DATE
            ENDIF
         ENDIF
      ENDIF
      SELECT D
      SKIP
   ENDDO
   SELECT B
   SKIP
ENDDO
CLOSE ALL

SELECT F
DO FOX_USE WITH "INV_HEAD INDEX INV_HEAD", .F.
SELECT C

DO FOX_USE WITH "&MDBFLOC.BIL_BUY INDEX &MDBFLOC.BBUYCODE", .F.
REPLACE ALL CUS_BAL WITH 0
GOTO TOP

SELECT B
DO FOX_USE WITH "INV_ADJ INDEX INV_ADJ", .F.

SELECT A
DO FOX_USE WITH "CUS_INV INDEX CUS_DATE", .F.
SEEK ' '

DO WHILE .NOT. EOF() .AND. PAID_FLG = ' '
   STORE BBUYCODE TO MBBUYCODE
   SELECT C
   SEEK MBBUYCODE
   
   IF .NOT. EOF()
      STORE NAME TO MNAME
   ELSE 
      STORE 'CUSTOMER NOT ON FILE' TO MNAME
   ENDIF
   SELECT A
   MOVERDUE = 0             
   MBALANCE = 0
   DO WHILE .NOT. EOF() .AND. PAID_FLG = ' ' .AND. BBUYCODE = MBBUYCODE
      STORE INV_NBR TO MINV_NBR
      STORE SALESMAN TO MSALESMAN
      STORE PO_NBR TO MPO_NBR
      STORE PO_SUFFIX TO MPO_SUFFIX
      STORE TOT_SELL + CUS_PALL TO MAMT
      
      SELECT F
      SEEK A->INV_NBR
      IF EOF()
         STORE 0 TO MTOT_SELL       
      ELSE
         STORE TOT_SELL TO MTOT_SELL        
      ENDIF
      IF A->DEB_CRD = ' '
         SELECT B
         SEEK MINV_NBR
         DO WHILE .NOT. EOF() .AND. INV_NBR = MINV_NBR
            MAMT = MAMT + ADJ_AMT
            SKIP
         ENDDO
      ENDIF
      SELECT A
      MSTILL_DUE = MAMT - AMT_PAID
      
      IF MSTILL_DUE > 0 
         MBALANCE = MBALANCE + MSTILL_DUE
      ENDIF
      SELECT A
      SKIP
   ENDDO
   
   SELECT C 
   *** SEEK MBBUYCODE
   IF .NOT. EOF()
      DO RECLOCK
      REPLACE CUS_BAL WITH MBALANCE 
      IF MCOMPANY = 'DIVISION 15'
         REPLACE CUS_BAL15 WITH CUS_BAL15 + MBALANCE
      ENDIF
      IF CUS_BAL > HIGH_BAL
         REPLACE HIGH_BAL WITH CUS_BAL 
      ENDIF
      UNLOCK
   ENDIF
   SELECT A
ENDDO
CLOSE DATA

QUIT
*Formatted by: ToolBox Ver. 1.2  on 7/11/17 at 2:33 PM.
