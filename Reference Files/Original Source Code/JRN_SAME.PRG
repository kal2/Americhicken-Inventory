**********
* Program.: JRN_SAME.PRG
* Author..: Grace Keller
* Date....: 01/26/88
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: UPDATE A DAILY JOURNAL ENTRY IF THE TOTALS ARE DIFFERENT     
* ---OPEN FILES
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     
RELEASE MQTY
RELEASE MFR_FZ
RELEASE MGRADE
RELEASE MPAK  
RELEASE MCLASS
RELEASE MPROD
RELEASE MSIZE
RELEASE MPACKSPEC
RELEASE MLBS
RELEASE MPURC_PRI
RELEASE MSELL_PRI
RELEASE MPURC_TOT
RELEASE MSELL_TOT
RELEASE MSHRT_BOX
RELEASE MSHRT_LBS
RELEASE MBILL_PRI
RELEASE MPAK1  
RELEASE MPAK2  
RELEASE MBOX_SZ
RELEASE MOLD_LOT
RELEASE MOLD_LBS
RELEASE MOLD_QTY
RELEASE MOLD_PROD
RELEASE MIN_LOT
RELEASE MOUT_LOT
RELEASE MOLD_IN
RELEASE MOLD_OUT
RELEASE MSTOR_ITEM
RELEASE MPAK_YR
RELEASE MPAK_DAY

SELECT A
USE
SELECT D
USE
MUPD_BAL = .T.
IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MSALESMAN = '11'
   IF MBROKERAGE = 'H'
      MUPD_BAL = .F.
   ENDIF
ENDIF
IF MUPD_BAL
   ** ON ALL CORRECTIONS, UPDATES, ETC., NEED TO UPDATE THE CREDIT LIMIT FILE
   ** GET OUT TO THE CUSTOMER FILE AND UPDATE IT TOO
   IF B->TOT_SELL <> STOT_SELL .OR. B->CUS_PALL <> SCUS_PALL ;
      .OR. MBBUYCODE <> SBBUYCODE
      ** ON ALL CORRECTIONS, UPDATES, ETC., NEED TO UPDATE THE CREDIT LIMIT FILE
      ** GET OUT TO THE CUSTOMER FILE AND UPDATE IT TOO
      SELECT A
      DO FOX_USE WITH "&MDBFLOC.BIL_BUY INDEX &MDBFLOC.BBUYCODE", .F.
      IF MBBUYCODE <> SBBUYCODE
         SEEK SBBUYCODE
         DO RECLOCK
         REPLACE CUS_BAL WITH CUS_BAL - (STOT_SELL + SCUS_PALL)
         UNLOCK
         SEEK MBBUYCODE
         DO RECLOCK
         REPLACE CUS_BAL WITH CUS_BAL + STOT_SELL + SCUS_PALL
         UNLOCK
      ELSE
         SEEK MBBUYCODE
         DO RECLOCK
         REPLACE CUS_BAL WITH CUS_BAL - (STOT_SELL+SCUS_PALL) + (B->TOT_SELL+B->CUS_PALL)
         UNLOCK
      ENDIF
      USE
   ENDIF
ENDIF
SELECT B
**** NO ORIGINAL ENTRY MADE ON SPREADSHEET
IF INV_FLG = ' '
   RETURN
ENDIF
*IF INV_NBR = SPACE(5) .and. BBUYCODE <> 'NONE' .AND. BBUYCODE <> 'I'
*   RETURN
*ENDIF
*IF MTOT_SELL + MCUS_PALL <> STOT_SELL + SCUS_PALL
*   DO CUS_ADJ
*ENDIF
MTOT_NET = MTOT_NET - BILL_ADJ
SELECT A
DO FOX_USE WITH "&MMASTDBF.CONTROL", .F.
STORE TRAN_MO TO MTRAN_MO
STORE TRAN_YR TO MTRAN_YR
USE


SELECT E
DO FOX_USE WITH "DAILYJRN INDEX JRN_PO, JRN_MO, JRN_TRAN, POSTED", .F.

SELECT B
STORE (FRT_AMT1 + FRT1_ADJ1 + FRT1_ADJ2) TO MFRT1

STORE SUBSTR(STR(MONTH(MSHIP_DATE)+100,3),2) TO MMONTH
STORE STR(YEAR(MSHIP_DATE),4) TO MYEAR
STORE MYEAR+MMONTH TO M1ST_DATE
STORE VAL(M1ST_DATE) TO M1ST_DATE

STORE MTRAN_YR + MTRAN_MO TO M2ND_DATE
STORE VAL(M2ND_DATE) TO M2ND_DATE
IF M1ST_DATE < M2ND_DATE
   DO JRN_DIFF
   RETURN
ENDIF
SELECT B
MDOIT = .F.

DO CASE
CASE B->TOT_LBS <> STOT_LBS .OR. B->TOT_PURCH + B->BILL_ADJ <> STOT_PURCH ;
   .OR. B->SUP_PALL <> SSUP_PALL .OR. MRSUPCODE <> SRSUPCODE
   IF SUP_PD = ' ' .AND. SUP_REC <> ' '  
      IF .NOT. MDOSHORT
         SELECT A
         DO FOX_USE WITH "SUP_INV INDEX SUP_INV", .F.
         DO WHILE .NOT. EOF()
            IF SALESMAN = B->SALESMAN .AND. PO_NBR = B->PO_NBR .AND. PO_SUFFIX = B->PO_SUFFIX
               DO FILELOCK
               DELETE
               FLUSH
               UNLOCK
               GOTO BOTTOM 
            ENDIF   
            SKIP
         ENDDO
         USE
         SELECT B
         DO FILELOCK
         REPLACE SUP_REC WITH ' '
         FLUSH
         UNLOCK
      ENDIF
   ENDIF
CASE B->TOT_SELL <> STOT_SELL .OR. B->CUS_PALL <> SCUS_PALL ;
   .OR. MBBUYCODE <> SBBUYCODE
CASE MFRT1 <> SFRT_AMT1 .OR. B->FRT_PALL <> SFRT_PALL .OR. SFRT_CODE1 <> B->FRT_CODE1
   DO CASE
   CASE FRT_PD = ' ' .AND. FRT_REC <> ' '
      SELECT A
      DO FOX_USE WITH "FRT_INV INDEX FRT_INV", .F.
      DO WHILE .NOT. EOF()
         IF SALESMAN = B->SALESMAN .AND. PO_NBR = B->PO_NBR .AND. PO_SUFFIX = B->PO_SUFFIX
            DO FILELOCK
            DELETE
            FLUSH
            UNLOCK
            GOTO BOTTOM 
         ENDIF   
         SKIP
      ENDDO
      USE
      SELECT B
      DO FILELOCK
      REPLACE FRT_REC WITH ' '
      FLUSH
      UNLOCK
   CASE SFRT_CODE1 = 'NONE' .AND. FRT_CODE1 <> 'NONE'
      DO RECLOCK
      REPLACE FRT_PD WITH ' '
      REPLACE FRT_REC WITH ' '
      UNLOCK
   ENDCASE
CASE B->TOT_SELL <> STOT_SELL ;
   .OR. B->CUS_PALL <> SCUS_PALL .OR. MBBUYCODE <> SBBUYCODE
   ********** UPDATE THE CUSTOMER INVOICE FILE
ENDCASE

SELECT E
SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + ' I'
IF EOF()      
   DO JRN_DIFF
ELSE
   IF POST_FLG <> ' '
      DO JRN_DIFF
   ENDIF
   
   DO RECLOCK 
   REPLACE BBUYCODE   WITH MBBUYCODE
   REPLACE RSUPCODE   WITH MRSUPCODE
   REPLACE tot_lbs    WITH Mtot_lbs   
   REPLACE tot_sell   WITH Mtot_sell  
   REPLACE TOT_PURCH  WITH MTOT_PURCH + B->BILL_ADJ
   REPLACE TOT_NET    WITH MTOT_NET
   REPLACE SALE2_NET  WITH MSALE2_NET
   REPLACE SALE3_NET  WITH MSALE3_NET
   REPLACE GROSS      WITH MGROSS
   REPLACE FRT_CODE1  WITH MFRT_CODE1
   REPLACE FRT_AMT1   WITH (MFRT_AMT1 + MFRT1_ADJ1 + MFRT1_ADJ2)
   REPLACE COM_CODE   WITH MCOM_CODE
   REPLACE COMM_AMT   WITH MCOMM_AMT  
   REPLACE COM_CODE2  WITH MCOM_CODE2
   REPLACE COMM_AMT2  WITH MCOMM_AMT2
   REPLACE COM_CODE3  WITH MCOM_CODE3
   REPLACE COMM_AMT3  WITH MCOMM_AMT3
   REPLACE SALE_COMM  WITH Msale_comm
   REPLACE SAL_CODE2  WITH MSAL_CODE2 
   REPLACE SALE2_AMT  WITH Msale2_amt 
   REPLACE SAL_CODE3  WITH MSAL_CODE3 
   REPLACE SALE3_AMT  WITH MSALE3_AMT 
   REPLACE MISC_AMT   WITH MMISCAMT1 + MMISCAMT2 + MMISCAMT3
   REPLACE FRT_PALL   WITH MFRT_PALL
   REPLACE CUS_PALL   WITH MCUS_PALL
   REPLACE SUP_PALL   WITH MSUP_PALL
   REPLACE SHIP_DATE  WITH MSHIP_DATE
   REPLACE BROKERAGE  WITH MBROKERAGE
   IF B->FRT2_FLG <> ' '
      REPLACE FRT_CODE2 WITH MFRT_CODE2
      REPLACE FRT_AMT2  WITH MFRT_AMT2
   ENDIF
   IF B->FRT3_FLG <> ' '
      REPLACE FRT_CODE3 WITH MFRT_CODE3
      REPLACE FRT_AMT3  WITH MFRT_AMT3
   ENDIF
   UNLOCK
   IF M1ST_DATE > M2ND_DATE                         
      DO FILELOCK
      REPLACE TRAN_MO WITH MMONTH  
      REPLACE TRAN_YR WITH MYEAR
      UNLOCK
   ENDIF
   FLUSH
   
   IF M1ST_DATE > M2ND_DATE
      SELECT A
      DO FOX_USE WITH "INV_HEAD INDEX INV_HEAD, INV_DATE", .F.
      SEEK B->INV_NBR
      IF .NOT. EOF()
         DO RECLOCK
         REPLACE SHIP_DATE WITH B->SHIP_DATE
         UNLOCK
      ENDIF
      USE
   ENDIF
   
   SELECT B
   IF SHORT_FLG = 'Y'
      SELECT E
      DO RECLOCK
      REPLACE SHORT_FLG WITH 'Y'
      FLUSH
      UNLOCK
   ENDIF
ENDIF
*ENDIF
SELECT E
USE
SELECT B
RETURN
* EOF: JRN_SAME.PRG
*Formatted by: ToolBox Ver. 1.2  on 5/20/2 at 4:05 PM.
