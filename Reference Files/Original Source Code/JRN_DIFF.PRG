*********
* Program.: JRN_DIFF.PRG
* Author..: Grace Keller
* Date....: 01/18/88
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: WRITE A DAILY JOURNAL ENTRY IF THE TOTALS ARE DIFFERENT     
* ---OPEN FILES
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     
MDOIT = .F.
MFORSURE = .F.
DO CASE
CASE B->TOT_LBS <> STOT_LBS .OR. B->TOT_PURCH + B->BILL_ADJ <> STOT_PURCH .OR. B->TOT_SELL <> STOT_SELL ;
   .OR. B->TOT_NET <> STOT_NET .OR. MFRT1 <> SFRT_AMT1  .OR. MFRT_AMT2 <> SFRT_AMT2
   MDOIT = .T.
CASE MFRT_AMT3 <> SFRT_AMT3 .OR. B->COMM_AMT <> SCOMM_AMT .OR. B->COMM_AMT2 <> SCOMM_AMT2 ;
   .OR. B->SALE_COMM <> SSALE_COMM .OR. B->SALE2_AMT <> SSALE2_AMT .OR. B->COMM_AMT3 <> SCOMM_AMT3
   MDOIT = .T.
CASE B->SALE3_AMT <> SSALE3_AMT
   MDOIT = .T.
CASE B->CUS_PALL <> SCUS_PALL .OR. B->FRT_PALL <> SFRT_PALL .OR. B->SUP_PALL <> SSUP_PALL
   MDOIT = .T.
   **IF CHANGING CUSTOMER, SUPPLIER, FREIGHT, SALESMAN, THIRD PARTY, OR
   ** INTRACOMPANY SALESPERSON,  FOR SURE NEED TO BACK OFF
   ** ORIGINAL .AND. PUT ON WITH NEW INFORMATION
CASE MRSUPCODE <> SRSUPCODE .OR. MBBUYCODE <> SBBUYCODE .OR. MFRT_CODE1 <> SFRT_CODE1  .OR. MFRT_CODE2 <> SFRT_CODE2;
   .OR. MCOM_CODE <> SCOM_CODE .OR. MCOM_CODE2 <> SCOM_CODE2 .OR. MSAL_CODE2 <> SSAL_CODE2 .OR. MSALESMAN <> SSALESMAN .OR. MFRT_CODE3 <> SFRT_CODE3
   MDOIT = .T.
   MFORSURE = .T.
CASE MCOM_CODE3 <> SCOM_CODE3 .OR. MSAL_CODE3 <> SSAL_CODE3
   MDOIT = .T.
   MFORSURE = .T.
CASE SMISCAMT1 <> MMISCAMT1 .OR. SMISCAMT2 <> MMISCAMT2 .OR. SMISCAMT3 <> MMISCAMT3
   MDOIT = .T.
ENDCASE
IF MDOIT
   SELECT E
   SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + ' C1'
   IF EOF() .OR. MFORSURE .OR. POST_FLG <> ' '
      DO FILELOCK
      APPEND BLANK
      REPLACE salesman   WITH Ssalesman  
      REPLACE po_nbr     WITH B->po_nbr    
      REPLACE po_suffix  WITH B->po_suffix 
      REPLACE RSUPCODE   WITH SRSUPCODE
      REPLACE SUP_CODE   WITH B->SUP_CODE
      REPLACE buy_code   WITH B->buy_code  
      REPLACE bbuycode   WITH SBBUYCODE  
      REPLACE ship_date  WITH B->ship_date 
      REPLACE tot_lbs    WITH (-1) * Stot_lbs   
      REPLACE tot_sell   WITH (-1) * Stot_sell  
      REPLACE TOT_PURCH  WITH (-1) * STOT_PURCH
      REPLACE TOT_NET    WITH (-1) * STOT_NET
      REPLACE SALE2_NET  WITH (-1) * SSALE2_NET
      REPLACE SALE3_NET  WITH (-1) * SSALE3_NET
      REPLACE GROSS      WITH (-1) * SGROSS
      REPLACE FRT_CODE1  WITH SFRT_CODE1
      REPLACE FRT_AMT1   WITH (-1) * SFRT_AMT1
      IF B->FRT2_FLG <> ' '
         REPLACE FRT_AMT2  WITH (-1) * SFRT_AMT2
         REPLACE FRT_CODE2 WITH SFRT_CODE2
      ENDIF
      IF B->FRT3_FLG <> ' '
         REPLACE FRT_AMT3  WITH (-1) * SFRT_AMT3
         REPLACE FRT_CODE3 WITH SFRT_CODE3
      ENDIF
      REPLACE COM_CODE   WITH SCOM_CODE
      REPLACE COMM_AMT   WITH (-1) * SCOMM_AMT  
      REPLACE COM_CODE2  WITH SCOM_CODE2
      REPLACE COM_CODE3  WITH SCOM_CODE3
      REPLACE COMM_AMT2  WITH (-1) * SCOMM_AMT2
      REPLACE COMM_AMT3  WITH (-1) * SCOMM_AMT3
      REPLACE SALE_COMM  WITH (-1) * SSALE_COMM 
      REPLACE SAL_CODE2  WITH SSAL_CODE2 
      REPLACE SALE2_AMT  WITH (-1) * SSALE2_AMT 
      REPLACE SAL_CODE3  WITH SSAL_CODE3 
      REPLACE SALE3_AMT  WITH (-1) * SSALE3_AMT 
      REPLACE INV_NBR    WITH B->INV_NBR   
      REPLACE TRAN_DATE  WITH DATE()       
      REPLACE JRNL_DATE  WITH B->SHIP_DATE
      REPLACE BROK_NAME  WITH MBROK_NAME 
      REPLACE BROKERAGE  WITH MBROKERAGE 
      REPLACE SHORT_FLG  WITH 'Y'
      REPLACE FRT_PALL   WITH (-1) * SFRT_PALL
      REPLACE SUP_PALL   WITH (-1) * SSUP_PALL
      REPLACE CUS_PALL   WITH (-1) * SCUS_PALL
      
      STORE SUBSTR(DTOC(B->SHIP_DATE),7) TO MYR
      STORE SUBSTR(DTOC(B->SHIP_DATE),1,2) TO MMO
      STORE MYR+MMO TO MDATE
      STORE VAL(MDATE) TO MDATE  
      
      STORE MTRAN_YR+MTRAN_MO TO MTRAN_DATE
      STORE VAL(MTRAN_DATE) TO MTRAN_DATE
      
      IF MDATE > MTRAN_DATE
         REPLACE TRAN_MO WITH SUBSTR(STR(MONTH(B->SHIP_DATE) + 100,3),2)
         REPLACE TRAN_YR WITH SUBSTR(DTOC(B->SHIP_DATE),7)
      ELSE
         REPLACE TRAN_MO WITH MTRAN_MO
         REPLACE TRAN_YR WITH MTRAN_YR
      ENDIF
      REPLACE MISC_AMT   WITH (-1) * (SMISCAMT1 + SMISCAMT2 + SMISCAMT3)
      REPLACE INV_COR WITH 'C'
      REPLACE SEQ WITH '1'
      FLUSH
      UNLOCK
   ELSE
      IF .NOT. EOF()
         DO RECLOCK
         REPLACE TRAN_DATE WITH DATE()
         UNLOCK
      ENDIF
   ENDIF
   
   SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + ' C2'
   IF EOF() .OR. POST_FLG <> ' ' .OR. MFORSURE
      DO FILELOCK
      APPEND BLANK
   ENDIF
   DO FILELOCK
   **** PUT IN THE NEW ENTRY
   REPLACE salesman   WITH B->salesman  
   REPLACE po_nbr     WITH B->po_nbr    
   REPLACE po_suffix  WITH B->po_suffix 
   REPLACE RSUPCODE   WITH B->RSUPCODE
   REPLACE SUP_CODE   WITH B->SUP_CODE
   REPLACE buy_code   WITH B->buy_code  
   REPLACE bbuycode   WITH B->bbuycode  
   REPLACE ship_date  WITH B->ship_date 
   REPLACE tot_lbs    WITH Mtot_lbs   
   REPLACE tot_sell   WITH Mtot_sell  
   REPLACE TOT_PURCH  WITH MTOT_PURCH + B->BILL_ADJ
   REPLACE TOT_NET    WITH MTOT_NET
   REPLACE SALE2_NET  WITH MSALE2_NET
   REPLACE SALE3_NET  WITH MSALE3_NET
   REPLACE GROSS      WITH MGROSS
   REPLACE FRT_CODE1  WITH MFRT_CODE1
   REPLACE FRT_AMT1   WITH (MFRT_AMT1 + MFRT1_ADJ1 + MFRT1_ADJ2)
   IF B->FRT2_FLG <> ' '
      REPLACE FRT_AMT2  WITH MFRT_AMT2
      REPLACE FRT_CODE2 WITH MFRT_CODE2
   ELSE
      IF MPROG_CODE = 2
         REPLACE FRT_CODE2 WITH SPACE(4)
         REPLACE FRT_AMT2  WITH 0
      ENDIF
   ENDIF
   IF B->FRT3_FLG <> ' '
      REPLACE FRT_AMT3  WITH MFRT_AMT3
      REPLACE FRT_CODE3 WITH MFRT_CODE3
   ELSE
      IF MPROG_CODE = 2
         REPLACE FRT_AMT3  WITH 0
         REPLACE FRT_CODE3 WITH SPACE(4)
      ENDIF
   ENDIF
   REPLACE COM_CODE   WITH MCOM_CODE
   REPLACE COMM_AMT   WITH MCOMM_AMT  
   REPLACE COM_CODE2  WITH MCOM_CODE2
   REPLACE COMM_AMT2  WITH MCOMM_AMT2  
   REPLACE COM_CODE3  WITH MCOM_CODE3
   REPLACE COMM_AMT3  WITH MCOMM_AMT3  
   REPLACE SALE_COMM  WITH MSALE_COMM 
   REPLACE SAL_CODE2  WITH MSAL_CODE2 
   REPLACE SALE2_AMT  WITH MSALE2_AMT 
   REPLACE SAL_CODE3  WITH MSAL_CODE3 
   REPLACE SALE3_AMT  WITH MSALE3_AMT 
   REPLACE INV_NBR    WITH B->INV_NBR   
   REPLACE TRAN_DATE  WITH DATE()       
   REPLACE BROK_NAME  WITH MBROK_NAME 
   REPLACE BROKERAGE  WITH MBROKERAGE 
   REPLACE SHORT_FLG  WITH 'Y'
   REPLACE JRNL_DATE  WITH B->SHIP_DATE
   REPLACE FRT_PALL   WITH MFRT_PALL
   REPLACE CUS_PALL   WITH MCUS_PALL
   REPLACE SUP_PALL   WITH MSUP_PALL
   STORE SUBSTR(DTOC(B->SHIP_DATE),7) TO MYR
   STORE SUBSTR(DTOC(B->SHIP_DATE),1,2) TO MMO
   STORE MYR+MMO TO MDATE
   STORE VAL(MDATE) TO MDATE  
   
   STORE MTRAN_YR+MTRAN_MO TO MTRAN_DATE
   STORE VAL(MTRAN_DATE) TO MTRAN_DATE
   
   IF MDATE > MTRAN_DATE
      REPLACE TRAN_MO WITH SUBSTR(STR(MONTH(B->SHIP_DATE) + 100,3),2)
      REPLACE TRAN_YR WITH SUBSTR(DTOC(B->SHIP_DATE),7)
   ELSE
      REPLACE TRAN_MO WITH MTRAN_MO
      REPLACE TRAN_YR WITH MTRAN_YR
   ENDIF
   REPLACE MISC_AMT   WITH MMISCAMT1 + MMISCAMT2 + MMISCAMT3 
   REPLACE INV_COR WITH 'C'
   REPLACE SEQ WITH '2'
   FLUSH
   UNLOCK
   SELECT E
   USE
ENDIF
SELECT B
DO CASE
CASE B->TOT_LBS <> STOT_LBS .OR. B->TOT_PURCH + B->BILL_ADJ <> STOT_PURCH ;
   .OR. B->SUP_PALL <> SSUP_PALL .OR. MRSUPCODE <> SRSUPCODE
   IF SUP_PD = ' ' .AND. SUP_REC <> ' ' 
      IF .NOT. MDOSHORT
         SELECT A
         DO FOX_USE WITH "SUP_INV INDEX SUP_INV", .F.
         DO WHILE .NOT. EOF()
            IF SALESMAN = B->SALESMAN .AND. PO_NBR = B->PO_NBR .AND. PO_SUFFIX = B->PO_SUFFIX
               DO FILELOCK
               DELETE
               FLUSH
               UNLOCK
               GOTO BOTTOM 
            ENDIF   
            SKIP
         ENDDO
         USE
         SELECT B
         DO FILELOCK
         REPLACE SUP_REC WITH ' '
         FLUSH
         UNLOCK
      ENDIF
   ENDIF
CASE B->TOT_SELL <> STOT_SELL .OR. B->CUS_PALL <> SCUS_PALL ;
   .OR. MBBUYCODE <> SBBUYCODE
CASE MFRT1 <> SFRT_AMT1 .OR. B->FRT_PALL <> SFRT_PALL .OR. MFRT_CODE1 <> SFRT_CODE1
   IF FRT_PD = ' ' .AND. FRT_REC <> ' ' 
      SELECT A
      DO FOX_USE WITH "FRT_INV INDEX FRT_INV", .F.
      DO WHILE .NOT. EOF()
         IF SALESMAN = B->SALESMAN .AND. PO_NBR = B->PO_NBR .AND. PO_SUFFIX = B->PO_SUFFIX
            DO FILELOCK
            DELETE
            FLUSH
            UNLOCK
            GOTO BOTTOM 
         ENDIF   
         SKIP
      ENDDO
      USE
      SELECT B
      DO FILELOCK
      REPLACE FRT_REC WITH ' '
      FLUSH
      UNLOCK
   ENDIF
ENDCASE
SELECT B
RETURN
* EOF: JRN_DIFF.PRG
*Formatted by: ToolBox Ver. 1.2  on 4/30/93 at 8:28 AM.
