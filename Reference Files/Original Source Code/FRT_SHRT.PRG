***********
* Program.: FRT_EDIT.PRG
* Author..: Grace Keller
* Date....: 10/20/87
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Version.: FOXPRO
* Notes...: FREIGHT/COMMISSION/TOTALS EDIT
*
* ---OPEN FILES
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     
RELEASE MSAY_PO
**RON MONTGOMERY CHANGES
DO 8910_TOT
*** save off the header totals
MTOT_QTY = 0
DO HEAD_TOT
SELECT A
DO FOX_USE WITH "&MMASTDBF.SALESMAN INDEX &MMASTDBF.SAL_CODE", .F.
IF MSALESMAN <> SPACE(2)
   SEEK MSALESMAN
   IF .NOT. EOF()
      STORE SUBSTR(NAME,1,28) TO MSAL_NAME
      STORE SALE_PERC TO MSALE_PERC
      IF DTOC(EFF_DT2) <> '  /  /  '
         IF B->SHIP_DATE >= EFF_DT2
            MSALE_PERC = SALE_PER2
         ENDIF
      ENDIF
      IF DTOC(EFF_DT3) <> '  /  /  '
         IF B->SHIP_DATE >= EFF_DT3
            MSALE_PERC = SALE_PER3
         ENDIF
      ENDIF
   ELSE
      STORE 'SALESPERSON NOT ON FILE' TO MSAL_NAME
      STORE 0 TO MSALE_PERC
   ENDIF
ELSE
   STORE SPACE(28) TO MSAL_NAME
   STORE 0 TO MSALE_PERC
ENDIF
SELECT B
STORE CUS_PALL TO MCUS_PALL
STORE SUP_PALL TO MSUP_PALL
IF MISC_FLG <> ' '
   SELECT E
   DO FOX_USE WITH "MISC_CHG INDEX MISC_CHG", .F.
   SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX
   IF .NOT. EOF()
      STORE MISCREAS1 TO MMISCREAS1
      STORE MISCREAS2 TO MMISCREAS2
      STORE MISCREAS3 TO MMISCREAS3
      STORE MISCAMT1 TO MMISCAMT1, SMISCAMT1
      STORE MISCAMT2 TO MMISCAMT2, SMISCAMT2
      STORE MISCAMT3 TO MMISCAMT3, SMISCAMT3
      STORE MISCSPLT1 TO MMISCSPLT1
      STORE MISCSPLT2 TO MMISCSPLT2
      STORE MISCSPLT3 TO MMISCSPLT3
   ELSE
      STORE SPACE(10) TO MMISCREAS1, MMISCREAS2, MMISCREAS3
      STORE SPACE(1) TO MMISCSPLT1, MMISCSPLT2, MMISCSPLT3
      STORE 0 TO MMISCAMT1, MMISCAMT2, MMISCAMT3
      STORE 0 TO SMISCAMT1, SMISCAMT2, SMISCAMT3
   ENDIF
   
ELSE    
   STORE SPACE(10) TO MMISCREAS1, MMISCREAS2, MMISCREAS3
   STORE SPACE(1) TO MMISCSPLT1, MMISCSPLT2, MMISCSPLT3
   STORE 0 TO MMISCAMT1, MMISCAMT2, MMISCAMT3
   STORE 0 TO SMISCAMT1, SMISCAMT2, SMISCAMT3
ENDIF
**** MAKE SURE ALL THE REASON CODES ARE ON FILE
**** SEARCH FOR AN M
IF MMISCAMT1 <> 0
   IF MMISCSPLT1 = 'X'
      MCOMSPLT1 = ROUND((MSALE_PERC * .01) * MMISCAMT1,2) 
      MNETSPLT1 = MMISCAMT1 - MCOMSPLT1
   ELSE 
      STORE 0 TO MCOMSPLT1
      STORE MMISCAMT1 TO MNETSPLT1
   ENDIF
ELSE
   STORE 0 TO MCOMSPLT1, MNETSPLT1
ENDIF

IF MMISCAMT2 <> 0
   IF MMISCSPLT2 = 'X'
      MCOMSPLT2 = ROUND((MSALE_PERC * .01) * MMISCAMT2,2) 
      MNETSPLT2 = MMISCAMT2 - MCOMSPLT2
   ELSE 
      STORE 0 TO MCOMSPLT2
      STORE MMISCAMT2 TO MNETSPLT2
   ENDIF
ELSE
   STORE 0 TO MCOMSPLT2, MNETSPLT2
ENDIF

IF MMISCAMT3 <> 0
   IF MMISCSPLT3 = 'X'
      MCOMSPLT3 = ROUND((MSALE_PERC * .01) * MMISCAMT3,2) 
      MNETSPLT3 = MMISCAMT3 - MCOMSPLT3
   ELSE 
      STORE 0 TO MCOMSPLT3
      STORE MMISCAMT3 TO MNETSPLT3
   ENDIF
ELSE
   STORE 0 TO MCOMSPLT3, MNETSPLT3
ENDIF
SELECT A
DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_CODE", .F.
IF MCOM_CODE <> SPACE(2)
   SEEK MCOM_CODE
   IF .NOT. EOF()
      STORE SUBSTR(NAME,1,25) TO MCOM_NAME
   ELSE  
      STORE '3RD PARTY COMM NOT ON FILE' TO MCOM_NAME
   ENDIF
ELSE
   STORE SPACE(25) TO MCOM_NAME
ENDIF
IF MCOM_CODE2 <> SPACE(2)
   SEEK MCOM_CODE2
   IF .NOT. EOF()
      STORE SUBSTR(NAME,1,25) TO MCOM_NAME2
   ELSE  
      STORE '3RD PARTY COMM NOT ON FILE' TO MCOM_NAME2
   ENDIF
ELSE
   STORE SPACE(25) TO MCOM_NAME2
ENDIF
IF MCOM_CODE3 <> SPACE(2)
   SEEK MCOM_CODE3
   IF .NOT. EOF()
      STORE SUBSTR(NAME,1,25) TO MCOM_NAME3
   ELSE  
      STORE '3RD PARTY COMM NOT ON FILE' TO MCOM_NAME3
   ENDIF
ELSE
   STORE SPACE(25) TO MCOM_NAME3
ENDIF

SELECT A
DO FOX_USE WITH "&MMASTDBF.SALESMAN INDEX &MMASTDBF.SAL_CODE", .F.

** RON MONTGOMERY CHANGES
IF MSAL_CODE2 <> SPACE(2)
   DO FOX_USE WITH "&MDBFLOC.COMPAYEE INDEX &MDBFLOC.COM_CODE", .F.
   SEEK MSAL_CODE2
   IF .NOT. EOF()
      STORE SUBSTR(NAME,1,26) TO MSAL_NAME2, MSV_NAME2
      MSALE2_PER = 0

      *STORE SALE_PERC TO MSALE2_PER
      *IF DTOC(EFF_DT2) <> '  /  /  '
      *   IF B->SHIP_DATE >= EFF_DT2
      *      MSALE2_PER = SALE_PER2
      *   ENDIF
      *ENDIF
      *IF DTOC(EFF_DT3) <> '  /  /  '
      *   IF B->SHIP_DATE >= EFF_DT3
      *      MSALE2_PER = SALE_PER3
      *   ENDIF
      *ENDIF
      
   ELSE
      STORE '3RD PRTYCONT NOTONFILE' TO MSAL_NAME2, MSV_NAME2
      STORE 0 TO MSALE2_PER
   ENDIF
ELSE
   STORE SPACE(26) TO MSAL_NAME2, MSV_NAME2
   STORE 0 TO MSALE2_PER
ENDIF

DO FOX_USE WITH "&MMASTDBF.SALESMAN INDEX &MMASTDBF.SAL_CODE", .F.
IF MSAL_CODE3 <> SPACE(2)
   SEEK MSAL_CODE3
   IF .NOT. EOF()
      STORE SUBSTR(NAME,1,25) TO MSAL_NAME3, MSV_NAME3
      STORE SALE_PERC TO MSALE3_PER
      IF DTOC(EFF_DT2) <> '  /  /  '
         IF B->SHIP_DATE >= EFF_DT2
            MSALE3_PER = SALE_PER2
         ENDIF
      ENDIF
      IF DTOC(EFF_DT3) <> '  /  /  '
         IF B->SHIP_DATE >= EFF_DT3
            MSALE3_PER = SALE_PER3
         ENDIF
      ENDIF
   ELSE
      STORE 'INTRA COMP NOT ON FILE' TO MSAL_NAME3, MSV_NAME3
      STORE 0 TO MSALE3_PER
   ENDIF
ELSE
   STORE SPACE(25) TO MSAL_NAME3, MSV_NAME3
   STORE 0 TO MSALE3_PER
ENDIF


MTITLE = ' - PURCHASE ORDER - COMMISSION/TOTALS'    
SET PROC TO NEW_PROC 

MGROSS =  (MTOT_SELL+MCUS_PALL) - (MTOT_PURCH+MSUP_PALL)

IF B->FRT2_FLG = 'Y'
   MNET = MGROSS - (MFRT_AMT1  + MFRT1_ADJ1 + MFRT1_ADJ2+ MFRT_PALL) - MFRT_AMT2 - MFRT_AMT3
ELSE
   MNET = MGROSS - (MFRT_AMT1  + MFRT1_ADJ1 + MFRT1_ADJ2+ MFRT_PALL)
ENDIF

**STORE 0 TO MAMOUNT1, MAMOUNT2, MAMOUNT3, MAMOUNT4, MAMOUNT5, MAMOUNT6
STORE '  ' TO MWO
IF B->SUP_REAS1 = 'WRIT'
   *STORE B->SUP_AMT1 TO MAMOUNT1
   STORE 'WO' TO MWO
ENDIF
IF B->SUP_REAS2 = 'WRIT'
   *STORE B->SUP_AMT2 TO MAMOUNT2
   STORE 'WO' TO MWO
ENDIF
IF B->FRT1_RS1 = 'WRIT'
   *STORE B->FRT1_AMT1 TO MAMOUNT3
   STORE 'WO' TO MWO
ENDIF
IF B->FRT1_RS2 = 'WRIT'
   *STORE B->FRT1_AMT2 TO MAMOUNT4
   STORE 'WO' TO MWO
ENDIF
IF B->CUS_REAS1 = 'WRIT'
   *STORE B->CUS_AMT1 TO MAMOUNT5
   STORE 'WO' TO MWO
ENDIF
IF B->CUS_REAS2 = 'WRIT'
   *STORE B->CUS_AMT2 TO MAMOUNT6
   STORE 'WO' TO MWO
ENDIF

**MNET = MNET + MAMOUNT1 + MAMOUNT2 + MAMOUNT3 + MAMOUNT4 - (MAMOUNT5 + MAMOUNT6)

MCOMM_AMT = 0
IF MCOM_CODE <> SPACE(2)
   IF MCOMM_ENT <> 0
      MCOMM_AMT = MCOMM_ENT
   ELSE
      IF MCOMM_CENT <> 0
         MCOMM_AMT = ROUND(MTOT_LBS * MCOMM_CENT,2)
      ELSE
         IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MSALESMAN = '11'
            MCOMM_AMT = B->COMM_AMT
         ENDIF
      ENDIF
   ENDIF
   MNET = MNET - MCOMM_AMT
ENDIF

MCOMM_AMT2 = 0
IF MCOM_CODE2 <> SPACE(2)
   IF MCOMM_ENT2 <> 0
      MCOMM_AMT2 = MCOMM_ENT2
   ELSE
      IF MCOMM_CEN2 <> 0
         MCOMM_AMT2 = ROUND(MTOT_LBS * MCOMM_CEN2,2)
      ELSE
         MCOMM_AMT2 = B->COMM_AMT2
      ENDIF
   ENDIF
   MNET = MNET - MCOMM_AMT2
ENDIF

MCOMM_AMT3 = 0
IF MCOM_CODE3 <> SPACE(2)
   IF MCOMM_ENT3 <> 0
      MCOMM_AMT3 = MCOMM_ENT3
   ELSE
      IF MCOMM_CEN3 <> 0
         MCOMM_AMT3 = ROUND(MTOT_LBS * MCOMM_CEN3,2)
      ELSE
         MCOMM_AMT3 = B->COMM_AMT3
      ENDIF
   ENDIF
   MNET = MNET - MCOMM_AMT3
ENDIF

DO CASE
CASE MZERO_COMM = 'H'
   STORE 0 TO MSALE2_AMT, MSALE3_AMT, MSALE2_NET, MSALE3_NET
   STORE .F. TO MCALC2, MCALC3
   IF MSAL_CODE2 = SPACE(2)
      *** NO NEED TO CALCULATE
      MCALC2 = .T.
   ENDIF
   
   **RON MONTGOMERY CHANGES - NO NEED TO CALCULATE SALESPERSON 2
   MCALC2 = .T.
   
   IF MSAL_CODE3 = SPACE(2)
      *** NO NEED TO CALCULATE
      MCALC3 = .T.
   ENDIF
   
   *** RON MONTGOMERY CHANGES
   IF MSAL_CODE2 <> SPACE(2)
      MSALE2_CEN = .10
      STORE 0 TO MSALE2_PER
      MSALE2_AMT = ROUND(MSALE2_CEN * B->CASE_8910,2)
      MSALE2_PER = 0
      MSALE2_ENT = 0
      MNET = MNET - MSALE2_AMT
      MCALC2 = .T.
      
      *DO CASE
      *CASE MSALE2_CEN <> 0
      *   MAMOUNT = ROUND(MSALE2_CEN * MTOT_LBS,2)
      *   IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
      *      MSALE2_AMT = MAMOUNT
      *   ELSE
      *      MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
      *      MSALE2_NET = MAMOUNT - MSALE2_AMT      
      *   ENDIF
      *   MNET = MNET - MAMOUNT
         @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
         @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
      *   MCALC2 = .T.
      *CASE MSALE2_ENT <> 0
      *   MSALE2_AMT = MSALE2_ENT
      *   MNET = MNET - (MSALE2_AMT + MSALE2_NET)
      *   MCALC2 = .T.
      *ENDCASE
   ENDIF
   
   IF MSAL_CODE3 <> SPACE(2)
      DO CASE
      CASE MSALE3_CEN <> 0
         MAMOUNT = ROUND(MSALE3_CEN * MTOT_LBS,2)
         IF MCOMPANY = 'AMERICHICKEN, INC' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
            MSALE3_AMT = MAMOUNT
         ELSE
            MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
            MSALE3_NET = MAMOUNT - MSALE3_AMT      
         ENDIF
         MNET = MNET - MAMOUNT
         @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
         @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
         MCALC3 = .T.
      CASE MSALE3_ENT <> 0
         MSALE3_AMT = MSALE3_ENT
         MNET = MNET - (MSALE3_AMT + MSALE3_NET)
         MCALC3 = .T.
      ENDCASE
   ENDIF
   
   DO CASE
   CASE MCALC2 .AND. MCALC3
      *** NO ACTION REQUIRED
      *** CALCULATED OR NO SALESPERSON ENTERED
   CASE MCALC2 .AND. .NOT. MCALC3
      *** CALCULATED 2 - BUT NOT 3
      *** SPLIT TWO - CALC SALESPERSON 3
      MAMOUNT = ROUND(MNET/2,2)
      MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
      MSALE3_NET = MAMOUNT - MSALE3_AMT      
      MNET = MNET - MAMOUNT
      @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
      @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
   CASE MCALC3 .AND. .NOT. MCALC2
      *** CALCULATED 3 BUT NOT 2
      *** SPLIT TWO - CALC SALESPERSON 2
      MAMOUNT = ROUND(MNET/2,2)
      MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
      MSALE2_NET = MAMOUNT - MSALE2_AMT      
      MNET = MNET - MAMOUNT
      @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
      @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
      
   OTHERWISE
      *** CALCULATED NO ONE BUT NEED TO CALCULATED 2 & 3
      *** SPLIT THREE WAYS - CALC SALESPERSON 2 & 3
      MAMOUNT = ROUND(MNET/2,3)
      
      MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
      MSALE2_NET = MAMOUNT - MSALE2_AMT      
      MNET = MNET - MAMOUNT
      @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
      @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
      
      MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
      MSALE3_NET = MAMOUNT - MSALE3_AMT      
      MNET = MNET - MAMOUNT
      @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
      @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
      
   ENDCASE
   
   
   MSALE_COMM = 0
   IF MZERO_COMM <> 'X'
      IF MSALE_ENT <> 0
         MSALE_COMM = MSALE_ENT
      ELSE
         IF MSALE_CENT <> 0
            MSALE_COMM = ROUND(MTOT_LBS * MSALE_CENT,2)
         ELSE
            MSALE_COMM = ROUND((MSALE_PERC * .01) * MNET,2)
         ENDIF
      ENDIF
   ENDIF
   
OTHERWISE
   
   MSALE2_AMT = 0
   MSALE3_AMT = 0
   MSALE2_NET = 0
   MSALE3_NET = 0
   
   IF MSAL_CODE2 <> SPACE(2)
      *** RON MONTGOMERY CHANGES
      MSALE2_CEN = .10
      STORE 0 TO MSALE2_PER
      MSALE2_AMT = ROUND(MSALE2_CEN * B->CASE_8910,2)
      MSALE2_PER = 0
      MSALE2_ENT = 0
      MNET = MNET - MSALE2_AMT
      MCALC2 = .T.
      *IF MSALE2_CEN <> 0
      *   MSALE2_NET = 0
      *   MAMOUNT = ROUND(MSALE2_CEN * MTOT_LBS,2)
      *   **IF MSAL_CODE2 = '11'
      *   IF MCOMPANY = 'AMERICHICKEN, INC.' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
      *      MSALE2_AMT = MAMOUNT
      *   ELSE
      *      MSALE2_AMT = ROUND((MSALE2_PER * .01) * MAMOUNT,2)
      *      MSALE2_NET = MAMOUNT - MSALE2_AMT      
      *   ENDIF
      *   MNET = MNET - MAMOUNT
         @ 4,71 SAY MSALE2_AMT PICTURE '99999.99'
         @ 5,71 SAY MSALE2_NET PICTURE '99999.99'
      *ELSE
      *   MSALE2_AMT = MSALE2_ENT
      *   MNET = MNET - (MSALE2_AMT + MSALE2_NET)
      *ENDIF
   ENDIF
   
   IF MSAL_CODE3 <> SPACE(2)
      IF MSALE3_CEN <> 0
         MSALE3_NET = 0
         MAMOUNT = ROUND(MSALE3_CEN * MTOT_LBS,2)
         IF MCOMPANY = 'AMERICHICKEN, INC.' .OR. MCOMPANY = 'MIDWEST FOOD -DIV 11'
            MSALE3_AMT = MAMOUNT
         ELSE
            MSALE3_AMT = ROUND((MSALE3_PERC * .01) * MAMOUNT,2)
            MSALE3_NET = MAMOUNT - MSALE3_AMT      
         ENDIF
         MNET = MNET - MAMOUNT
         @ 7,71 SAY MSALE3_AMT PICTURE '99999.99'
         @ 8,71 SAY MSALE3_NET PICTURE '99999.99'
      ELSE
         MSALE3_AMT = MSALE3_ENT
         MNET = MNET - (MSALE3_AMT + MSALE3_NET)
      ENDIF
   ENDIF
   
   MSALE_COMM = 0
   IF MZERO_COMM <> 'X'
      IF MSALE_ENT <> 0
         MSALE_COMM = MSALE_ENT
      ELSE
         IF MSALE_CENT <> 0
            MSALE_COMM = ROUND(MTOT_LBS * MSALE_CENT,2)
         ELSE
            MSALE_COMM = ROUND((MSALE_PERC * .01) * MNET,2)
         ENDIF
      ENDIF
   ENDIF
ENDCASE

MSALE_COMM = MSALE_COMM - MCOMSPLT1 - MCOMSPLT2 - MCOMSPLT3

MNET = MNET - MSALE_COMM

MNET = MNET - MMISCAMT1 - MMISCAMT2 - MMISCAMT3

DO SAYTOT1  
DO SAYTOT8
@ 12,57 SAY MCOMSPLT1 PICTURE '99999.99'
@ 12,68 SAY MNETSPLT1 PICTURE '99999.99'
@ 13,57 SAY MCOMSPLT2 PICTURE '99999.99'
@ 14,68 SAY MNETSPLT2 PICTURE '99999.99'
*@ 13,57 SAY MCOMSPLT3 PICTURE '99999.99'
*@ 13,68 SAY MNETSPLT3 PICTURE '99999.99'

DO SAYTOT9 
**IF MAMOUNT1 <> 0 .OR. MAMOUNT2 <> 0 .OR. MAMOUNT3 <> 0 .OR. MAMOUNT4 <> 0 .OR. MAMOUNT5 <> 0 .OR. MAMOUNT6 <> 0
IF MWO = 'WO'
   @ 22,70 SAY '(WO)'
ENDIF

STORE 1 TO MACTION
@ 24,0 SAY 'Action: ' + STR(MACTION,1)
@ 24,12 SAY '1.Finished With View'
@ 24,8 GET MACTION PICTURE '#' RANGE 1,1
READ
RELEASE MSALE_PERC, MCSV_NAME, MCSV_NAME2, MSV_NAME2, MSALE2_PER
SET PROC TO PO_PROC
STORE MNET TO MTOT_NET

***** CHECK OUT UPDATES FOR THE 3RD PARTY CONTRACTOR COMMISSION
IF B->SALE2_AMT <> MSALE2_AMT 
   STORE B->SALE2_AMT TO MOLD_AMT2
   STORE B->SAL_CODE2 TO MOLD_CODE2
   SELECT D
   DO FOX_USE WITH "COMTHD INDEX COMTHD, COMTDT, COMTPD", .F.
   *** LOOK FOR A NOT PAID INVOICE ENTRY
   SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + '4' + ' I'
   IF .NOT. EOF()
      DO RECLOCK
      REPLACE COM_CODE WITH MSAL_CODE2
      REPLACE AMOUNT WITH MSALE2_AMT
      UNLOCK
   ELSE
      *** LOOK FOR A NOT PAID CORRECTION ENTRY
      SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + '4' + ' C1'
      IF EOF()
         *** FIND THE LAST POSTED RECORD  TO MAKE A BACKOUT ENTRY
         SET ORDER TO 2
         SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + '4'
         DO WHILE .NOT. EOF() .AND. SALESMAN = MSALESMAN .AND. PO_NBR = MPO_NBR .AND. PO_SUFFIX = MPO_SUFFIX .AND. THD_SEQ = '2'
            STORE AMOUNT TO MOLD_AMT2
            STORE COM_CODE TO MOLD_CODE2
            SKIP
         ENDDO
         SET ORDER TO 1
         DO FILELOCK
         APPEND BLANK
         REPLACE SALESMAN WITH MSALESMAN
         REPLACE PO_NBR   WITH MPO_NBR
         REPLACE PO_SUFFIX WITH MPO_SUFFIX
         REPLACE THD_SEQ   WITH '4'
         REPLACE INV_NBR WITH B->INV_NBR
         REPLACE TRAN_DATE WITH DATE()
         REPLACE COR_FLG WITH 'C'
         REPLACE SEQ WITH '1'
         REPLACE COM_TYPE WITH 'T'
         REPLACE AMOUNT WITH (-1) * MOLD_AMT2
         REPLACE COM_CODE WITH MOLD_CODE2
      ENDIF
      SEEK MSALESMAN + MPO_NBR + MPO_SUFFIX + '4' + ' C2'
      IF EOF()
         DO FILELOCK
         APPEND BLANK
         REPLACE SALESMAN WITH MSALESMAN
         REPLACE PO_NBR   WITH MPO_NBR
         REPLACE PO_SUFFIX WITH MPO_SUFFIX
         REPLACE INV_NBR WITH B->INV_NBR
         REPLACE THD_SEQ WITH '4'
         REPLACE TRAN_DATE WITH DATE()
         REPLACE COR_FLG WITH 'C'
         REPLACE SEQ WITH '2'
         REPLACE COM_TYPE WITH 'T'
      ENDIF
      DO RECLOCK
      REPLACE COM_CODE WITH MSAL_CODE2
      REPLACE AMOUNT WITH MSALE2_AMT
      UNLOCK
   ENDIF
   SELECT D
   USE
ENDIF

SELECT B
DO REPLFRT

DO JRN_SAME
SELECT B

RETURN
* EOF: FRT_SHRT.PRG
*Formatted by: ToolBox Ver. 1.2  on 1/17/13 at 12:19 PM.
