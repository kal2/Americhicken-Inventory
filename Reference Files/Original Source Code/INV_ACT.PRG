************
* Program.: INV_ACT.PRG
* Author..: GRACE KELLER
* Date....: 10/01/2013
* Notice..: Copyright 1987, Solid Software, Inc., All Rights Reserved
* Notes...: PROGRAM FOR AMERICHICKEN INVENTORY  ACTIVITY REPORT       
*
* ---SET environment.
*  MULTI-USER RECORD/FILE LOCKING  +(M1)  FoxPro   Multi-User Code Insertion     


SET CENTURY ON
SET DELETED ON
SET TALK OFF
SET ECHO OFF
SET BELL OFF
SET MENU OFF
SET SAFETY OFF
SET ESCAPE ON
SET SCOREBOARD ON
SET STATUS OFF
SET EXCLUSIVE OFF
SET PATH TO \AMERIFOX   
SET DECIMALS TO 5
SET DEVICE TO SCREEN

CLIPPER = .F.
FOXBASE = .T.
MMONO   = .F.

* ---SET COLOR TO values.   (If changed, change other one farther down too)
IF .NOT. MMONO .AND. ISCOLOR()
   SET COLOR TO W+/B,W+/R
ELSE
   SET COLOR TO W/N,N/W
ENDIF

CLOSE ALL
SET DEVICE TO SCREEN

**** FINISHES THE READ WHEN DOING A PAGE DOWN

SELECT A
DO FOX_USE WITH "C:\COMPINFO\SCREEN", .F.
MSCRNSIZE = SCRNSIZE
USE

DO CASE
   *** TEST
CASE MSCRNSIZE = 'T'
   DEFINE WINDOW MWINDOW ;
      FROM 2,24 TO 40,252 ;
      FONT "LUCIDA CONSOLE", 18 ;
      COLOR W+/B, W+/R ;
      NONE
   *** Jeni
CASE MSCRNSIZE = 'J'
   **GOOD - FROM 2,10 TO 35,200  
   **BETTER-  FROM 2,5 TO 35,210
   DEFINE WINDOW MWINDOW ;
      FROM 2,5 TO 40,210 ;
      FONT "LUCIDA CONSOLE", 16 ;
      COLOR W+/B, W+/R ;
      NONE
   *** WIDESCREEN
CASE MSCRNSIZE = 'W'
   DEFINE WINDOW MWINDOW ;
      FROM 5,30 TO 57,272 ;
      FONT "LUCIDA CONSOLE", 20 ;
      COLOR W+/B, W+/R ;
      NONE
   *** LAPTOP
CASE MSCRNSIZE = 'L'
   DEFINE WINDOW MWINDOW ;
      FROM 2,23 TO 54,265 ;
      FONT "LUCIDA CONSOLE", 20 ;
      COLOR W+/B, W+/R ;
      NONE
   *** OTHER - SQUARE 
OTHERWISE
   DEFINE WINDOW MWINDOW ;
      FROM 5,4 TO 57,200 ;
      FONT "LUCIDA CONSOLE", 19 ;
      COLOR W+/B, W+/R ;
      NONE
ENDCASE

ACTIVATE WINDOW "MWINDOW"

* ---MAIN PROCESSING LOOP
CLEAR
SET COLOR TO W/W,W/W
SET COLOR TO W+/B+,W+/R+
CLEAR


**********************************************************************
**** THIS WORKS - BUT GIVES AN EXTRA EJECT AT THE END OF JOB**********
**** ORIGINALLY HAD THIS WAY FOR STODDARD COUNTY
**MPRINTIT = "PRINT.EXE /D:" + MPRINTER + " C:\COMPINFO\PRT_FILE.TXT"
**********************************************************************

****TESTING************
****MPRINTIT = "PRINT.EXE /D:\\GRACE64-HP\HP4250 \COMPINFO\PRTFILE.TXT"
****MPRINTIT = "PRINT.EXE /D:\\GINGER-PC\HP940C \REPORTS\PRTFILE.TXT"
*** END OF TESTING*****
************************************************************************

* ---Initialize global variables.
SELECT A
DO FOX_USE WITH "COMPANY", .F.
MCOMPANY = TRIM(COMPANY)
MMASTDBF = TRIM(MASTDBF)
MDBFLOC = TRIM(DBFLOC)
USE

SELECT A
DO FOX_USE WITH "&MMASTDBF.CONTROL", .F.
MPROGRAM = TRIM(PROGRAM)
MPROG_CODE = PROG_CODE
USE

IF FILE("C:\COMPINFO\PRINTERS.DBF")
   SELECT A
   DO FOX_USE WITH "C:\COMPINFO\PRINTERS", .F.
   MPRINTER  = TRIM(PRINTER1)
   MPRINTER2 = TRIM(PRINTER2)
   MPRINTER3 = TRIM(PRINTER3)
   USE
ELSE
   MPRINTER  = 'DONOTPRINT'
   MPRINTER2 = 'DONOTPRINT'
   MPRINTER3 = 'DONOTPRINT'
ENDIF  

MPRINTIT  = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER
MPRINTIT2 = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER2
MPRINTIT3 = 'COPY C:\COMPINFO\PRT_FILE.TXT ' + MPRINTER3


**********************************************************************
**** THIS WORKS - BUT GIVES AN EXTRA EJECT AT THE END OF JOB**********
**** ORIGINALLY HAD THIS WAY FOR STODDARD COUNTY
**MPRINTIT = "PRINT.EXE /D:" + MPRINTER + " C:\COMPINFO\PRT_FILE.TXT"
**********************************************************************

****TESTING************
****MPRINTIT = "PRINT.EXE /D:\\GRACE64-HP\HP4250 \COMPINFO\PRTFILE.TXT"
****MPRINTIT = "PRINT.EXE /D:\\GINGER-PC\HP940C \REPORTS\PRTFILE.TXT"
*** END OF TESTING*****
************************************************************************

STORE 'BROKER SYSTEM' TO MPROGRAM

STORE .T. TO MONO

MPASSWORD = 'ADM99'
MUSER = 'SUPERVISOR'
MSECURITY = .T.

ON KEY LABEL PGUP CLEAR READ
ON KEY LABEL PGDN CLEAR READ


CLEAR
@ 00,00 SAY MCOMPANY
@ 01,68 SAY DATE()
@ 01,00 SAY MPROGRAM + ' - INVENTORY ACTIVITY SUMMARY/DETAIL'
@ 2,0 to 24,79

@ 4,1 CLEAR TO 22,78
@ 24,0 CLEAR
MHP_OPT = 'N'

STORE 'ALL ' TO MCHOICE
@ 08,1 say 'Select Report Option'
@ 10,1 SAY 'All (ALL) -or- Only Products Shipped Over Stocked Inventory (OVER):'
@ 10,71 GET MCHOICE PICTURE '@!'
@ 14,3 SAY 'Select Not-Holiday (Not-50)  Product (N) -or- Holiday Product (H): '
@ 15,3 SAY '                                         -or- BOTH (Reg & 50) (B): ' GET MHP_OPT PICTURE '@!' VALID(MHP_OPT = 'N' .OR. MHP_OPT = 'H' .OR. MHP_OPT = 'B')

READ

@ 16,2 SAY 'CREATING FILES... PLEASE WAIT....'

SELECT B
USE INVNTOT EXCLUSIVE
DELETE ALL
PACK
INDEX ON FREEZ_LOC + PROD_DESC TO INVNTOT
USE INVNTOT INDEX INVNTOT EXCLUSIVE

SELECT A
DO FOX_USE WITH "INVEN", .F.
IF MCHOICE = 'OVER'
   COPY TO INVNEXCL FOR SOLD_FLG = ' ' .AND. UPPER(NOTE) <> 'HOLD QA' .AND. UPPER(NOTE) <> 'HOLD QP' .AND. LOT_NBR <> 'P'
ELSE
   COPY TO INVNEXCL FOR SOLD_FLG = ' ' .AND. UPPER(NOTE) <> 'HOLD QA' .AND. UPPER(NOTE) <> 'HOLD QP'
ENDIF

USE INVNEXCL EXCLUSIVE
REPLACE ALL NOTE WITH SPACE(72) FOR NOTE = 'HOLD QM'

INDEX ON FREEZ_LOC + PROD_DESC TO INVNEXCL
USE INVNEXCL INDEX INVNEXCL EXCLUSIVE

DO WHILE .NOT. EOF()
   store freez_loc to mfreez_loc
   store prod_desc to mprod_desc
   mcase_left = 0
   mlbs_left = 0
   
   do while .not. eof() .and. freez_loc = mfreez_loc .and. prod_desc = mprod_desc
      mcase_left = mcase_left + case_left
      mlbs_left = mlbs_left + lbs_left
      skip
   enddo
   
   SELECT B
   APPEND BLANK
   REPLACE FREEZ_LOC WITH MFREEZ_LOC
   REPLACE PROD_DESC WITH MPROD_DESC
   REPLACE ACT_DATE  WITH DATE() - 31
   REPLACE CASE_LEFT WITH MCASE_LEFT
   REPLACE LBS_LEFT  WITH MLBS_LEFT
   SELECT A
   
ENDDO

CLOSE DATA

SELECT B
DO FOX_USE WITH "HINV_DTL INDEX HDTL_LOT", .F.

SELECT A
DO FOX_USE WITH "INVEN INDEX INVNLOC", .F.

SELECT C
DO FOX_USE WITH "HINVEN INDEX HINVNLOC", .F.

SELECT B
DO WHILE .NOT. EOF()
   SELECT C
   SEEK B->FREEZ_LOC + B->LOT_NBR
   IF .NOT. EOF() .AND. NOTE = 'HOLD QP'
      SELECT B
      SKIP
      LOOP
   ENDIF
   IF EOF()
      SELECT A
      SEEK B->FREEZ_LOC + B->LOT_NBR
      IF .NOT. EOF() .AND. NOTE = 'HOLD QP'
         SELECT B
         SKIP
         LOOP
      ENDIF
      IF .NOT. EOF()
         SELECT B
         REPLACE NOTE WITH SUBSTR(A->NOTE,1,7)
         REPLACE PROD_DESC WITH A->PROD_DESC
      ENDIF
   ELSE
      SELECT B
      REPLACE NOTE WITH SUBSTR(C->NOTE,1,7)
      REPLACE PROD_DESC WITH A->PROD_DESC
   ENDIF
   SELECT B
   SKIP
ENDDO
CLOSE DATA

*********************
*** ADD THE "QP" PRODUCT PENDING SHIPS INTO THE BEGIN CASE LEFT
*********************
MDATE = DATE() - 30
MDO_QP = .F.
IF MDO_QP
   SELECT A
   USE INVNTOT EXCLUSIVE
   INDEX ON FREEZ_LOC + PROD_DESC TO INVNTOT
   USE INVNTOT INDEX INVNTOT EXCLUSIVE
   
   
   SELECT B
   USE HINV_DTL
   IF MCHOICE = 'OVER'
      SET FILTER TO ACT_CODE = 'S' .AND. ACT_DATE > MDATE  .AND. LOT_NBR <> 'P' .AND. NOTE = 'HOLD QP'
   ELSE
      SET FILTER TO ACT_CODE = 'S' .AND. ACT_DATE > MDATE .AND. NOTE = 'HOLD QP' 
   ENDIF
   
   GOTO TOP
   
   DO WHILE .NOT. EOF()
      SELECT A
      SEEK SUBSTR(B->FREEZ_LOC,1,30) + SUBSTR(B->PROD_DESC,1,6)
      IF EOF()
         APPEND BLANK
         REPLACE FREEZ_LOC WITH B->FREEZ_LOC
         REPLACE PROD_DESC WITH B->PROD_DESC
         REPLACE ACT_DATE  WITH DATE() - 31
      ENDIF
      REPLACE CASE_LEFT WITH CASE_LEFT + (-1*B->QTY)
      REPLACE LBS_LEFT  WITH LBS_LEFT  + (-1*B->LBS)
      SELECT B
      SKIP
   ENDDO
   CLOSE DATA
ENDIF

SELECT E
DO FOX_USE WITH "INVEN INDEX INVNLOC", .F.

SELECT D
DO FOX_USE WITH "HINVEN INDEX HINVNLOC", .F.

SELECT C
DO FOX_USE WITH "PO_DTL INDEX PO_DTL", .F.

SELECT A
USE INVNTOT EXCLUSIVE
INDEX ON FREEZ_LOC + SUBSTR(DTOC(ACT_DATE),7,4) + SUBSTR(DTOC(ACT_DATE),1,5) + PROD_DESC TO INVNTOT
USE INVNTOT INDEX INVNTOT EXCLUSIVE

SELECT B
USE HINV_DTL

IF MCHOICE = 'OVER'
   SET FILTER TO ACT_DATE > MDATE  .AND. LOT_NBR <> 'P' .AND. NOTE <> 'HOLD QA'  .AND. NOTE <> 'HOLD QP'
ELSE
   SET FILTER TO ACT_DATE > MDATE .AND. NOTE <> 'HOLD QA' .AND. NOTE <> 'HOLD QP'
ENDIF

GOTO TOP

DO WHILE .NOT. EOF()
   IF QTY = 0 .AND. LBS = 0
      SKIP
      LOOP
   ENDIF
   ** HOLDING INVENTORY
   SELECT D
   SEEK B->FREEZ_LOC + B->LOT_NBR
   IF EOF()
      ** RELEASED INVENTORY
      SELECT E
      SEEK B->FREEZ_LOC + B->LOT_NBR
      IF EOF()
         SELECT B
         SKIP
         LOOP
      ENDIF
   ENDIF

   STORE NOTE TO MNOTE
   STORE PROD_DESC TO MPROD_DESC

   IF MNOTE = 'HOLD QP'
      SELECT B
      SKIP
      LOOP
   ENDIF

   SELECT A
   APPEND BLANK
   REPLACE FREEZ_LOC WITH B->FREEZ_LOC
   REPLACE ACT_DATE WITH B->ACT_DATE
   
   SELECT C
   SEEK B->SALESMAN + B->PO_NBR + B->PO_SUFFIX + B->ITEM_NBR
   IF .NOT. EOF()
      SELECT A
      REPLACE PROD_DESC WITH C->PROD_DESC
   ELSE
      SELECT A
      REPLACE PROD_DESC WITH B->PROD_DESC
   ENDIF
   
   IF B->ACT_CODE = 'S'
      REPLACE CS_OUT  WITH B->QTY
      REPLACE LBS_OUT WITH B->LBS
   ELSE
      REPLACE CS_IN   WITH B->QTY
   ENDIF
   REPLACE SALESMAN  WITH B->SALESMAN
   REPLACE PO_NBR    WITH B->PO_NBR
   REPLACE PO_SUFFIX WITH B->PO_SUFFIX
   SELECT B
   SKIP
   
ENDDO

CLOSE ALL
SELECT C
DO FOX_USE WITH "&MDBFLOC.SUPPLIER INDEX &MDBFLOC.SUP_CODE", .F.

SELECT D
DO FOX_USE WITH "&MDBFLOC.BUYER INDEX &MDBFLOC.BUY_CODE", .F.

SELECT B
DO FOX_USE WITH "PO_HEAD INDEX PO_HEAD", .F.

SELECT A
USE INVNTOT EXCLUSIVE

DO WHILE .NOT. EOF()
   IF PO_NBR <> SPACE(4)
      SELECT B
      SEEK A->SALESMAN + A->PO_NBR + A->PO_SUFFIX
      IF .NOT. EOF()
         SELECT A
         REPLACE RSUPCODE WITH B->RSUPCODE
         REPLACE BBUYCODE WITH B->BBUYCODE
         REPLACE BUY_CODE WITH B->BUY_CODE
         REPLACE SUP_CODE WITH B->SUP_CODE
      ENDIF
      
      SELECT A
      IF CS_OUT <> 0
         SELECT D
         SEEK A->BUY_CODE
         IF .NOT. EOF()
            SELECT A
            REPLACE NAME WITH D->NAME
         ELSE
            REPLACE NAME WITH 'NOT ON FILE'
         ENDIF
      ELSE
         SELECT C
         SEEK A->SUP_CODE
         IF .NOT. EOF()
            SELECT A
            REPLACE NAME WITH C->NAME
         ELSE
            REPLACE NAME WITH 'NOT ON FILE'
         ENDIF
      ENDIF
   ENDIF
   SELECT A
   SKIP
ENDDO
CLOSE DATA


SELECT B
USE EXCL_TOT EXCLUSIVE
DELETE ALL
PACK
APPEND BLANK
REPLACE FREEZER WITH 'REPORT DT'
REPLACE PRODUCT WITH DTOC(DATE())


SELECT A
USE INVNTOT EXCLUSIVE
INDEX ON FREEZ_LOC + PROD_DESC + SUBSTR(DTOC(ACT_DATE),7,4) + SUBSTR(DTOC(ACT_DATE),1,5) TO INVNTOT
USE INVNTOT INDEX INVNTOT EXCLUSIVE

DO CASE
CASE MHP_OPT = 'N'
   SET FILTER TO SALESMAN <> '50'
CASE MHP_OPT = 'H'
   SET FILTER TO SALESMAN = '50'
ENDCASE
GOTO TOP

MPRTIT = .F.
MBEGIN_DT = DATE() -31

SET CONSOLE OFF
SET PRINT TO C:\COMPINFO\PRT_FILE.TXT
SET DEVICE TO PRINT
SET PRINT ON

MLINE = 99

IF MCHOICE = 'A'
   MPRT_SHORT = .F.
ELSE
   MPRT_SHORT = .T.
ENDIF

MPRT_PROD = .F.
DO WHILE .NOT. EOF()
   STORE FREEZ_LOC TO MFREEZ_LOC
   MPRT_FREEZ = .T.
   
   DO WHILE .NOT. EOF() .AND. FREEZ_LOC = MFREEZ_LOC
      
      STORE PROD_DESC TO MPROD_DESC
      MCASES = 0
      MCS_IN = 0
      MCS_OUT = 0
      
      STORE RECNO() TO MRECNO
      
      DO WHILE .NOT. EOF() .AND. FREEZ_LOC = MFREEZ_LOC .AND. PROD_DESC = MPROD_DESC
         MCASES  = MCASES + CASE_LEFT + CS_OUT + CS_IN
         MCS_IN  = MCS_IN + CS_IN
         MCS_OUT = MCS_OUT + CS_OUT
         SKIP
      ENDDO
      
      IF MCS_IN = 0 .AND. MCS_OUT = 0
         LOOP
      ENDIF
      
      
      IF MPRT_SHORT
         IF MCASES >= 0
            LOOP
         ENDIF
      ENDIF
      
      IF MPRT_PROD
         SELECT B
         APPEND BLANK
         SELECT A
         ?
         MPRT_PROD = .F.
         MLINE = MLINE + 1
      ENDIF
      
      MCASES = 0
      GOTO MRECNO
      
      DO WHILE .NOT. EOF() .AND. FREEZ_LOC = MFREEZ_LOC .AND. PROD_DESC = MPROD_DESC
         IF CASE_LEFT = 0 .AND. CS_OUT = 0 .AND. CS_IN = 0
            SKIP
            LOOP
         ENDIF
         IF MPRT_FREEZ
            ?
            ? MFREEZ_LOC
            SELECT B
            APPEND BLANK
            MLINE = MLINE + 2
            MPRT_FREEZ = .F.
         ENDIF
         IF MLINE > 58
            IF MLINE <> 99
               EJECT
            ENDIF
            ? DTOC(DATE()) + SPACE(10) + 'Inventory Activity'
            ? TIME()
            ?
            ? 'FREEZER                                     PROD    FRZR    CUST    FRZR'
            ? 'PRODUCT  ACT DATE      PO #       BEGIN       IN      IN     OUT     OUT     LEFT'
            ?
            ? MFREEZ_LOC
            ?
            MLINE = 8
         ENDIF
         MLINE = MLINE + 1
         
         SELECT B
         APPEND BLANK
         REPLACE FREEZER WITH MFREEZ_LOC
         REPLACE PRODUCT WITH MPROD_DESC
         SELECT A
         ? MPROD_DESC + SPACE(2)
         MPRT_PROD = .T.
         IF ACT_DATE = MBEGIN_DT
            ?? 'BEGIN BAL '   
            SELECT B
            REPLACE IDATE WITH 'BEGIN BAL'
            SELECT A
         ELSE
            ?? DTOC(ACT_DATE) 
            SELECT B
            REPLACE IDATE WITH DTOC(A->ACT_DATE)
            SELECT A
         ENDIF
         ?? SPACE(2)
         
         IF PO_NBR <> SPACE(4)
            IF SALESMAN = SPACE(2)
               MPO_NBR = SPACE(3)
            ELSE
               MPO_NBR = SALESMAN + '-'
            ENDIF
            
            MPO_NBR = MPO_NBR + PO_NBR
            IF PO_SUFFIX = ' '
               MPO_NBR = MPO_NBR + SPACE(2)
            ELSE
               MPO_NBR = MPO_NBR + '-' + PO_SUFFIX
            ENDIF
            SELECT B
            REPLACE PO WITH MPO_NBR
            SELECT A
            
            IF SALESMAN <> '  '
               ?? SALESMAN + '-'
            ELSE
               ?? SPACE(3)
            ENDIF
            ?? PO_NBR
            IF PO_SUFFIX <> ' '
               ?? '-' + PO_SUFFIX
            ELSE
               ?? SPACE(2)
            ENDIF
         ELSE
            ?? SPACE(9)
         ENDIF
         ?? SPACE(3)
         
         MCASES = MCASES + CASE_LEFT + CS_OUT + CS_IN
         
         IF CASE_LEFT <> 0
            ?? TRANSFORM(CASE_LEFT, '999,999') 
            SELECT B
            REPLACE BEGIN WITH A->CASE_LEFT
            SELECT A
         ELSE
            ?? SPACE(7) 
         ENDIF
         ?? SPACE(2)
         
         IF CS_IN  <> 0
            IF RSUPCODE <> 'INVN'
               ?? TRANSFORM(CS_IN, '999,999') + SPACE(1) + SPACE(8)
               SELECT B
               REPLACE PROD_IN WITH A->CS_IN
               SELECT A
            ELSE
               ?? SPACE(8) + TRANSFORM(CS_IN, '999,999') + SPACE(1)
               SELECT B
               REPLACE FRZR_IN WITH A->CS_IN
               SELECT A
            ENDIF
         ELSE
            ?? SPACE(16)
         ENDIF
         
         IF CS_OUT  <> 0
            IF BBUYCODE <> 'INVN'
               ?? TRANSFORM(CS_OUT, '999,999') + SPACE(1) + SPACE(8)
               SELECT B
               REPLACE CUST_OUT WITH A->CS_OUT
               SELECT A
            ELSE
               ?? SPACE(8) + TRANSFORM(CS_OUT, '999,999') + SPACE(1) 
               SELECT B
               REPLACE FRZR_OUT WITH A->CS_OUT
               SELECT A
            ENDIF
         ELSE
            ?? SPACE(16)
         ENDIF
         ?? TRANSFORM(MCASES, '999,999') + SPACE(3)
         ?? NAME
         SELECT B
         REPLACE LEFT WITH MCASES
         REPLACE DESCRIP WITH A->NAME
         
         SELECT A
         SKIP
      ENDDO
   ENDDO
ENDDO   

SET DEVICE TO SCREEN
SET PRINT OFF
SET PRINT TO
SET CONSOLE ON

CLOSE DATA
QUIT
*Formatted by: ToolBox Ver. 1.2  on 3/26/18 at 4:38 PM.
